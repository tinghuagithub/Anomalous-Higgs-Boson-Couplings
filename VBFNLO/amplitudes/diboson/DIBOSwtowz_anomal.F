c here are 2 subroutines DIBOSwptowpzora DIBOSwmtowmzora

      subroutine DIBOSwptowpz_an(P,N,wplus)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ -> ve e+ mu- mu+   
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   6)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  14) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      INTEGER N
      REAL*8 Q(0:3), P(0:3,2:5)
      complex*16 wplus(0:5)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(2:5), ihel
      DATA (NHEL(IHEL),IHEL=2,5) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2) = wve(i,N)
            w(i,3) = wep(i,N)
            w(i,4) = wmu(i,N)
            w(i,5) = wmubar(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

      call anomal_formfactor(q,q,q,q) ! only first entry relevant

      if (.not.lswitch) then
         CALL IXXXXX(P(0,3   ),ZERO ,NHEL(2   ),-1,W(1,2   ))
         CALL OXXXXX(P(0,2   ),ZERO ,NHEL(3   ),+1,W(1,3   ))        
         CALL OXXXXX(P(0,5   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
                            
      endif  
      do mu = 0,3
      CALL DIBOSVCARTX(Q(0     ),WMASS ,Wwidth,MU,-1,W(1,1   )) 
      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GWF ,AMP(1   ))            
      CALL jaww_anomal3(W(1,1   ),W(1,6   ),W(1,8   ))                        
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GAL ,AMP(2   ))            
      CALL jzww_anomal3(W(1,1   ),W(1,6   ), W(1, 9   )) 
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,9   ),GZL ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GZL ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GAL ,ZERO    ,AWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,3   ),W(1,12  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,14  ),GZL ,AMP(6   ))              
      wplus(mu) = -AMP( 1)-AMP( 2)-AMP( 3)-AMP( 4)-AMP( 5)-AMP(6)
      enddo
      wplus(4) = dcmplx(q(0),q(3))
      wplus(5) = dcmplx(q(1),q(2))
c
      return
      END


      subroutine DIBOSwmtowmz_an(P,N,wminus)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- -> e- ve~ mu- mu+   
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   6) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  14) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      INTEGER N
      REAL*8 Q(0:3), P(0:3,2:5)
      complex*16 wminus(0:5)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(2:5), ihel
      DATA (NHEL(IHEL),IHEL=2,5) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2) = wve(i,N)
            w(i,3) = wep(i,N)
            w(i,4) = wmu(i,N)
            w(i,5) = wmubar(i,N)
         enddo

      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

      call anomal_formfactor(q,q,q,q) ! only first entry relevant

      if (.not.lswitch) then
         CALL IXXXXX(P(0,3   ),ZERO ,NHEL(2   ),-1,W(1,2   ))
         CALL OXXXXX(P(0,2   ),ZERO ,NHEL(3   ),+1,W(1,3   ))        
         CALL OXXXXX(P(0,5   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
                             
      endif  
      do mu = 0,3
      CALL DIBOSVCARTX(Q(0     ),WMASS ,Wwidth,MU,-1,W(1,1   )) 
      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))
      CALL jaww_anomal3(W(1,6   ),W(1,1   ),W(1,7   ))    
!       CALL JVVXXX(W(1,6   ),W(1,1   ),GWWA ,ZERO  ,AWIDTH  ,W(1,7   )) 
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GAL ,AMP(1   ))            
      CALL jzww_anomal3(W(1,6   ),W(1,1   ), W(1, 8   )) 
!       CALL JVVXXX(W(1,6   ),W(1,1   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
!      &     8   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GZL ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GAL ,AMP(4   ))            
      CALL JIOXXX(W(1,10  ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GZL ,AMP(5   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,14  ),GZL ,AMP(6   ))            
      wminus(mu) = -AMP( 1)-AMP( 2)-AMP( 3)-AMP( 4)-AMP( 5)-AMP(6)
      enddo


      wminus(4) = dcmplx(q(0),q(3))
      wminus(5) = dcmplx(q(1),q(2))
c
      return
      END

             
