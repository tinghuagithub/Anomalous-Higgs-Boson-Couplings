      SUBROUTINE ZZ_ATOZZ(v,N,myazz,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a -> e- e+ mu- mu+  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   12)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  20)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:5), Q(0:3), v(0:3,6)
      double complex myazz(0:5)
      integer NW                ! = 0: all diagrams, = 1: no non resonant diagrams

C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"          
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/process.inc"
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu, N
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(6,NWAVEFUNCS)

c  lepton spinors and W+- polarization vectors

#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)

C                                                                          
C ----------
C BEGIN CODE
C ----------

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
      enddo

      if (lswitch) then      ! read in lepton an W states from common block
         do i =1,6
            w(i,2) = wve(i,N)
            w(i,3) = wep(i,N)
            w(i,4) = wmu(i,N)
            w(i,5) = wvm(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo
c
      do mu = 0,3
      CALL DIBOSVCARTX(Q(0     ),ZERO ,ZERO,MU,-1,W(1,1   )) 
      CALL JIOXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,6   ))  !!! epem->a
      CALL FVOXXX(W(1,4   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL JIOXXX(W(1,3   ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,8   ))  !!! epem->Z  
      CALL FVOXXX(W(1,4   ),W(1,8   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,1   ),GAL ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,10  ),W(1,6   ),GAL ,AMP(3   ))            
      CALL IOVXXX(W(1,5   ),W(1,10  ),W(1,8   ),GZL ,AMP(4   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL JIOXXX(W(1,11  ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,11  ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GZL ,AMP(6   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL JIOXXX(W(1,3   ),W(1,14  ),GAL ,ZERO    ,AWIDTH  ,W(1,15  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,15  ),GAL ,AMP(7   ))            
      CALL JIOXXX(W(1,3   ),W(1,14  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,16  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,16  ),GZL ,AMP(8   ))            
 

         AMP( 9)=0d0
         AMP(10)=0d0
         AMP(11)=0d0
      
c no AZZ vertex in SM
      myazz(   mu) = -AMP(11)
      if (narrowwidth.eq.0) then
      myazz(   mu) = myazz(   mu) 
     &             -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)
     &             -AMP( 9)-AMP( 10)
      endif
      enddo
      myazz(4) = dcmplx(q(0),q(3))
      myazz(5) = dcmplx(q(1),q(2))
c
      return

      END


      SUBROUTINE ZZ_ZTOZZ(v,N,myazz,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z -> e- e+ mu- mu+  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   12)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  20)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:5), Q(0:3), v(0:3,6)
      double complex myazz(0:5)
      INTEGER NW ! = 0: all diagrams, = 1: no non resonant diagrams
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"          
#include "VBFNLO/utilities/process.inc"
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu, N
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(6,NWAVEFUNCS)

c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
      enddo

      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2) = wve(i,N)
            w(i,3) = wep(i,N)
            w(i,4) = wmu(i,N)
            w(i,5) = wvm(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo
c
      do mu = 0,3
      CALL DIBOSVCARTX(Q(0),ZMASS ,ZWIDTH, MU,-1,W(1,1   ))
      CALL JIOXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,6   ))   ! e+e->a
      CALL FVOXXX(W(1,4   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GZL ,AMP(1   ))            
      CALL JIOXXX(W(1,3   ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,8   ))   ! e+e->z
      CALL FVOXXX(W(1,4   ),W(1,8   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,1   ),GZL ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,10  ),W(1,6   ),GAL ,AMP(3   ))            
      CALL IOVXXX(W(1,5   ),W(1,10  ),W(1,8   ),GZL ,AMP(4   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL JIOXXX(W(1,11  ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,11  ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GZL ,AMP(6   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL JIOXXX(W(1,3   ),W(1,14  ),GAL ,ZERO    ,AWIDTH  ,W(1,15  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,15  ),GAL ,AMP(7   ))            
      CALL JIOXXX(W(1,3   ),W(1,14  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,16  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,16  ),GZL ,AMP(8   ))            
         AMP( 9)=0d0
         AMP(10)=0d0
         AMP(11)=0d0
         AMP(12)=0d0


c no ZZZ vertex in SM
      myazz(   mu) = -AMP(  12)
      if (narrowwidth.eq.0) then
      myazz(   mu) = myazz(   mu)
     &             -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)
     &             -AMP(   9)-AMP(   10)-AMP( 11)
      endif
      enddo
      myazz(4) = dcmplx(q(0),q(3))
      myazz(5) = dcmplx(q(1),q(2))

      END


      SUBROUTINE ZZ_HTOZZ(v,N,myhzz,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : h -> e- e+ mu- mu+  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   4)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  9)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:5), Q(0:3), v(0:3,4)
      double complex myhzz
      INTEGER NW ! = 0: all diagrams, = 1: no non resonant diagrams
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/global.inc"          
#include "VBFNLO/utilities/coupl.inc"          
#include "VBFNLO/utilities/process.inc"
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu, N
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(6,NWAVEFUNCS)

c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
      enddo

      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2) = wve(i,N)
            w(i,3) = wep(i,N)
            w(i,4) = wmu(i,N)
            w(i,5) = wvm(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo
c
      CALL SXXXXX(Q(0     ),-1,W(1,1   ))                         
      CALL JIOXXX(W(1,3   ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,6   ))    
      CALL JIOXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,5   ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,8   ))    
      CALL JIOXXX(W(1,5   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    

      CALL VVHAXX(W(1,6   ),W(1,8   ),W(1,1   ),2,2,AMP(1   ))            
      CALL VVHAXX(W(1,7   ),W(1,8   ),W(1,1   ),1,2,AMP(2   ))            
      CALL VVHAXX(W(1,6   ),W(1,9   ),W(1,1   ),2,1,AMP(3   ))            
      CALL VVHAXX(W(1,7   ),W(1,9   ),W(1,1   ),1,1,AMP(4   ))            

      myhzz = +AMP(   1)
      if (narrowwidth.eq.0) then
      myhzz = myhzz     +AMP(   2)+AMP(   3)+AMP(   4)
      endif

      END



