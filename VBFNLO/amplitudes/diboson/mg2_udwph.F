      SUBROUTINE SUDWPH(P,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u d~ -> e+ ve h  
C  
C Crossing   1 is u d~ -> e+ ve h  
      IMPLICIT NONE
C  
C CONSTANTS
C  
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl.inc"

      integer    nexternal
      integer    maxamps, maxflow
      parameter (maxamps=    1,maxflow=   1)
      parameter (nexternal=  5)
      integer    nincoming
      parameter (nincoming=  2)
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  16, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
      integer    lmaxconfigs
      parameter (lmaxconfigs=4000)       !Used for iforest
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T
      REAL*8 UDWPHL
      INTEGER IHEL,IDEN(NCROSS)!,IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,I!,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxflow)
      common/to_amps160/  amp2,       jamp2

      character*79         hel_buff
c      common/to_helicity/  hel_buff

      REAL*8 POL(2)
c      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrix160/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.true./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    1/          
      DATA jamp2(0) /   1/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) / 1, 1, 1, 1,-1/
c      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  1/

C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
c     CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
c     DO IHEL=1,NEXTERNAL
c       JC(IHEL) = +1
c     ENDDO
c      
c     IF (multi_channel) THEN
c        DO IHEL=1,NGRAPHS
c            amp2(ihel)=0d0
c        ENDDO
c        DO IHEL=1,int(jamp2(0))
c            jamp2(ihel)=0d0
c        ENDDO
c     ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,1!NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=UDWPHL(P )!,NHEL(1,IHEL),JC(1))            
c             DO JJ=1,nincoming
c               IF(POL(JJ).NE.1d0.AND.
c    &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
c                 T=T*ABS(POL(JJ))
c               ELSE IF(POL(JJ).NE.1d0)THEN
c                 T=T*(2d0-ABS(POL(JJ)))
c               ENDIF
c             ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=UDWPHL(P)! ,NHEL(1,IHEL),JC(1))            
c            DO JJ=1,nincoming
c              IF(POL(JJ).NE.1d0.AND.
c    &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
c                T=T*ABS(POL(JJ))
c              ELSE IF(POL(JJ).NE.1d0)THEN
c                T=T*(2d0-ABS(POL(JJ)))
c              ENDIF
c            ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
c         ELSE
c             ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION UDWPHL(P)!,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : u d~ -> e+ ve h  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   1,NEIGEN=  1) 
#include "VBFNLO/utilities/global.inc"

      integer    nexternal
      integer    maxamps, maxflow
      parameter (maxamps=    1,maxflow=   1)
      parameter (nexternal=  5)
      integer    nincoming
      parameter (nincoming=  2)

      include "tensor.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   7, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
c      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxflow)
      common/to_amps160/  amp2,       jamp2
#include "VBFNLO/utilities/coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     3/                                  
C               T[ 2, 1]                                                   
C ----------
C BEGIN CODE
C ----------

c      print*,"-----------------------------------------"
c      print*,"in mg2_udwph.F"
c      print*,"p",p
c      print*,"nhel",NHEL
c      print*,"ic",IC

        do i=1,6
            w(i,3) = wep(i,1)
            w(i,4) = wve(i,1)
            w(i,5) = hig(i,1)
        enddo

      CALL IXXXXX(P(0,1   ),ZERO ,-1,+1,W(1,1   ))        
      CALL OXXXXX(P(0,2   ),ZERO ,1,-1,W(1,2   ))        
c      CALL IXXXXX(P(0,3   ),ZERO ,1,-1,W(1,3   ))        
c      CALL OXXXXX(P(0,4   ),ZERO ,-1,+1,W(1,4   ))        

c      CALL SXXXXX(P(0,5   ),+1,W(1,5   ))                         
      CALL JIOXXX(W(1,1   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
      CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL VVSXXX(W(1,6   ),W(1,7   ),W(1,5   ),GWWH ,AMP(1   ))           

c      print*, "amp ", amp

      JAMP(   1) = +AMP(   1)
      UDWPHL = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          UDWPHL =UDWPHL+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
c      print*,"UDWPHL ",UDWPHL
      END
       
       
