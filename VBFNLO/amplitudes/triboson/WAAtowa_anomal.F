c ------------------------------------------------------------

      SUBROUTINE WMTOWAnew_anomal(v,N,h,wma,nA,NW)

      IMPLICIT NONE

      REAL*8 P(0:3,2:5), v(0:3,6)
      complex*16 wma(0:5)
      integer lsign(2:5,4),ll,mu,h,N
      integer nA,NW ! discriminate between the two photons

      !possible lepton helicities: 
      data (lsign(ll,1),ll=2,5) / -1, -1, +1, +1/ !h=1
      data (lsign(ll,2),ll=2,5) / -1, -1, -1, +1/ !h=2
      data (lsign(ll,3),ll=2,5) / -1, -1, +1, -1/ !h=3
      data (lsign(ll,4),ll=2,5) / -1, -1, -1, -1/ !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         if (nA.eq.1) then
            P(mu,4) = v(mu,3)
         elseif (nA.eq.2) then
            P(mu,4) = v(mu,4)
         endif
      enddo

      call WMTOWA1new_anomal(P,N,lsign(2,h),wma,nA,NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE WMTOWA1new_anomal(P,N,lsign,wma,nA,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- -> mu- vm~ a  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5), Q(0:3)
      INTEGER N
      COMPLEX*16 wma(0:5)
      INTEGER lsign(2:5)
      integer nA,NW 

C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and W+-, Z/A polarization vectors
      include 'tensor.inc'

      logical lswitch
      parameter (lswitch=.true.)

C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            if (nA.eq.1) then
               w(i,4)  = atau1(i,N)
            elseif (nA.eq.2) then
               w(i,4)  = atau2(i,N)
            endif
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)
      enddo

      if (.not.lswitch) then     
         CALL OXXXXX(P(0,2   ),ZERO ,  lsign(2),+1, W(1,2   )) ! mu-       
         CALL IXXXXX(P(0,3   ),ZERO , -lsign(3),-1, W(1,3   )) ! vm~       
         CALL VXXXXX(P(0,4   ),ZERO ,  lsign(3+nA),+1, W(1,4   )) ! A
         print*,' mu  ',(wmu(i,N)/w(i,2),i=1,6)
         print*,' vm  ',(wvm(i,N)/w(i,3),i=1,6)
         print*,' A   ',(atau(i,N)/w(i,4),i=1,6)
      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))
      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,5   ))  
  
c      CALL VVVXXX(W(1,5   ),W(1,1   ),W(1,4   ),GWWA ,AMP(1   ))    
      CALL wwa_anomal3(W(1,5   ),W(1,1   ),W(1,4   ),AMP(1   ))    
       
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,2   ),W(1,4   ),GAL ,AMP(2   ))            
      wma(mu) = +AMP(   1)
      if (NW .eq. 0) then
        wma(mu) = wma(mu) +AMP(   2)
      endif
      enddo
      wma(4) = dcmplx(q(0),q(3))
      wma(5) = dcmplx(q(1),q(2))
c
      return
      END


c----------------------------------------------------------------------

      SUBROUTINE WPTOWAnew_anomal(v,N,h,wpa,nA,NW)

      IMPLICIT NONE

      REAL*8 v(0:3,6)
      REAL*8 P(0:3,2:5)
      
      complex*16 wpa(0:5)
      integer lsign(2:5,4),ll,mu,h,N
      integer nA,NW ! discriminate between the two photons

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,5) / -1, -1, +1, +1/ !h=1
      data (lsign(ll,2),ll=2,5) / -1, -1, -1, +1/ !h=2
      data (lsign(ll,3),ll=2,5) / -1, -1, +1, -1/ !h=3
      data (lsign(ll,4),ll=2,5) / -1, -1, -1, -1/ !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         if (nA.eq.1) then
            P(mu,4) = v(mu,3)
         elseif(nA.eq.2) then
            P(mu,4) = v(mu,4)
         endif
      enddo

      call WPTOWA1new_anomal(P,N,lsign(2,h),wpa,nA,NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE WPTOWA1new_anomal(P,N,lsign,wpa,nA,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ -> ve e+ a  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   2)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=   6)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5), Q(0:3)
      INTEGER N
      COMPLEX*16 wpa(0:5)
      INTEGER lsign(2:5)
      integer nA,NW 
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and W+-, Z/A polarization vectors
      include 'tensor.inc'

  
C GLOBAL VARIABLES
  
#include "VBFNLO/utilities/coupl.inc"

      logical lswitch
      parameter (lswitch=.true.)
                       
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            if (nA.eq.1) then
               w(i,4)  = atau1(i,N)
            elseif (nA.eq.2) then
               w(i,4)  = atau2(i,N)
            endif
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)
      enddo

      if (.not.lswitch) then     
         CALL OXXXXX(P(0,2   ),ZERO ,  lsign(2),+1,W(1,2   )) ! ve       
         CALL IXXXXX(P(0,3   ),ZERO , -lsign(3),-1,W(1,3   )) ! e+       
         CALL VXXXXX(P(0,4   ),ZERO ,  lsign(3+nA),+1, W(1,4   )) ! A
         print*,' ve  ',(wve(i,N)/w(i,2),i=1,6)
         print*,' e+  ',(wep(i,N)/w(i,3),i=1,6)
         print*,' A  ',(atau(i,N)/w(i,4),i=1,6)
      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))
      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,5   )) 
   
c      CALL VVVXXX(W(1,1   ),W(1,5   ),W(1,4   ),GWWA ,AMP(1   ))  
      CALL wwa_anomal3(W(1,1   ),W(1,5   ),W(1,4   ),AMP(1   )) 
         
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,3   ),W(1,6   ),W(1,4   ),GAL ,AMP(2   ))            
c      wpa(mu) = -AMP(   1)-AMP(   2)
      wpa(mu) = +AMP(   1)
      if (NW .eq. 0) then
        wpa(mu) = wpa(mu) +AMP(   2)
      endif
      enddo
      wpa(4) = dcmplx(q(0),q(3))
      wpa(5) = dcmplx(q(1),q(2))
c
      return
      END
