c ------------------------------------------------------------

      SUBROUTINE WPTOWAA(v,N,h,wpaa,nA,NW)

      IMPLICIT NONE

      REAL*8 P(0:3,2:5), v(0:3,6)
      complex*16 wpaa(0:5)
      integer lsign(2:5,4),ll,mu,h,N
      integer nA,NW

      !possible lepton helicities: 
      data (lsign(ll,1),ll=2,5) / -1, -1, +1, +1/ !h=1
      data (lsign(ll,2),ll=2,5) / -1, -1, -1, +1/ !h=2
      data (lsign(ll,3),ll=2,5) / -1, -1, +1, -1/ !h=3
      data (lsign(ll,4),ll=2,5) / -1, -1, -1, -1/ !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
      enddo

      call WPTOWAA1(P,N,lsign(2,h),wpaa,nA,NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------
      SUBROUTINE WPTOWAA1(P,N,lsign,wpaa,nA,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ -> ve e+ a a  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   7) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  13) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5), Q(0:3)
      INTEGER N
      COMPLEX*16 wpaa(0:5)
      INTEGER lsign(2:5)
      integer nA, NW

C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and W+-,Z/A polarization vectors
      include 'tensor.inc'

      logical lswitch
      parameter (lswitch=.true.)

C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"

C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = atau1(i,N)
            w(i,5)  = atau2(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo
      do mu=0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
      CALL JVVXXX(W(1,6   ),W(1,4   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     7   ))                                                          
      CALL VVVXXX(W(1,1   ),W(1,7   ),W(1,5   ),GWWA ,AMP(1   ))           
      CALL JVVXXX(W(1,4   ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     8   ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,5   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,2   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL VVVXXX(W(1,8   ),W(1,6   ),W(1,5   ),GWWA ,AMP(3   ))           
      CALL W3W3XX(W(1,1   ),W(1,4   ),W(1,6   ),W(1,5   ),GWWA ,GWWA ,     
     &     AMP(4   ))                                                      
      CALL FVIXXX(W(1,3   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JVVXXX(W(1,5   ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     11  ))                                                          
      CALL IOVXXX(W(1,10  ),W(1,2   ),W(1,11  ),GWF ,AMP(5   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL FVOXXX(W(1,12  ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,5   ),GAL ,AMP(6   ))            
      CALL IOVXXX(W(1,10  ),W(1,12  ),W(1,5   ),GAL ,AMP(7   ))            
      wpaa(mu) = AMP(   1)+AMP(   3)+AMP(   4)
      if (NW .eq. 0) then
        wpaa(mu) = wpaa(mu) 
     &             +AMP(   2)+AMP(   5)+AMP(   6)+AMP(   7)
      endif
      enddo
      wpaa(4) = dcmplx(q(0),q(3))
      wpaa(5) = dcmplx(q(1),q(2))
      return
      END

c ------------------------------------------------------------

      SUBROUTINE WMTOWAA(v,N,h,wmaa,nA,NW)

      IMPLICIT NONE

      REAL*8 P(0:3,2:5), v(0:3,6)
      complex*16 wmaa(0:5)
      integer lsign(2:5,4),ll,mu,h,N
      integer nA,NW

      !possible lepton helicities: 
      data (lsign(ll,1),ll=2,5) / -1, -1, +1, +1/ !h=1
      data (lsign(ll,2),ll=2,5) / -1, -1, -1, +1/ !h=2
      data (lsign(ll,3),ll=2,5) / -1, -1, +1, -1/ !h=3
      data (lsign(ll,4),ll=2,5) / -1, -1, -1, -1/ !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
      enddo

      call WMTOWAA1(P,N,lsign(2,h),wmaa,nA,NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE WMTOWAA1(P,N,lsign,wmaa,nA,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- -> mu- vm~ a a  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   7) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  13) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5), Q(0:3)
      INTEGER N
      COMPLEX*16 wmaa(0:5)
      INTEGER lsign(2:5)
      integer nA,NW
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and W+-,Z/A polarization vectors
      include 'tensor.inc'

      logical lswitch
      parameter (lswitch=.true.)

C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"

C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = atau1(i,N)
            w(i,5)  = atau2(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo
      do mu=0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
      CALL JVVXXX(W(1,4   ),W(1,6   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     7   ))                                                          
      CALL VVVXXX(W(1,7   ),W(1,1   ),W(1,5   ),GWWA ,AMP(1   ))           
      CALL JVVXXX(W(1,1   ),W(1,4   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     8   ))                                                          
      CALL FVOXXX(W(1,2   ),W(1,5   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,3   ),W(1,9   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL W3W3XX(W(1,6   ),W(1,4   ),W(1,1   ),W(1,5   ),GWWA ,GWWA ,     
     &     AMP(3   ))                                                      
      CALL VVVXXX(W(1,6   ),W(1,8   ),W(1,5   ),GWWA ,AMP(4   ))           
      CALL FVOXXX(W(1,2   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JVVXXX(W(1,1   ),W(1,5   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     11  ))                                                          
      CALL IOVXXX(W(1,3   ),W(1,10  ),W(1,11  ),GWF ,AMP(5   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL FVIXXX(W(1,12  ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,13  ),W(1,2   ),W(1,5   ),GAL ,AMP(6   ))            
      CALL IOVXXX(W(1,12  ),W(1,10  ),W(1,5   ),GAL ,AMP(7   ))            

      wmaa(mu) = AMP(   1)+AMP(   3)+AMP(   4)
      if (NW .eq. 0) then
        wmaa(mu) = wmaa(mu) 
     &             +AMP(   2)+AMP(   5)+AMP(   6)+AMP(   7)
      endif
      enddo
      wmaa(4) = dcmplx(q(0),q(3))
      wmaa(5) = dcmplx(q(1),q(2))
      return
      END
