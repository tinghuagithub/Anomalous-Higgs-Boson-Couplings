c
c this is the modified version of WWWtoww.F that includes
c anomalous couplings
c

C------------------------------------------------------------------------------
C
C	THIS FILE CONTAINS SUBROUTINES TO CALCULATE LEPTONIC TENSORS
C	FOR A PROCESS A/Z --> WW --> LEPTONS
C	
C  LIST OF SUBROUTINES:
C
C    A --> VE E+ MU- VMU~
C	SUBROUTINE WWW_ATOWW1		! madgraph generated amplitude
C
C    A --> MU- VMU~ VT TAU+
C	SUBROUTINE WWW_ATOWW2		! madgraph generated amplitude
C
C    A --> VE E+ TAU- VT~
C	SUBROUTINE WWW_ATOWW3		! madgraph generated amplitude
C
C    Z --> VE E+ MU- VMU~
C	SUBROUTINE WWW_ZTOWWW1		! madgraph generated amplitude
C
C    Z --> MU- VMU~ VT TAU+
C	SUBROUTINE WWW_ZTOWW2		! madgraph generated amplitude
C
C    Z --> VE E+ TAU- VT~
C	SUBROUTINE WWW_ZTOWW3		! madgraph generated amplitude
C
C	SUBROUTINE TRIPLEWVCARTX		! computes effective wave function
C						! of internal vector boson line
C
C------------------------------------------------------------------------------

C------------------------------------------------------------------------------

      SUBROUTINE WWW_ATOWW1_anomal(P,N,BOS,A1,NW)

      IMPLICIT NONE

C ARGUMENTS
      DOUBLE PRECISION P(0:3,2:7)
      INTEGER N, BOS,NW
      DOUBLE COMPLEX A1(0:5)

C LOCAL VARIABLES
      DOUBLE PRECISION PBAR(0:3,1:4)
      INTEGER I,MU
      DOUBLE PRECISION RZERO
      PARAMETER(RZERO = 0.0D0)

C-----------BEGIN CODE--------------------

      DO I=1,4
         DO MU = 0,3
         PBAR(MU,I) = RZERO
         ENDDO
      ENDDO

      DO MU = 0,3
         PBAR(MU,1) = P(MU,2)
         PBAR(MU,2) = P(MU,3)
         PBAR(MU,3) = P(MU,4)
         PBAR(MU,4) = P(MU,5)
      ENDDO

      IF(BOS.EQ.343) THEN
         CALL WWWP_ATOWW1A_anomal(PBAR,N,A1(0),NW)
      ELSE
         CALL WWWM_ATOWW1A_anomal(PBAR,N,A1(0),NW)
      ENDIF
      END

      SUBROUTINE WWWP_ATOWW1A_anomal(P,N,A1,NW)
C  
C Generated by MadGraph II, SLIGHTLY CHANGED
C RETURNS AMPLITUDE
C FOR PROCESS : a -> ve e+ mu- vm~
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=3)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=10)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS
C  
      DOUBLE PRECISION P(0:3,1:4)                                    !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX A1(0:5)                                   !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS
C  
C LOCAL VARIABLES
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

      LOGICAL LSWITCH
      PARAMETER(LSWITCH =.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"


C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WVE1(I,N)
            W(I,3) = WEP1(I,N)
            W(I,4) = WMU1(I,N)
            W(I,5) = WVM1(I,N)
            W(I,6) = WP1(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) =  P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' VE  ',(WVE(I,N)/W(I,2),I=1,6)
C         PRINT*,' EP  ',(WEP(I,N)/W(I,3),I=1,6)
C         PRINT*,' MU  ',(WMU(I,N)/W(I,4),I=1,6)
C         PRINT*,' VM  ',(WVM(I,N)/W(I,5),I=1,6)
C         PRINT*,' WP1 ',(WP1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN

         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
         CALL jwmwpa_anomal3(W(1,6   ),W(1,1   ),W(1,7  ))        
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GWF ,AMP(1   ))

         A1(MU) = +AMP(   1)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
      CALL jwmwpa_anomal3(W(1,6   ),W(1,1   ),W(1,7  ))      
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GWF ,AMP(1   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,6   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,9   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,10  ),GWF ,AMP(3   ))            

      A1(MU) = +AMP(   1)+AMP(   2)+AMP(   3)
      ENDDO

      ENDIF        ! NW

      A1(4) = DCMPLX(Q(0),Q(3))
      A1(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END

C------------------------------------------------------------------------------

C------------------------------------------------------------------------------

      SUBROUTINE WWWM_ATOWW1A_anomal(P,N,A1,NW)
C  
C Generated by MadGraph II, SLIGHTLY CHANGED
C RETURNS AMPLITUDE
C FOR PROCESS : a -> ve e+ mu- vm~
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=3)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=10)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS
C  
      DOUBLE PRECISION P(0:3,1:4)               !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX A1(0:5)                    !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS
C  
C LOCAL VARIABLES
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

      LOGICAL LSWITCH
      PARAMETER(LSWITCH =.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"

C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WVE2(I,N)
            W(I,3) = WEP2(I,N)
            W(I,4) = WMU2(I,N)
            W(I,5) = WVM2(I,N)
            W(I,6) = W1P(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) =  P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' VE  ',(WVE(I,N)/W(I,2),I=1,6)
C         PRINT*,' EP  ',(WEP(I,N)/W(I,3),I=1,6)
C         PRINT*,' MU  ',(WMU(I,N)/W(I,4),I=1,6)
C         PRINT*,' VM  ',(WVM(I,N)/W(I,5),I=1,6)
C         PRINT*,' WP1 ',(WP1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN

         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
         CALL jwmwpa_anomal3(W(1,6   ),W(1,1   ),W(1,7  ))          
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GWF ,AMP(1   ))            

         A1(MU) = +AMP(   1)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
      CALL jwmwpa_anomal3(W(1,6   ),W(1,1   ),W(1,7  ))         
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GWF ,AMP(1   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,6   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,9   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,10  ),GWF ,AMP(3   ))            

      A1(MU) = +AMP(   1)+AMP(   2)+AMP(   3)
      ENDDO

      ENDIF        ! NW

      A1(4) = DCMPLX(Q(0),Q(3))
      A1(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END

C------------------------------------------------------------------------------

C------------------------------------------------------------------------------

      SUBROUTINE WWW_ATOWW2_anomal(P,N,BOS,A2,NW)

      IMPLICIT NONE

C ARGUMENTS
      DOUBLE PRECISION P(0:3,2:7)
      INTEGER N,BOS,NW
      DOUBLE COMPLEX A2(0:5)

C LOCAL VARIABLES
      DOUBLE PRECISION PBAR(0:3,1:4)
      INTEGER I,MU
      DOUBLE PRECISION RZERO
      PARAMETER(RZERO = 0.0D0)

C-----------BEGIN CODE--------------------

      DO I=1,4
         DO MU = 0,3
         PBAR(MU,I) = RZERO
         ENDDO
      ENDDO

      DO MU = 0,3
         PBAR(MU,1) = P(MU,4)
         PBAR(MU,2) = P(MU,5)
         PBAR(MU,3) = P(MU,6)
         PBAR(MU,4) = P(MU,7)
      ENDDO

      IF(BOS.EQ.343) THEN
         CALL WWWP_ATOWW2A_anomal(PBAR,N,A2(0),NW)
      ELSE
         CALL WWWM_ATOWW2A_anomal(PBAR,N,A2(0),NW)
      ENDIF

      END

      SUBROUTINE WWWP_ATOWW2A_anomal(P,N,A2,NW)
C  
C Generated by MadGraph II, SLIGHTLY CHANGED
C RETURNS AMPLITUDE
C FOR PROCESS : a -> mu- vm~ vt ta+  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=3)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=10)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,1:4)                                    !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX A2(0:5)                                   !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS

C  
C LOCAL VARIABLES 
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

      LOGICAL LSWITCH
      PARAMETER(LSWITCH = .true.)

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"
C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"

C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WMU1(I,N)
            W(I,3) = WVM1(I,N)
            W(I,4) = WVT(I,N)
            W(I,5) = WTP(I,N)
            W(I,6) = W1M(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) =  P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,4   ),LMASS,NHEL(5   ),-1,W(1,5   ))       
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' MU  ',(WMU(I,N)/W(I,2),I=1,6)
C         PRINT*,' VM  ',(WVM(I,N)/W(I,3),I=1,6)
C         PRINT*,' VT  ',(WVT(I,N)/W(I,4),I=1,6)
C         PRINT*,' TP  ',(WTP(I,N)/W(I,5),I=1,6)
C         PRINT*,' WM1 ',(WM1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN

         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
         CALL jwpawm_anomal3(W(1,1   ),W(1,6   ),W(1,8  ))                                                          
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            

         A2(MU) = +AMP(   2)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,LMASS   ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL jwpawm_anomal3(W(1,1   ),W(1,6   ),W(1,8  ))               
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,3   ),W(1,9   ),GWF ,WMASS   ,WWIDTH  ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,10  ),GWF ,AMP(3   ))            

      A2(MU) = +AMP(   1)+AMP(   2)+AMP(   3)
      ENDDO

      ENDIF        ! NW

      A2(4) = DCMPLX(Q(0),Q(3))
      A2(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END

C------------------------------------------------------------------------------

C------------------------------------------------------------------------------

      SUBROUTINE WWWM_ATOWW2A_anomal(P,N,A2,NW)
C  
C Generated by MadGraph II, SLIGHTLY CHANGED
C RETURNS AMPLITUDE
C FOR PROCESS : a -> mu- vm~ vt ta+  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=3)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=10)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,1:4)                                    !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX A2(0:5)                                   !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS

C  
C LOCAL VARIABLES 
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

      LOGICAL LSWITCH
      PARAMETER(LSWITCH = .true.)
!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"


C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WMU2(I,N)
            W(I,3) = WVM2(I,N)
            W(I,4) = WVT(I,N)
            W(I,5) = WTP(I,N)
            W(I,6) = WM1(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) =  P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,4   ),LMASS,NHEL(5   ),-1,W(1,5   ))       
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' MU  ',(WMU(I,N)/W(I,2),I=1,6)
C         PRINT*,' VM  ',(WVM(I,N)/W(I,3),I=1,6)
C         PRINT*,' VT  ',(WVT(I,N)/W(I,4),I=1,6)
C         PRINT*,' TP  ',(WTP(I,N)/W(I,5),I=1,6)
C         PRINT*,' WM1 ',(WM1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN

         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
         CALL jwpawm_anomal3(W(1,1   ),W(1,6   ),W(1,8  ))   
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            

         A2(MU) = +AMP(   2)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,LMASS   ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL jwpawm_anomal3(W(1,1   ),W(1,6   ),W(1,8  ))  
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,3   ),W(1,9   ),GWF ,WMASS   ,WWIDTH  ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,10  ),GWF ,AMP(3   ))            

      A2(MU) = +AMP(   1)+AMP(   2)+AMP(   3)
      ENDDO

      ENDIF        ! NW

      A2(4) = DCMPLX(Q(0),Q(3))
      A2(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END

C------------------------------------------------------------------------------

C------------------------------------------------------------------------------

      SUBROUTINE WWW_ATOWW3_anomal(P,N,BOS,A3,NW)

      IMPLICIT NONE

C ARGUMENTS
      DOUBLE PRECISION P(0:3,2:7)
      INTEGER N,BOS,NW
      DOUBLE COMPLEX A3(0:5)

C LOCAL VARIABLES
      DOUBLE PRECISION PBAR(0:3,1:4)
      INTEGER I,MU
      DOUBLE PRECISION RZERO
      PARAMETER(RZERO = 0.0D0)

C-----------BEGIN CODE--------------------

      DO I=1,4
         DO MU = 0,3
         PBAR(MU,I) = RZERO
         ENDDO
      ENDDO

      DO MU = 0,3
         PBAR(MU,1) = P(MU,2)
         PBAR(MU,2) = P(MU,3)
         PBAR(MU,3) = P(MU,6)
         PBAR(MU,4) = P(MU,7)
      ENDDO

      IF(BOS.EQ.343) THEN
         CALL WWWP_ATOWW3A_anomal(PBAR,N,A3(0),NW)
      ELSE
         CALL WWWM_ATOWW3A_anomal(PBAR,N,A3(0),NW)
      ENDIF

      END

      SUBROUTINE WWWP_ATOWW3A_anomal(P,N,A3,NW)
C  
C Generated by MadGraph II, SLIGHTLY CHANGED
C RETURNS AMPLITUDE
C FOR PROCESS : a -> ve e+ ta- vt~
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=3)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=10)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,1:4)                                    !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX A3(0:5)                                   !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS
C  
C LOCAL VARIABLES
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

      LOGICAL LSWITCH
      PARAMETER(LSWITCH = .true.)

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"

C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

C THIS CODE IS NOT USEFUL AND IS NEVER USED...AND PERHAPS WRONG

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WVE1(I,N)
            W(I,3) = WEP1(I,N)
            W(I,4) = WTM(I,N)
            W(I,5) = WVTBAR(I,N)
            W(I,6) = WP1(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) =  P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),LMASS,NHEL(4   ),+1,W(1,4   ))       
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' VE  ',(WVE(I,N)/W(I,2),I=1,6)
C         PRINT*,' EP  ',(WEP(I,N)/W(I,3),I=1,6)
C         PRINT*,' TM  ',(WTM(I,N)/W(I,4),I=1,6)
C         PRINT*,' VT  ',(WVTBAR(I,N)/W(I,5),I=1,6)
C         PRINT*,' WP1 ',(WP1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN

         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
         CALL jwmwpa_anomal3(W(1,6   ),W(1,1   ),W(1,7  ))  
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GWF ,AMP(1   ))            

         A3(MU) = +AMP(   1)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
      CALL jwmwpa_anomal3(W(1,6   ),W(1,1   ),W(1,7  ))  
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GWF ,AMP(1   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GAL ,LMASS   ,ZERO    ,W(1,8   ))    
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,6   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,9   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,10  ),GWF ,AMP(3   ))            

      A3(MU) = +AMP(   1)+AMP(   2)+AMP(   3)
      ENDDO

      ENDIF        ! NW

      A3(4) = DCMPLX(Q(0),Q(3))
      A3(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END

C------------------------------------------------------------------------------

C------------------------------------------------------------------------------

      SUBROUTINE WWWM_ATOWW3A_anomal(P,N,A3,NW)
C  
C Generated by MadGraph II, SLIGHTLY CHANGED
C RETURNS AMPLITUDE
C FOR PROCESS : a -> ve e+ ta- vt~
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=3)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=10)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,1:4)                                    !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX A3(0:5)                                   !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS
C  
C LOCAL VARIABLES
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

      LOGICAL LSWITCH
      PARAMETER(LSWITCH = .true.)

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"

C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WVE2(I,N)
            W(I,3) = WEP2(I,N)
            W(I,4) = WTM(I,N)
            W(I,5) = WVTBAR(I,N)
            W(I,6) = W1P(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) =  P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),LMASS,NHEL(4   ),+1,W(1,4   ))       
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' VE  ',(WVE(I,N)/W(I,2),I=1,6)
C         PRINT*,' EP  ',(WEP(I,N)/W(I,3),I=1,6)
C         PRINT*,' TM  ',(WTM(I,N)/W(I,4),I=1,6)
C         PRINT*,' VT  ',(WVTBAR(I,N)/W(I,5),I=1,6)
C         PRINT*,' WP1 ',(WP1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN

         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
         CALL jwmwpa_anomal3(W(1,6   ),W(1,1   ),W(1,7  )) 
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GWF ,AMP(1   ))            

         A3(MU) = +AMP(   1)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZERO,ZERO,MU,-1,W(1,1))
      CALL jwmwpa_anomal3(W(1,6   ),W(1,1   ),W(1,7  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GWF ,AMP(1   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GAL ,LMASS   ,ZERO    ,W(1,8   ))    
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,6   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,9   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,10  ),GWF ,AMP(3   ))            

      A3(MU) = +AMP(   1)+AMP(   2)+AMP(   3)
      ENDDO

      ENDIF        ! NW

      A3(4) = DCMPLX(Q(0),Q(3))
      A3(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END

C------------------------------------------------------------------------------

C------------------------------------------------------------------------------

      SUBROUTINE WWW_ZTOWW1_anomal(P,N,BOS,Z1,NW)

      IMPLICIT NONE

C ARGUMENTS
      DOUBLE PRECISION P(0:3,2:7)
      INTEGER N,BOS,NW
      DOUBLE COMPLEX Z1(0:5)

C LOCAL VARIABLES
      DOUBLE PRECISION PBAR(0:3,1:4)
      INTEGER I,MU
      DOUBLE PRECISION RZERO
      PARAMETER(RZERO = 0.0D0)

C-----------BEGIN CODE--------------------

      DO I=1,4
         DO MU = 0,3
         PBAR(MU,I) = RZERO
         ENDDO
      ENDDO

      DO MU = 0,3
         PBAR(MU,1) = P(MU,2)
         PBAR(MU,2) = P(MU,3)
         PBAR(MU,3) = P(MU,4)
         PBAR(MU,4) = P(MU,5)
      ENDDO

      IF(BOS.EQ.343) THEN
         CALL WWWP_ZTOWW1A_anomal(PBAR,N,Z1(0),NW)
      ELSE
         CALL WWWM_ZTOWW1A_anomal(PBAR,N,Z1(0),NW)
      ENDIF

      END

      SUBROUTINE WWWP_ZTOWW1A_anomal(P,N,Z1,NW)
C  
C Generated by MadGraph II, CHANGED SLIGHTLY
C RETURNS AMPLITUDE
C FOR PROCESS : z -> ve e+ mu- vm~
C
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=5)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=13)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS
C  
      DOUBLE PRECISION P(0:3,1:4)                                    !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX Z1(0:5)                                   !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS
C  
C LOCAL VARIABLES 
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

      LOGICAL LSWITCH
      PARAMETER(LSWITCH = .true.)

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"

C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WVE1(I,N)
            W(I,3) = WEP1(I,N)
            W(I,4) = WMU1(I,N)
            W(I,5) = WVM1(I,N)
            W(I,6) = WP1(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) =  P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' VE  ',(WVE(I,N)/W(I,2),I=1,6)
C         PRINT*,' EP  ',(WEP(I,N)/W(I,3),I=1,6)
C         PRINT*,' MU  ',(WMU(I,N)/W(I,4),I=1,6)
C         PRINT*,' VM  ',(WVM(I,N)/W(I,5),I=1,6)
C         PRINT*,' WP1 ',(WP1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN

         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
         CALL jwmwpz_anomal3(W(1,6   ),W(1,1   ),W(1,8  )) 
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            

         Z1(MU) = +AMP(   2)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GZN ,AMP(1   ))            
      CALL jwmwpz_anomal3(W(1,6   ),W(1,1   ),W(1,8  )) 
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GWF ,AMP(5   ))            

      Z1(MU) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
      ENDDO

      ENDIF        ! NW

      Z1(4) = DCMPLX(Q(0),Q(3))
      Z1(5) = DCMPLX(Q(1),Q(2))


      RETURN
      END

C------------------------------------------------------------------------------

C------------------------------------------------------------------------------

      SUBROUTINE WWWM_ZTOWW1A_anomal(P,N,Z1,NW)
C  
C Generated by MadGraph II, CHANGED SLIGHTLY
C RETURNS AMPLITUDE
C FOR PROCESS : z -> ve e+ mu- vm~
C
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=5)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=13)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS
C  
      DOUBLE PRECISION P(0:3,1:4)                                    !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX Z1(0:5)                                   !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS
C  
C LOCAL VARIABLES 
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

      LOGICAL LSWITCH
      PARAMETER(LSWITCH = .true.)

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"

C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WVE2(I,N)
            W(I,3) = WEP2(I,N)
            W(I,4) = WMU2(I,N)
            W(I,5) = WVM2(I,N)
            W(I,6) = W1P(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) =  P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' VE  ',(WVE(I,N)/W(I,2),I=1,6)
C         PRINT*,' EP  ',(WEP(I,N)/W(I,3),I=1,6)
C         PRINT*,' MU  ',(WMU(I,N)/W(I,4),I=1,6)
C         PRINT*,' VM  ',(WVM(I,N)/W(I,5),I=1,6)
C         PRINT*,' WP1 ',(WP1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN

         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
         CALL jwmwpz_anomal3(W(1,6   ),W(1,1   ),W(1,8  ))    
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            

         Z1(MU) = +AMP(   2)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GZN ,AMP(1   ))            
      CALL jwmwpz_anomal3(W(1,6   ),W(1,1   ),W(1,8  ))   
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GWF ,AMP(5   ))            

      Z1(MU) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
      ENDDO

      ENDIF        ! NW

      Z1(4) = DCMPLX(Q(0),Q(3))
      Z1(5) = DCMPLX(Q(1),Q(2))


      RETURN
      END

C------------------------------------------------------------------------------

C------------------------------------------------------------------------------

      SUBROUTINE WWW_ZTOWW2_anomal(P,N,BOS,Z2,NW)

      IMPLICIT NONE

C ARGUMENTS
      DOUBLE PRECISION P(0:3,2:7)
      INTEGER N,BOS,NW
      DOUBLE COMPLEX Z2(0:5)

C LOCAL VARIABLES
      DOUBLE PRECISION PBAR(0:3,1:4)
      INTEGER I,MU
      DOUBLE PRECISION RZERO
      PARAMETER(RZERO = 0.0D0)

C-----------BEGIN CODE--------------------

      DO I=1,4
         DO MU = 0,3
         PBAR(MU,I) = RZERO
         ENDDO
      ENDDO

      DO MU = 0,3
         PBAR(MU,1) = P(MU,4)
         PBAR(MU,2) = P(MU,5)
         PBAR(MU,3) = P(MU,6)
         PBAR(MU,4) = P(MU,7)
      ENDDO

      IF(BOS.EQ.343) THEN
         CALL WWWP_ZTOWW2A_anomal(PBAR,N,Z2(0),NW)
      ELSE
         CALL WWWM_ZTOWW2A_anomal(PBAR,N,Z2(0),NW)
      ENDIF

      END

      SUBROUTINE WWWP_ZTOWW2A_anomal(P,N,Z2,NW)
C  
C Generated by MadGraph II, CHANGED SLIGHTLY
C RETURNS AMPLITUDE
C FOR PROCESS : z -> mu- vm~ vt ta+
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=5)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=13)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,1:4)                                    !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX Z2(0:5)                                    !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS
C  
C LOCAL VARIABLES 
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

      LOGICAL LSWITCH
      PARAMETER(LSWITCH = .true.)

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"

C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WMU1(I,N)
            W(I,3) = WVM1(I,N)
            W(I,4) = WVT(I,N)
            W(I,5) = WTP(I,N)
            W(I,6) = W1M(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) = P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))
         CALL IXXXXX(P(0,4   ),LMASS,NHEL(5   ),-1,W(1,5   ))
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' MU  ',(WMU(I,N)/W(I,2),I=1,6)
C         PRINT*,' VM  ',(WVM(I,N)/W(I,3),I=1,6)
C         PRINT*,' VT  ',(WVT(I,N)/W(I,4),I=1,6)
C         PRINT*,' TP  ',(WTP(I,N)/W(I,5),I=1,6)
C         PRINT*,' WM1 ',(WM1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN

         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
         CALL jwpzwm_anomal3(W(1,1   ),W(1,6   ),W(1,8  ))       
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            

         Z2(MU) = +AMP(   2)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,LMASS   ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GZL ,AMP(1   ))            
      CALL jwpzwm_anomal3(W(1,1   ),W(1,6   ),W(1,8  ))       
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GWF ,AMP(5   ))            

      Z2(MU) = AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
      ENDDO

      ENDIF

      Z2(4) = DCMPLX(Q(0),Q(3))
      Z2(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END

C------------------------------------------------------------------------------

C------------------------------------------------------------------------------

      SUBROUTINE WWWM_ZTOWW2A_anomal(P,N,Z2,NW)
C  
C Generated by MadGraph II, CHANGED SLIGHTLY
C RETURNS AMPLITUDE
C FOR PROCESS : z -> mu- vm~ vt ta+
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=5)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=13)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,1:4)                                    !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX Z2(0:5)                                    !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS
C  
C LOCAL VARIABLES 
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

      LOGICAL LSWITCH
      PARAMETER(LSWITCH = .true.)

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"

C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

C THIS CODE IS NOT USEFUL AND IS NEVER USED...AND PERHAPS WRONG

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WMU2(I,N)
            W(I,3) = WVM2(I,N)
            W(I,4) = WVT(I,N)
            W(I,5) = WTP(I,N)
            W(I,6) = WM1(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) = P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))
         CALL IXXXXX(P(0,4   ),LMASS,NHEL(5   ),-1,W(1,5   ))
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' MU  ',(WMU(I,N)/W(I,2),I=1,6)
C         PRINT*,' VM  ',(WVM(I,N)/W(I,3),I=1,6)
C         PRINT*,' VT  ',(WVT(I,N)/W(I,4),I=1,6)
C         PRINT*,' TP  ',(WTP(I,N)/W(I,5),I=1,6)
C         PRINT*,' WM1 ',(WM1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN
         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
         CALL jwpzwm_anomal3(W(1,1   ),W(1,6   ),W(1,8  ))        
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            

         Z2(MU) = +AMP(   2)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,LMASS   ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GZL ,AMP(1   ))            
      CALL jwpzwm_anomal3(W(1,1   ),W(1,6   ),W(1,8  ))     
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GWF ,AMP(5   ))            

      Z2(MU) = AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
      ENDDO

      ENDIF        ! NW

      Z2(4) = DCMPLX(Q(0),Q(3))
      Z2(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END

C------------------------------------------------------------------------------

C------------------------------------------------------------------------------

      SUBROUTINE WWW_ZTOWW3_anomal(P,N,BOS,Z3,NW)

      IMPLICIT NONE

C ARGUMENTS
      DOUBLE PRECISION P(0:3,2:7)
      INTEGER N,BOS,NW
      DOUBLE COMPLEX Z3(0:5)

C LOCAL VARIABLES
      DOUBLE PRECISION PBAR(0:3,1:4)
      INTEGER I,MU
      DOUBLE PRECISION RZERO
      PARAMETER(RZERO = 0.0D0)

C-----------BEGIN CODE--------------------

      DO I=1,4
         DO MU = 0,3
         PBAR(MU,I) = RZERO
         ENDDO
      ENDDO

      DO MU = 0,3
         PBAR(MU,1) = P(MU,2)
         PBAR(MU,2) = P(MU,3)
         PBAR(MU,3) = P(MU,6)
         PBAR(MU,4) = P(MU,7)
      ENDDO

      IF(BOS.EQ.343) THEN
         CALL WWWP_ZTOWW3A_anomal(PBAR,N,Z3(0),NW)
      ELSE
         CALL WWWM_ZTOWW3A_anomal(PBAR,N,Z3(0),NW)
      ENDIF

      END

      SUBROUTINE WWWP_ZTOWW3A_anomal(P,N,Z3,NW)
C  
C Generated by MadGraph II, SLIGHTLY CHANGED
C RETURNS AMPLITUDE
C FOR PROCESS : z -> ve e+ ta- vt~
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=5)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=13)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS
C  
      DOUBLE PRECISION P(0:3,1:4)                                    !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX Z3(0:5)                                   !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS
C  
C LOCAL VARIABLES
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

      LOGICAL LSWITCH
      PARAMETER(LSWITCH = .true.)

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"

C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

C THIS CODE IS NOT USEFUL AND IS NEVER USED...AND PERHAPS WRONG

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WVE1(I,N)
            W(I,3) = WEP1(I,N)
            W(I,4) = WTM(I,N)
            W(I,5) = WVTBAR(I,N)
            W(I,6) = WP1(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) = P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3  ),LMASS,NHEL(4   ),+1,W(1,4   ))       
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' VE  ',(WVE(I,N)/W(I,2),I=1,6)
C         PRINT*,' EP  ',(WEP(I,N)/W(I,3),I=1,6)
C         PRINT*,' TM  ',(WTM(I,N)/W(I,4),I=1,6)
C         PRINT*,' VT  ',(WVTBAR(I,N)/W(I,5),I=1,6)
C         PRINT*,' WP1 ',(WP1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN

         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
         CALL jwmwpz_anomal3(W(1,6   ),W(1,1   ),W(1,8  )) 
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            

         Z3(MU) = +AMP(   2)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GZN ,AMP(1   ))            
      CALL jwmwpz_anomal3(W(1,6   ),W(1,1   ),W(1,8  ))     
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZL ,LMASS   ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GWF ,AMP(5   ))            

      Z3(MU) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
      ENDDO

      ENDIF        ! NW

      Z3(4) = DCMPLX(Q(0),Q(3))
      Z3(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END

C------------------------------------------------------------------------------

c------------------------------------------------------------------------------

      SUBROUTINE WWWM_ZTOWW3A_anomal(P,N,Z3,NW)
C  
C Generated by MadGraph II, SLIGHTLY CHANGED
C RETURNS AMPLITUDE
C FOR PROCESS : z -> ve e+ ta- vt~
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=5)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=13)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS
C  
      DOUBLE PRECISION P(0:3,1:4)                                    !LEPTON MOMENTA
      INTEGER N,NW
      DOUBLE COMPLEX Z3(0:5)                                   !AMPLITUDES FOR HEL.DIRECTIONS 0:3
                                                           !4,5-COMPONENTS ARE MOMENTUM COMPONENTS
C  
C LOCAL VARIABLES
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      INTEGER NHEL(2:5),IHEL
      DATA(NHEL(IHEL),IHEL=2,5)/-1,+1,-1,+1/
      SAVE NHEL

      LOGICAL LSWITCH
      PARAMETER(LSWITCH = .true.)

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"

C -----------------------------------------------------------------------------
C BEGIN CODE
C -----------------------------------------------------------------------------

      IF (LSWITCH) THEN
         DO I=1,6
            W(I,2) = WVE2(I,N)
            W(I,3) = WEP2(I,N)
            W(I,4) = WTM(I,N)
            W(I,5) = WVTBAR(I,N)
            W(I,6) = W1P(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) = P(MU,1) + P(MU,2) + P(MU,3) + P(MU,4)
      ENDDO

c      moved to m2s_qqWWW.F
c      call anomal_formfactor_4v(q)

      IF (.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,1   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,2   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3  ),LMASS,NHEL(4   ),+1,W(1,4   ))       
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
C         PRINT*,' VE  ',(WVE(I,N)/W(I,2),I=1,6)
C         PRINT*,' EP  ',(WEP(I,N)/W(I,3),I=1,6)
C         PRINT*,' TM  ',(WTM(I,N)/W(I,4),I=1,6)
C         PRINT*,' VT  ',(WVTBAR(I,N)/W(I,5),I=1,6)
C         PRINT*,' WP1 ',(WP1(I,N)/W(I,6),I=1,6)
      ENDIF

      IF(NW.EQ.1) THEN

         DO MU=0,3
         CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
         CALL jwmwpz_anomal3(W(1,6   ),W(1,1   ),W(1,8  ))    
         CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            

         Z3(MU) = +AMP(   2)
         ENDDO

      ELSEIF(NW.EQ.0) THEN

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),ZMASS,ZWIDTH,MU,-1,W(1,1))
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GZN ,AMP(1   ))            
      CALL jwmwpz_anomal3(W(1,6   ),W(1,1   ),W(1,8  ))      
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZL ,LMASS   ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GWF ,AMP(5   ))            

      Z3(MU) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
      ENDDO

      ENDIF        ! NW

      Z3(4) = DCMPLX(Q(0),Q(3))
      Z3(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END
