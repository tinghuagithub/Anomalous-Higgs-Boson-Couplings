C----------------------------------------------------------------------------
C
C	THIS FILE CONTAINS SUBROUTINES TO CALCULATE LEPTONIC TENSORS
C	FOR A PROCESS W+/- --> WWW --> LEPTONS
C	
C  LIST OF SUBROUTINES:
C
C    W+ --> WWW --> LEPTONS
C	SUBROUTINE WWW_WPTOWWW		! passes helicity set to next routine
C	SUBROUTINE WWW_WPTOWWW1		! madgraph generated amplitude
C
C    W- --> WWW --> LEPTONS
C	SUBROUTINE WWW_WMTOWWW		! passes helicity set to next routine
C	SUBROUTINE WWW_WMTOWWW1		! madgraph generated amplitude
C
C----------------------------------------------------------------------------


C----------------------------------------------------------------------------

      SUBROUTINE WWW_WPTOWWW_kk(P,N,H,WPWWW,NW)
c Leptonic tensor for process 
c     W+ --> W+ W- W+ --> ve e+ mu- vm~ vt ta+
c computed for fixed helicity set h

      IMPLICIT NONE

C ARGUMENTS

      DOUBLE PRECISION P(0:3,2:7)
      INTEGER N,H,NW
      DOUBLE COMPLEX WPWWW(0:5)
C
C LOCAL VARIABLES
C

      INTEGER LSIGN(2:7,2),L
      DATA(LSIGN(L,1),L=2,7)/-1,-1,-1,-1,-1,-1/	! H=1
      DATA(LSIGN(L,2),L=2,7)/-1,-1,-1,-1,+1,+1/	! H=2
      CALL WWW_WPTOWWW1_kk(P,N,LSIGN(2,H),WPWWW(0),NW)    ! HELICITY COMBINATION #H IS SELECTED
							! ONLY HELICITY SET H=1 NEEDED HERE

      END

C----------------------------------------------------------------------------

C----------------------------------------------------------------------------

      SUBROUTINE WWW_WPTOWWW1_kk(P,N,LSIGN,WPWWW,NW)
C  
C Generated by MadGraph II, SLIGHTLY CHANGED
C RETURNS AMPLITUDE
C FOR PROCESS : w+ -> ve e+ mu- vm~ vt ta+
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=49)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=82)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:7)
      INTEGER N
      INTEGER LSIGN(2:7)
      DOUBLE COMPLEX WPWWW(0:5)
      INTEGER NW
C  
C LOCAL VARIABLES 
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      LOGICAL LSWITCH
      PARAMETER(LSWITCH =.true.)

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"

C
C GLOBAL VARIABLES
C 
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/kkcoupl.inc"
      COMPLEX*16 KK1(6,1:kkz),KK2(6,1:kkz),AMPK1(1:kkz),AMPK2(1:kkz)
      COMPLEX*16 KK3(6,1:kka),KK4(6,1:kka),AMPK3(1:kka),AMPK4(1:kka)
	COMPLEX*16 kkh1(6,1:kkh), AMPKH1(1:kkh) 
	COMPLEX*16 kkh2(6,1:kkh), AMPKH2(1:kkh)
	COMPLEX*16 h1(6), AMPH1, h2(6), AMPH2
      INTEGER k

C ----------------------------------------------------------------------------
C BEGIN CODE
C ----------------------------------------------------------------------------

      IF(LSWITCH) THEN                                    !READ IN LEPTON WF FROM COMMON BLOCK
         DO I=1,6
            W(I,2) = WVE1(I,N)
            W(I,3) = WEP1(I,N)
            W(I,4) = WMU1(I,N)
            W(I,5) = WVM1(I,N)
            W(I,6) = WVT(I,N)
            W(I,7) = WTP(I,N)
            W(I,8) = WP1(I,N)
            W(I,16)= W1M(I,N)
		W(I,82)= WP2(I,N)

         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) = P(MU,2) + P(MU,3) + P(MU,4) + P(MU,5) + P(MU,6) + P(MU,7)
      ENDDO

      IF(.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,2   ),ZERO ,+1*LSIGN(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,3   ),ZERO ,-1*LSIGN(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,4   ),ZERO ,+1*LSIGN(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,5   ),ZERO ,-1*LSIGN(5   ),-1,W(1,5   ))        
         CALL OXXXXX(P(0,6   ),ZERO ,+1*LSIGN(6   ),+1,W(1,6   ))        
         CALL IXXXXX(P(0,7   ),LMASS,-1*LSIGN(7   ),-1,W(1,7   ))       

         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   ))    
         CALL JIOXXX(W(1,5   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,16  ))    
c         print*,' ve  ',(wve(i,N)/w(i,2),i=1,6)
c         print*,' ep  ',(wep(i,N)/w(i,3),i=1,6)
c         print*,' mu  ',(wmu(i,N)/w(i,4),i=1,6)
c         print*,' vm  ',(wvm(i,N)/w(i,5),i=1,6)
c         print*,' vt  ',(wvt(i,N)/w(i,6),i=1,6)
c         print*,' tp  ',(wtp(i,N)/w(i,7),i=1,6)
c         print*,' wp1 ',(wp1(i,N)/w(i,8),i=1,6)
c         print*,' wm1 ',(wm1(i,N)/w(i,13),i=1,6)
      ENDIF


      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),WMASS,WWIDTH,MU,-1,W(1,1))
c      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   ))    ! wp1

c      CALL JIOXXX(W(1,7   ),W(1,6   ),GWF ,WMASS   ,WWIDTH  ,W(1,82   )) ! w-> taubar + vt

      CALL FVOXXX(W(1,4   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,5   ),W(1,9   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,10  ))    
      CALL FVIXXX(W(1,7   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,10  ),GZN ,AMP(1   ))            
      CALL JVVXXX(W(1,10  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     12  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,12  ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,7   ),W(1,10  ),GZL ,LMASS   ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,13  ),W(1,6   ),W(1,1   ),GWF ,AMP(3   ))            
      CALL FVOXXX(W(1,9   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL JIOXXX(W(1,5   ),W(1,14  ),GWF ,WMASS   ,WWIDTH  ,W(1,15  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,15  ),GWF ,AMP(4   ))            
      CALL JIOXXX(W(1,5   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,16  ))   ! w1m
      CALL JVVXXX(W(1,16  ),W(1,8   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     17  ))                                                          
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,17  ),GZN ,AMP(5   ))            
      CALL JVVXXX(W(1,16  ),W(1,8   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     18  ))                                                          
      CALL JVVXXX(W(1,18  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     19  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,19  ),GWF ,AMP(6   ))            
      CALL JVVXXX(W(1,17  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     20  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,20  ),GWF ,AMP(7   ))            
      CALL FVIXXX(W(1,7   ),W(1,16  ),GWF ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL FVIXXX(W(1,21  ),W(1,8   ),GWF ,LMASS   ,ZERO    ,W(1,22  ))    
      CALL IOVXXX(W(1,22  ),W(1,6   ),W(1,1   ),GWF ,AMP(8   ))            
      CALL FVIXXX(W(1,7   ),W(1,18  ),GAL ,LMASS   ,ZERO    ,W(1,23  ))    
      CALL IOVXXX(W(1,23  ),W(1,6   ),W(1,1   ),GWF ,AMP(9   ))            
      CALL FVIXXX(W(1,7   ),W(1,17  ),GZL ,LMASS   ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,24  ),W(1,6   ),W(1,1   ),GWF ,AMP(10  ))            
      CALL JVVXXX(W(1,1   ),W(1,8   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     25  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,25  ),GZN ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL JIOXXX(W(1,26  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,27  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,27  ),GWF ,AMP(11  ))            
      CALL JVVXXX(W(1,1   ),W(1,8   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     28  ))                                                          
      CALL FVOXXX(W(1,4   ),W(1,28  ),GAL ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL JIOXXX(W(1,5   ),W(1,29  ),GWF ,WMASS   ,WWIDTH  ,W(1,30  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,30  ),GWF ,AMP(12  ))            
      CALL FVOXXX(W(1,4   ),W(1,25  ),GZL ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL JIOXXX(W(1,5   ),W(1,31  ),GWF ,WMASS   ,WWIDTH  ,W(1,32  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,32  ),GWF ,AMP(13  ))            

      CALL WWWWXX(W(1,1   ),W(1,8   ),W(1,16  ),W(1,82  ), ZERO,
     &	GWWWW_K(0,0,0,0), AMP(14  ))        

      CALL FVIXXX(W(1,11  ),W(1,8   ),GWF ,LMASS   ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,34  ),W(1,6   ),W(1,16  ),GWF ,AMP(15  ))            
      CALL JVVXXX(W(1,28  ),W(1,16  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     35  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,35  ),GWF ,AMP(16  ))            
      CALL JVVXXX(W(1,25  ),W(1,16  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     36  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,36  ),GWF ,AMP(17  ))            
      CALL FVIXXX(W(1,7   ),W(1,28  ),GAL ,LMASS   ,ZERO    ,W(1,37  ))    
      CALL IOVXXX(W(1,37  ),W(1,6   ),W(1,16  ),GWF ,AMP(18  ))            
      CALL FVIXXX(W(1,7   ),W(1,25  ),GZL ,LMASS   ,ZERO    ,W(1,38  ))    
      CALL IOVXXX(W(1,38  ),W(1,6   ),W(1,16  ),GWF ,AMP(19  ))            
      CALL IOVXXX(W(1,21  ),W(1,6   ),W(1,25  ),GZN ,AMP(20  ))            
      CALL FVIXXX(W(1,5   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL JIOXXX(W(1,39  ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,40  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,40  ),GZN ,AMP(21  ))            
      CALL JIOXXX(W(1,39  ),W(1,4   ),GAL ,ZERO    ,AWIDTH  ,W(1,41  ))    
      CALL JVVXXX(W(1,41  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     42  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,42  ),GWF ,AMP(22  ))            
      CALL JVVXXX(W(1,40  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     43  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,43  ),GWF ,AMP(23  ))            
      CALL FVIXXX(W(1,7   ),W(1,41  ),GAL ,LMASS   ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,44  ),W(1,6   ),W(1,1   ),GWF ,AMP(24  ))            
      CALL FVIXXX(W(1,7   ),W(1,40  ),GZL ,LMASS   ,ZERO    ,W(1,45  ))    
      CALL IOVXXX(W(1,45  ),W(1,6   ),W(1,1   ),GWF ,AMP(25  ))            
      CALL FVIXXX(W(1,39  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL JIOXXX(W(1,46  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,47  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,47  ),GWF ,AMP(26  ))            
      CALL FVOXXX(W(1,2   ),W(1,16  ),GWF ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL JIOXXX(W(1,3   ),W(1,48  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,49  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,49  ),GZN ,AMP(27  ))            
      CALL JIOXXX(W(1,3   ),W(1,48  ),GAL ,ZERO    ,AWIDTH  ,W(1,50  ))    
      CALL JVVXXX(W(1,50  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     51  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,51  ),GWF ,AMP(28  ))            
      CALL JVVXXX(W(1,49  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     52  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,52  ),GWF ,AMP(29  ))            
      CALL FVIXXX(W(1,7   ),W(1,50  ),GAL ,LMASS   ,ZERO    ,W(1,53  ))    
      CALL IOVXXX(W(1,53  ),W(1,6   ),W(1,1   ),GWF ,AMP(30  ))            
      CALL FVIXXX(W(1,7   ),W(1,49  ),GZL ,LMASS   ,ZERO    ,W(1,54  ))    
      CALL IOVXXX(W(1,54  ),W(1,6   ),W(1,1   ),GWF ,AMP(31  ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,55  ))    
      CALL JIOXXX(W(1,55  ),W(1,2   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,56  ))    
      CALL FVIXXX(W(1,5   ),W(1,56  ),GZN ,ZERO    ,ZERO    ,W(1,57  ))    
      CALL JIOXXX(W(1,57  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,58  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,58  ),GWF ,AMP(32  ))            
      CALL FVOXXX(W(1,4   ),W(1,56  ),GZL ,ZERO    ,ZERO    ,W(1,59  ))    
      CALL JIOXXX(W(1,5   ),W(1,59  ),GWF ,WMASS   ,WWIDTH  ,W(1,60  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,60  ),GWF ,AMP(33  ))            
      CALL JIOXXX(W(1,55  ),W(1,48  ),GWF ,WMASS   ,WWIDTH  ,W(1,61  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,61  ),GWF ,AMP(34  ))            
      CALL JVVXXX(W(1,56  ),W(1,16  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     62  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,62  ),GWF ,AMP(35  ))            
      CALL FVIXXX(W(1,7   ),W(1,56  ),GZL ,LMASS   ,ZERO    ,W(1,63  ))    
      CALL IOVXXX(W(1,63  ),W(1,6   ),W(1,16  ),GWF ,AMP(36  ))            
      CALL IOVXXX(W(1,21  ),W(1,6   ),W(1,56  ),GZN ,AMP(37  ))            
      CALL FVIXXX(W(1,3   ),W(1,16  ),GWF ,ZERO    ,ZERO    ,W(1,64  ))    
      CALL JIOXXX(W(1,64  ),W(1,2   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,65  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,65  ),GZN ,AMP(38  ))            
      CALL JVVXXX(W(1,65  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     66  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,66  ),GWF ,AMP(39  ))            
      CALL FVIXXX(W(1,7   ),W(1,65  ),GZL ,LMASS   ,ZERO    ,W(1,67  ))    
      CALL IOVXXX(W(1,67  ),W(1,6   ),W(1,1   ),GWF ,AMP(40  ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,68  ))    
      CALL JIOXXX(W(1,3   ),W(1,68  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,69  ))    
      CALL FVIXXX(W(1,5   ),W(1,69  ),GZN ,ZERO    ,ZERO    ,W(1,70  ))    
      CALL JIOXXX(W(1,70  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,71  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,71  ),GWF ,AMP(41  ))            
      CALL JIOXXX(W(1,3   ),W(1,68  ),GAL ,ZERO    ,AWIDTH  ,W(1,72  ))    
      CALL FVOXXX(W(1,4   ),W(1,72  ),GAL ,ZERO    ,ZERO    ,W(1,73  ))    
      CALL JIOXXX(W(1,5   ),W(1,73  ),GWF ,WMASS   ,WWIDTH  ,W(1,74  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,74  ),GWF ,AMP(42  ))            
      CALL FVOXXX(W(1,4   ),W(1,69  ),GZL ,ZERO    ,ZERO    ,W(1,75  ))    
      CALL JIOXXX(W(1,5   ),W(1,75  ),GWF ,WMASS   ,WWIDTH  ,W(1,76  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,76  ),GWF ,AMP(43  ))            
      CALL JIOXXX(W(1,64  ),W(1,68  ),GWF ,WMASS   ,WWIDTH  ,W(1,77  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,77  ),GWF ,AMP(44  ))            
      CALL JVVXXX(W(1,72  ),W(1,16  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     78  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,78  ),GWF ,AMP(45  ))            
      CALL JVVXXX(W(1,69  ),W(1,16  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     79  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,79  ),GWF ,AMP(46  ))            
      CALL FVIXXX(W(1,7   ),W(1,72  ),GAL ,LMASS   ,ZERO    ,W(1,80  ))    
      CALL IOVXXX(W(1,80  ),W(1,6   ),W(1,16  ),GWF ,AMP(47  ))            
      CALL FVIXXX(W(1,7   ),W(1,69  ),GZL ,LMASS   ,ZERO    ,W(1,81  ))    
      CALL IOVXXX(W(1,81  ),W(1,6   ),W(1,16  ),GWF ,AMP(48  ))            
      CALL IOVXXX(W(1,21  ),W(1,6   ),W(1,69  ),GZN ,AMP(49  ))            

c KK exchange graphs
      do k=1,kkhz
c the couplings to the z tower
      CALL JVVXXX(W(1,1),W(1,82), gwwz_k(0,0,k), z1mass_k(k), z1width_k(k), KK1(1,k))
      CALL VVVXXX(w(1,16),W(1,8),KK1(1,k), gwwz_k(0,0,k), AMPK1(k))

      CALL JVVXXX(W(1,1),W(1,8), gwwz_k(0,0,k), z1mass_k(k), z1width_k(k), KK2(1,k))
      CALL VVVXXX(w(1,16),W(1,82),KK2(1,k), gwwz_k(0,0,k), AMPK2(k))
	enddo

      do k=1,kkha
c the couplings to the gamma tower
      CALL JVVXXX(W(1,1),W(1,82), gwwa_k(0,0,k), a1mass_k(k), a1width_k(k), KK3(1,k))
      CALL VVVXXX(w(1,16),W(1,8),KK3(1,k), gwwa_k(0,0,k), AMPK3(k))

      CALL JVVXXX(W(1,1),W(1,8), gwwa_k(0,0,k), a1mass_k(k), a1width_k(k), KK4(1,k))
      CALL VVVXXX(w(1,16),W(1,82),KK4(1,k), gwwa_k(0,0,k), AMPK4(k))

	enddo


cc higgs graphs
      if(hswitchwww) then
c SM higgs graph
	CALL HVVXXX(W(1,82), W(1,16), gwwh, hmass, hwidth, h1(1))
	CALL VVSXXX(W(1,1), W(1,8),h1(1), gwwh, AMPH1)

	CALL HVVXXX(W(1,8), W(1,16), gwwh, hmass, hwidth, h2(1))
	CALL VVSXXX(W(1,1), W(1,82),h2(1), gwwh, AMPH2)
c KK higgs graph
      do k=1,kkhh
	CALL HVVXXX(W(1,82), W(1,16), gwwh_k(0,0,k), h1mass_k(k), 
     &	h1width_k(k), kkh1(1,k))
	CALL VVSXXX(W(1,1), W(1,8),kkh1(1,k), gwwh_k(0,0,k), AMPKH1(k))

	CALL HVVXXX(W(1,8), W(1,16), gwwh_k(0,0,k), h1mass_k(k), 
     &	h1width_k(k), kkh2(1,k))
	CALL VVSXXX(W(1,1), W(1,82),kkh2(1,k), gwwh_k(0,0,k), AMPKH2(k))
      enddo
      endif	

      WPWWW(MU) = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)-AMP(  22)-AMP(  23)-AMP(  24)-AMP(  25)
     &             -AMP(  26)-AMP(  27)-AMP(  28)-AMP(  29)-AMP(  30)
     &             -AMP(  31)-AMP(  32)-AMP(  33)-AMP(  34)-AMP(  35)
     &             -AMP(  36)-AMP(  37)-AMP(  38)-AMP(  39)-AMP(  40)
     &             -AMP(  41)-AMP(  42)-AMP(  43)-AMP(  44)-AMP(  45)
     &             -AMP(  46)-AMP(  47)-AMP(  48)-AMP(  49)
	do k=1,kkhz
	WPWWW(MU) = WpWWW(MU)-AMPK1(k)-AMPK2(k)
	enddo

	do k=1,kkha
	WPWWW(MU) = WPWWW(MU)-AMPK3(k)-AMPK4(k)
	enddo

	if (hswitchwww) then
	WPWWW(MU)= WPWWW(MU)-AMPH1-AMPH2
	do k=1, kkhh
	WPWWW(MU)= WPWWW(MU)-AMPKH1(k)-AMPKH2(k)
	enddo
	endif

	ENDDO !mu

      WPWWW(4) = DCMPLX(Q(0),Q(3))
      WPWWW(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END

C----------------------------------------------------------------------------

C----------------------------------------------------------------------------

      SUBROUTINE WWW_WMTOWWW_kk(P,N,H,WMWWW,NW)
c Leptonic tensor for process 
c     W- --> W+ W- W- --> ve e+ mu- vm~ ta- vt~
c computed for fixed helicity set h

      IMPLICIT NONE

C ARGUMENTS

      DOUBLE PRECISION P(0:3,2:7)
      INTEGER N,H
      DOUBLE COMPLEX WMWWW(0:5)
      INTEGER NW
C
C LOCAL VARIABLES
C

      INTEGER LSIGN(2:7,2),L
      DATA(LSIGN(L,1),L=2,7)/-1,-1,-1,-1,-1,-1/	! H=1
      DATA(LSIGN(L,2),L=2,7)/-1,-1,-1,-1,+1,+1/	! H=2

      CALL WWW_WMTOWWW1_kk(P,N,LSIGN(2,H),WMWWW(0),NW)    ! HELICITY COMBINATION #H IS SELECTED
							! HERE ONE ONLY NEEDS HELICITY SET H=1
      END

C----------------------------------------------------------------------------

C----------------------------------------------------------------------------


      SUBROUTINE WWW_WMTOWWW1_kk(P,N,LSIGN,WMWWW,NW)
C  
C Generated by MadGraph II, SLIGHTLY CHANGED
C RETURNS AMPLITUDE
C FOR PROCESS : w- -> ve e+ mu- vm~ ta- vt~
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  49) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  77) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:7)
      INTEGER N
      INTEGER LSIGN(2:7)
      DOUBLE COMPLEX WMWWW(0:5)
      INTEGER NW
C  
C LOCAL VARIABLES 
C  
      DOUBLE PRECISION Q(0:3)
      INTEGER I,MU
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(18,NWAVEFUNCS)

      LOGICAL LSWITCH
      PARAMETER(LSWITCH=.true.)

!LEPTON SPINORS + POLARISATION VECTORS GENERATED IN M2S_QQWWW
#include "tensor.inc"
#include "VBFNLO/utilities/kkcoupl.inc"
      COMPLEX*16 KK1(6,1:kkz),KK2(6,1:kkz),AMPK1(1:kkz),AMPK2(1:kkz)
      COMPLEX*16 KK3(6,1:kka),KK4(6,1:kka),AMPK3(1:kka),AMPK4(1:kka)

	COMPLEX*16 kkh1(6,1:kkh), AMPKH1(1:kkh) 
	COMPLEX*16 kkh2(6,1:kkh), AMPKH2(1:kkh)
	COMPLEX*16 h1(6), AMPH1, h2(6), AMPH2
      INTEGER k

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"

C ----------------------------------------------------------------------------
C BEGIN CODE
C ----------------------------------------------------------------------------

      IF(LSWITCH) THEN                                    !READ LEPTON WF FROM COMMMON BLOCK
         DO I=1,6
            W(I,2) = WVE2(I,N)
            W(I,3) = WEP2(I,N)
            W(I,4) = WMU2(I,N)
            W(I,5) = WVM2(I,N)
            W(I,6) = WTM(I,N)
            W(I,7) = WVTBAR(I,N)
            W(I,8) = W1P(I,N)
            W(I,28)= WM1(I,N)
		W(I,77)= WM2(I,N)
         ENDDO
      ENDIF

      DO MU=0,3
         Q(MU) = P(MU,2) +  P(MU,3) +  P(MU,4) +  P(MU,5) +  P(MU,6) +  P(MU,7)
      ENDDO

      IF(.NOT.LSWITCH) THEN
         CALL OXXXXX(P(0,2   ),ZERO ,+1*LSIGN(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,3   ),ZERO ,-1*LSIGN(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,4   ),ZERO ,+1*LSIGN(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,5   ),ZERO ,-1*LSIGN(5   ),-1,W(1,5   ))        
         CALL OXXXXX(P(0,6   ),LMASS,+1*LSIGN(6   ),+1,W(1,6   ))       
         CALL IXXXXX(P(0,7   ),ZERO ,-1*LSIGN(7   ),-1,W(1,7   ))        

         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   ))    
         CALL JIOXXX(W(1,5   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,28  ))
c         print*,' ve  ',(wve(i,N)/w(i,2),i=1,6)
c         print*,' ep  ',(wep(i,N)/w(i,3),i=1,6)
c         print*,' mu  ',(wmu(i,N)/w(i,4),i=1,6)
c         print*,' vm  ',(wvm(i,N)/w(i,5),i=1,6)
c         print*,' tm  ',(wtm(i,N)/w(i,6),i=1,6)
c         print*,' vt~ ',(wvtbar(i,N)/w(i,7),i=1,6)
c         print*,' wp1 ',(wp1(i,N)/w(i,8),i=1,6)
c         print*,' wm1 ',(wm1(i,N)/w(i,13),i=1,6)
      ENDIF

      DO MU=0,3
      CALL TRIPLEWVCARTX(Q(0),WMASS,WWIDTH,MU,-1,W(1,1))
c      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   ))    w1p

c      CALL JIOXXX(W(1,7   ),W(1,6   ),GWF ,WMASS   ,WWIDTH  ,W(1,77  )) ! w-> tau + vtbar

      CALL FVOXXX(W(1,4   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,5   ),W(1,9   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,10  ))    
      CALL FVIXXX(W(1,7   ),W(1,1   ),GWF ,LMASS   ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,10  ),GZL ,AMP(1   ))            
      CALL JVVXXX(W(1,1   ),W(1,10  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     12  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,12  ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,7   ),W(1,10  ),GZN ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,13  ),W(1,6   ),W(1,1   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL JIOXXX(W(1,14  ),W(1,4   ),GAL ,ZERO    ,AWIDTH  ,W(1,15  ))    
      CALL FVIXXX(W(1,3   ),W(1,15  ),GAL ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL JIOXXX(W(1,16  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,17  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,17  ),GWF ,AMP(4   ))            
      CALL JIOXXX(W(1,14  ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,18  ))    
      CALL FVIXXX(W(1,3   ),W(1,18  ),GZL ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL JIOXXX(W(1,19  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,20  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,20  ),GWF ,AMP(5   ))            
      CALL FVOXXX(W(1,2   ),W(1,18  ),GZN ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL JIOXXX(W(1,3   ),W(1,21  ),GWF ,WMASS   ,WWIDTH  ,W(1,22  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,22  ),GWF ,AMP(6   ))            
      CALL JVVXXX(W(1,8   ),W(1,15  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     23  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,23  ),GWF ,AMP(7   ))            
      CALL JVVXXX(W(1,8   ),W(1,18  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     24  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,24  ),GWF ,AMP(8   ))            
      CALL FVIXXX(W(1,7   ),W(1,8   ),GWF ,LMASS   ,ZERO    ,W(1,25  ))    
      CALL IOVXXX(W(1,25  ),W(1,6   ),W(1,15  ),GAL ,AMP(9   ))            
      CALL IOVXXX(W(1,25  ),W(1,6   ),W(1,18  ),GZL ,AMP(10  ))            
      CALL FVIXXX(W(1,7   ),W(1,18  ),GZN ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,26  ),W(1,6   ),W(1,8   ),GWF ,AMP(11  ))            
      CALL JIOXXX(W(1,14  ),W(1,9   ),GWF ,WMASS   ,WWIDTH  ,W(1,27  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,27  ),GWF ,AMP(12  ))            
c      CALL JIOXXX(W(1,5   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,28  ))   ! wm1
      CALL JVVXXX(W(1,28  ),W(1,8   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     29  ))                                                          
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,29  ),GAL ,AMP(13  ))            
      CALL JVVXXX(W(1,28  ),W(1,8   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     30  ))                                                          
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,30  ),GZL ,AMP(14  ))            
      CALL JVVXXX(W(1,1   ),W(1,29  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     31  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,31  ),GWF ,AMP(15  ))            
      CALL JVVXXX(W(1,1   ),W(1,30  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     32  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,32  ),GWF ,AMP(16  ))            
      CALL FVIXXX(W(1,25  ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,33  ))    
      CALL IOVXXX(W(1,33  ),W(1,6   ),W(1,1   ),GWF ,AMP(17  ))            
      CALL FVIXXX(W(1,7   ),W(1,30  ),GZN ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,34  ),W(1,6   ),W(1,1   ),GWF ,AMP(18  ))            
      CALL JVVXXX(W(1,28  ),W(1,1   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     35  ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,35  ),GAL ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL JIOXXX(W(1,36  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,37  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,37  ),GWF ,AMP(19  ))            
      CALL JVVXXX(W(1,28  ),W(1,1   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     38  ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,38  ),GZL ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL JIOXXX(W(1,39  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,40  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,40  ),GWF ,AMP(20  ))            
      CALL FVOXXX(W(1,2   ),W(1,38  ),GZN ,ZERO    ,ZERO    ,W(1,41  ))    
      CALL JIOXXX(W(1,3   ),W(1,41  ),GWF ,WMASS   ,WWIDTH  ,W(1,42  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,42  ),GWF ,AMP(21  ))            

      CALL WWWWXX(W(1,28   ),W(1,1   ),W(1,77  ),W(1,8  ), ZERO,
     &	GWWWW_K(0,0,0,0), AMP(22  ))

      CALL FVIXXX(W(1,11  ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,44  ),W(1,6   ),W(1,8   ),GWF ,AMP(23  ))            
      CALL JVVXXX(W(1,8   ),W(1,35  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     45  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,45  ),GWF ,AMP(24  ))            
      CALL JVVXXX(W(1,8   ),W(1,38  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     46  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,46  ),GWF ,AMP(25  ))            
      CALL IOVXXX(W(1,25  ),W(1,6   ),W(1,35  ),GAL ,AMP(26  ))            
      CALL IOVXXX(W(1,25  ),W(1,6   ),W(1,38  ),GZL ,AMP(27  ))            
      CALL FVIXXX(W(1,7   ),W(1,38  ),GZN ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,47  ),W(1,6   ),W(1,8   ),GWF ,AMP(28  ))            
      CALL FVIXXX(W(1,5   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL JIOXXX(W(1,48  ),W(1,4   ),GAL ,ZERO    ,AWIDTH  ,W(1,49  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,49  ),GAL ,AMP(29  ))            
      CALL JIOXXX(W(1,48  ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,50  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,50  ),GZL ,AMP(30  ))            
      CALL JVVXXX(W(1,1   ),W(1,49  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     51  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,51  ),GWF ,AMP(31  ))            
      CALL JVVXXX(W(1,1   ),W(1,50  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     52  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,52  ),GWF ,AMP(32  ))            
      CALL FVIXXX(W(1,7   ),W(1,50  ),GZN ,ZERO    ,ZERO    ,W(1,53  ))    
      CALL IOVXXX(W(1,53  ),W(1,6   ),W(1,1   ),GWF ,AMP(33  ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,54  ))    
      CALL JIOXXX(W(1,5   ),W(1,54  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,55  ))    
      CALL FVIXXX(W(1,3   ),W(1,55  ),GZL ,ZERO    ,ZERO    ,W(1,56  ))    
      CALL JIOXXX(W(1,56  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,57  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,57  ),GWF ,AMP(34  ))            
      CALL FVOXXX(W(1,2   ),W(1,55  ),GZN ,ZERO    ,ZERO    ,W(1,58  ))    
      CALL JIOXXX(W(1,3   ),W(1,58  ),GWF ,WMASS   ,WWIDTH  ,W(1,59  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,59  ),GWF ,AMP(35  ))            
      CALL JVVXXX(W(1,8   ),W(1,55  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     60  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,60  ),GWF ,AMP(36  ))            
      CALL IOVXXX(W(1,25  ),W(1,6   ),W(1,55  ),GZL ,AMP(37  ))            
      CALL FVIXXX(W(1,7   ),W(1,55  ),GZN ,ZERO    ,ZERO    ,W(1,61  ))    
      CALL IOVXXX(W(1,61  ),W(1,6   ),W(1,8   ),GWF ,AMP(38  ))            
      CALL JIOXXX(W(1,48  ),W(1,54  ),GWF ,WMASS   ,WWIDTH  ,W(1,62  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,62  ),GWF ,AMP(39  ))            
      CALL FVOXXX(W(1,2   ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,63  ))    
      CALL JIOXXX(W(1,3   ),W(1,63  ),GAL ,ZERO    ,AWIDTH  ,W(1,64  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,64  ),GAL ,AMP(40  ))            
      CALL JIOXXX(W(1,3   ),W(1,63  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,65  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,65  ),GZL ,AMP(41  ))            
      CALL JVVXXX(W(1,1   ),W(1,64  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     66  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,66  ),GWF ,AMP(42  ))            
      CALL JVVXXX(W(1,1   ),W(1,65  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     67  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,67  ),GWF ,AMP(43  ))            
      CALL FVIXXX(W(1,7   ),W(1,65  ),GZN ,ZERO    ,ZERO    ,W(1,68  ))    
      CALL IOVXXX(W(1,68  ),W(1,6   ),W(1,1   ),GWF ,AMP(44  ))            
      CALL FVOXXX(W(1,63  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,69  ))    
      CALL JIOXXX(W(1,3   ),W(1,69  ),GWF ,WMASS   ,WWIDTH  ,W(1,70  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,70  ),GWF ,AMP(45  ))            
      CALL FVIXXX(W(1,3   ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,71  ))    
      CALL JIOXXX(W(1,71  ),W(1,2   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,72  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,72  ),GZL ,AMP(46  ))            
      CALL JVVXXX(W(1,1   ),W(1,72  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     73  ))                                                          
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,73  ),GWF ,AMP(47  ))            
      CALL FVIXXX(W(1,7   ),W(1,72  ),GZN ,ZERO    ,ZERO    ,W(1,74  ))    
      CALL IOVXXX(W(1,74  ),W(1,6   ),W(1,1   ),GWF ,AMP(48  ))            
      CALL FVIXXX(W(1,71  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,75  ))    
      CALL JIOXXX(W(1,75  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,76  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,76  ),GWF ,AMP(49  ))            


c KK exchange graphs
      do k=1,kkhz
c the couplings to the z tower
      CALL JVVXXX(W(1,77),W(1,1), gwwz_k(0,0,k), z1mass_k(k), z1width_k(k), KK1(1,k))
      CALL VVVXXX(w(1,28),W(1,8),KK1(1,k), gwwz_k(0,0,k), AMPK1(k))

      CALL JVVXXX(W(1,28),W(1,1), gwwz_k(0,0,k), z1mass_k(k), z1width_k(k), KK2(1,k))
      CALL VVVXXX(w(1,77),W(1,8),KK2(1,k), gwwz_k(0,0,k), AMPK2(k))
	enddo

      do k=1,kkha
c the couplings to the gamma tower
      CALL JVVXXX(W(1,77),W(1,1), gwwa_k(0,0,k), a1mass_k(k), a1width_k(k), KK3(1,k))
      CALL VVVXXX(w(1,28),W(1,8),KK3(1,k), gwwa_k(0,0,k), AMPK3(k))

      CALL JVVXXX(W(1,28),W(1,1), gwwa_k(0,0,k), a1mass_k(k), a1width_k(k), KK4(1,k))
      CALL VVVXXX(w(1,77),W(1,8),KK4(1,k), gwwa_k(0,0,k), AMPK4(k))
	enddo
	
cc higgs graphs
      if(hswitchwww) then
c SM higgs graph
	CALL HVVXXX(W(1,77), W(1,8), gwwh, hmass, hwidth, h1(1))
	CALL VVSXXX(W(1,1), W(1,28),h1(1), gwwh, AMPH1)

	CALL HVVXXX(W(1,8), W(1,28), gwwh, hmass, hwidth, h2(1))
	CALL VVSXXX(W(1,1), W(1,77),h2(1), gwwh, AMPH2)
c KK higgs graph
      do k=1,kkhh
	CALL HVVXXX(W(1,77), W(1,8), gwwh_k(0,0,k), h1mass_k(k), 
     &	h1width_k(k), kkh1(1,k))
	CALL VVSXXX(W(1,1), W(1,28),kkh1(1,k), gwwh_k(0,0,k), AMPKH1(k))

	CALL HVVXXX(W(1,8), W(1,28), gwwh_k(0,0,k), h1mass_k(k), 
     &	h1width_k(k), kkh2(1,k))
	CALL VVSXXX(W(1,1), W(1,77),kkh2(1,k), gwwh_k(0,0,k), AMPKH2(k))
      enddo

      endif	

      WMWWW(MU)  = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)-AMP(  22)-AMP(  23)-AMP(  24)-AMP(  25)
     &             -AMP(  26)-AMP(  27)-AMP(  28)-AMP(  29)-AMP(  30)
     &             -AMP(  31)-AMP(  32)-AMP(  33)-AMP(  34)-AMP(  35)
     &             -AMP(  36)-AMP(  37)-AMP(  38)-AMP(  39)-AMP(  40)
     &             -AMP(  41)-AMP(  42)-AMP(  43)-AMP(  44)-AMP(  45)
     &             -AMP(  46)-AMP(  47)-AMP(  48)-AMP(  49)

	do k=1,kkhz
	WMWWW(MU) = WMWWW(MU) -AMPK1(k)-AMPK2(k)
	enddo

	do k=1,kkha
	WMWWW(MU) = WMWWW(MU) -AMPK3(k)-AMPK4(k)
	enddo

	if (hswitchwww) then
	WMWWW(MU) = WMWWW(MU) -AMPH1 -AMPH2	
	do k=1, kkhh
	WMWWW(MU) = WMWWW(MU) -AMPKH1(k)-AMPKH2(k)
	enddo
	endif
	ENDDO !mu


      WMWWW(4) = DCMPLX(Q(0),Q(3))
      WMWWW(5) = DCMPLX(Q(1),Q(2))

      RETURN
      END
