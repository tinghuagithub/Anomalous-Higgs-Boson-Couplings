c
c this is the modified version of WWZtowwz.F, WWZtowz.F and WWZtoww.F 
c that includes anomalous couplings and hadronic decays
c
c in this file leptonic tensors needed for qq -> WWZ, WWZ -> 6l
c are computed for specific helicities (h)
c
c ------------------------------------------------------------
c ------------------------------------------------------------

      subroutine ATOWWZ_had(P,N,h,wwztens,NW)

      IMPLICIT NONE

      DOUBLE PRECISION P(0:3,2:7)
      complex*16 wwztens(0:5)
      integer lsign(2:7,2),ll,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,7) / -1, -1, -1, -1, -1, -1/  !h=1
      data (lsign(ll,2),ll=2,7) / -1, -1, -1, -1, +1, +1/  !h=2

      call ATOWWZ1_had(P,N,lsign(2,h),wwztens(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE ATOWWZ1_had(P,N,lsign,wwztens,NW)
C
C Generated by MadGraph II Version 3.0. Updated 02/19/04
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C
C FOR PROCESS : a -> ve e+ mu- vm~ ta- ta+ 
C
      IMPLICIT NONE
C
C CONSTANTS
C
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  78)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS= 134)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C
C ARGUMENTS
C
      DOUBLE PRECISION P(0:3,2:7), Q(0:3)
      INTEGER N
      COMPLEX*16 wwztens(0:5)
      INTEGER lsign(2:7)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wmu(i,N)
            w(i,5)  = wvm(i,N)
            w(i,6)  = ztm(i,N)
            w(i,7)  = ztp(i,N)
            w(i,8)  = wp(i,N)
            w(i,13) = wm(i,N)
            w(i,25) = atau(i,N)
            w(i,22) = ztau(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)+p(mu,6)+p(mu,7)
      enddo

!      if (.not.lswitch) then
!         CALL OXXXXX(P(0,2   ),ZERO , lsign(2),+1,W(1,2   )) !ve
!         CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   )) !e+
!         CALL OXXXXX(P(0,4   ),ZERO , lsign(4),+1,W(1,4   )) !mu-
!         CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5),-1,W(1,5   )) !vm~
!         CALL OXXXXX(P(0,6   ),LMASS , lsign(6),+1,W(1,6   )) !ta-
!         CALL IXXXXX(P(0,7   ),LMASS ,-lsign(7),-1,W(1,7   )) !ta+
!         CALL JIOXXX(W(1,3   ),W(1,2),GWF ,WMASS,WWIDTH ,W(1,8 )) !wp
!         CALL JIOXXX(W(1,5   ),W(1,4),GWF ,WMASS,WWIDTH ,W(1,13)) !wm
!         CALL JIOXXX(W(1,7   ),W(1,6),GZL ,ZMASS,ZWIDTH ,W(1,22)) !z
!         CALL JIOXXX(W(1,7   ),W(1,6),GAL ,ZERO ,ZERO   ,W(1,25)) !a
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),ZERO ,ZERO, MU,-1,W(1,1   )) 
      CALL FVOXXX(W(1,4   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,5   ),W(1,9   ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,10  ))    ! W-
      CALL FVOXXX(W(1,6   ),W(1,10  ),GZ_ZF ,LMASS   ,ZERO    ,W(1,11  ))     ! Z
      CALL IOVXXX(W(1,7   ),W(1,11  ),W(1,1   ),GZ_AF ,AMP(1   ))             ! Z
      CALL FVOXXX(W(1,6   ),W(1,1   ),GZ_AF ,LMASS   ,ZERO    ,W(1,12  ))     ! Z
      CALL IOVXXX(W(1,7   ),W(1,12  ),W(1,10  ),GZ_ZF ,AMP(2   ))             ! Z
      CALL FVIXXX(W(1,7   ),W(1,1   ),GZ_AF ,LMASS   ,ZERO    ,W(1,14  ))     ! Z
      CALL jaww_anomal3(W(1,13  ),W(1,8   ),W(1,15))   
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,15  ),GZ_AF ,AMP(3   ))            ! Z
      CALL jzww_anomal3(W(1,13  ),W(1,8   ),W(1,16))
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,16  ),GZ_ZF ,AMP(4   ))            ! Z
c     new higgs couplings: azh and aah
      CALL jhww_anomal3(W(1,13  ),W(1,8   ) ,W(1,17))
      CALL azh_anomal3(W(1,1  ),W(1,22   ),W(1,17  ),AMP(23  ))
      CALL aah_anomal3(W(1,1  ),W(1,25   ),W(1,17  ),AMP(41  ))
      CALL FVIXXX(W(1,7   ),W(1,13  ),GWF ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL IOVXXX(W(1,18  ),W(1,12  ),W(1,8   ),GWF ,AMP(6   ))            
      CALL JIOXXX(W(1,7   ),W(1,12  ),GZ_AF ,ZERO    ,ZERO    ,W(1,19  ))    ! Z
      CALL wwa_anomal3(W(1,13  ),W(1,8   ),W(1,19  ),AMP(7   ))           
      CALL JIOXXX(W(1,7   ),W(1,12  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,20  ))    ! Z
      CALL wwz_anomal3(W(1,13  ),W(1,8   ),W(1,20  ),AMP(8   ))           
      CALL jwpawm_anomal3(W(1,1   ),W(1,13  ),W(1,23))
      CALL FVOXXX(W(1,2   ),W(1,22  ),GWP_ZUN ,ZERO    ,ZERO    ,W(1,24  ))    ! W+
      CALL IOVXXX(W(1,3   ),W(1,24  ),W(1,23  ),GWF ,AMP(10  ))            
      CALL FVIXXX(W(1,3   ),W(1,25  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,26  ))    ! W+
      CALL IOVXXX(W(1,26  ),W(1,2   ),W(1,23  ),GWF ,AMP(11  ))            
      CALL FVIXXX(W(1,3   ),W(1,22  ),GWP_ZDL ,ZERO    ,ZERO    ,W(1,27  ))    ! W+
      CALL IOVXXX(W(1,27  ),W(1,2   ),W(1,23  ),GWF ,AMP(12  ))            
      CALL jwmwpa_anomal3(W(1,8   ),W(1,1   ),W(1,28))
      CALL FVIXXX(W(1,5   ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL JIOXXX(W(1,29  ),W(1,4   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,30  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,30  ),GZ_AF ,AMP(13  ))            ! Z
      CALL JIOXXX(W(1,29  ),W(1,4   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,31  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,31  ),GZ_ZF ,AMP(14  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,5   ),W(1,32  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,33  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,33  ),GZ_ZF ,AMP(15  ))            ! Z
      CALL FVOXXX(W(1,6   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,14  ),W(1,34  ),W(1,13  ),GWF ,AMP(16  ))            
      CALL wwa_anomal3(W(1,23  ),W(1,8   ),W(1,25  ),AMP(17  ))           
      CALL wwz_anomal3(W(1,23  ),W(1,8   ),W(1,22  ),AMP(18  ))           
      CALL JIOXXX(W(1,7   ),W(1,34  ),GWF ,WMASS   ,WWIDTH  ,W(1,36  ))    
      CALL wwa_anomal3(W(1,13  ),W(1,36  ),W(1,1   ),AMP(20  ))           
      CALL jaww_anomal3(W(1,13  ),W(1,28  ),W(1,37))
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,37  ),GZ_AF ,AMP(21  ))            ! Z
      CALL jzww_anomal3(W(1,13  ),W(1,28  ),W(1,38))
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,38  ),GZ_ZF ,AMP(22  ))            ! Z
      CALL FVOXXX(W(1,6   ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,7   ),W(1,40  ),W(1,13  ),GWF ,AMP(24  ))            
      CALL wwaa_anomal4(W(1,13),W(1,1),W(1,8),W(1,25), AMP(25  ))
      CALL wwza_anomal4(W(1,13),W(1,22),W(1,8),W(1,1), AMP(26  ))
      CALL FVIXXX(W(1,5   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,41  ))    
      CALL JIOXXX(W(1,41  ),W(1,4   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,42  ))    ! W-
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,42  ),GZ_AF ,AMP(27  ))            ! Z
      CALL JIOXXX(W(1,41  ),W(1,4   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,43  ))    ! W-
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,43  ),GZ_ZF ,AMP(28  ))            ! Z
      CALL IOVXXX(W(1,41  ),W(1,4   ),W(1,19  ),GWM_ADL ,AMP(29  ))            ! W-
      CALL IOVXXX(W(1,41  ),W(1,4   ),W(1,20  ),GWM_ZDL ,AMP(30  ))            ! W-
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,44  ))    ! W-
      CALL JIOXXX(W(1,5   ),W(1,44  ),GWF ,WMASS   ,WWIDTH  ,W(1,45  ))    
      CALL FVIXXX(W(1,3   ),W(1,45  ),GWF ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL IOVXXX(W(1,46  ),W(1,2   ),W(1,22  ),GWP_ZUN ,AMP(31  ))            ! W+
      CALL FVOXXX(W(1,2   ),W(1,45  ),GWF ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,3   ),W(1,47  ),W(1,25  ),GWP_ADL ,AMP(32  ))            ! W+
      CALL IOVXXX(W(1,3   ),W(1,47  ),W(1,22  ),GWP_ZDL ,AMP(33  ))            ! W+
      CALL FVIXXX(W(1,41  ),W(1,1   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,48  ))    ! W-
      CALL IOVXXX(W(1,48  ),W(1,4   ),W(1,25  ),GWM_ADL ,AMP(34  ))            ! W-
      CALL IOVXXX(W(1,48  ),W(1,4   ),W(1,22  ),GWM_ZDL ,AMP(35  ))            ! W-
      CALL FVOXXX(W(1,44  ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,49  ))    
      CALL JIOXXX(W(1,5   ),W(1,49  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,50  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,50  ),GZ_ZF ,AMP(36  ))            ! Z
      CALL JIOXXX(W(1,41  ),W(1,44  ),GWM_ADL ,ZERO    ,ZERO    ,W(1,51  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,51  ),GZ_AF ,AMP(37  ))            ! Z
      CALL JIOXXX(W(1,41  ),W(1,44  ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,52  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,52  ),GZ_ZF ,AMP(38  ))            ! Z
      CALL jaww_anomal3(W(1,45  ),W(1,8   ),W(1,53  )) 
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,53  ),GZ_AF ,AMP(39  ))            ! Z
      CALL jzww_anomal3(W(1,45  ),W(1,8   ),W(1,54  ))
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,54  ),GZ_ZF ,AMP(40  ))            ! Z
      CALL IOVXXX(W(1,7   ),W(1,34  ),W(1,45  ),GWF ,AMP(42  ))            
      CALL FVOXXX(W(1,2   ),W(1,13  ),GWF ,ZERO    ,ZERO    ,W(1,56  ))    
      CALL JIOXXX(W(1,14  ),W(1,6   ),GZ_AF ,ZERO    ,ZERO    ,W(1,57  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,56  ),W(1,57  ),GWP_ADL ,AMP(43  ))            ! W+
      CALL JIOXXX(W(1,14  ),W(1,6   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,58  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,56  ),W(1,58  ),GWP_ZDL ,AMP(44  ))            ! W+
      CALL FVIXXX(W(1,3   ),W(1,19  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,59  ))    ! W+
      CALL IOVXXX(W(1,59  ),W(1,2   ),W(1,13  ),GWF ,AMP(45  ))            
      CALL FVIXXX(W(1,3   ),W(1,20  ),GWP_ZDL ,ZERO    ,ZERO    ,W(1,60  ))    ! W+
      CALL IOVXXX(W(1,60  ),W(1,2   ),W(1,13  ),GWF ,AMP(46  ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWP_ADL ,ZERO    ,ZERO    ,W(1,61  ))    ! W+
      CALL FVIXXX(W(1,61  ),W(1,13  ),GWF ,ZERO    ,ZERO    ,W(1,62  ))    
      CALL IOVXXX(W(1,62  ),W(1,2   ),W(1,22  ),GWP_ZUN ,AMP(47  ))            ! W+
      CALL IOVXXX(W(1,26  ),W(1,56  ),W(1,1   ),GWP_ADL ,AMP(48  ))            ! W+
      CALL IOVXXX(W(1,27  ),W(1,56  ),W(1,1   ),GWP_ADL ,AMP(49  ))            ! W+
      CALL JIOXXX(W(1,61  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,63  ))    
      CALL FVIXXX(W(1,5   ),W(1,63  ),GWF ,ZERO    ,ZERO    ,W(1,64  ))    
      CALL JIOXXX(W(1,64  ),W(1,4   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,65  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,65  ),GZ_AF ,AMP(50  ))            ! Z
      CALL JIOXXX(W(1,64  ),W(1,4   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,66  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,66  ),GZ_ZF ,AMP(51  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,63  ),GWF ,ZERO    ,ZERO    ,W(1,67  ))    
      CALL JIOXXX(W(1,5   ),W(1,67  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,68  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,68  ),GZ_ZF ,AMP(52  ))            ! Z
      CALL IOVXXX(W(1,61  ),W(1,56  ),W(1,25  ),GWP_ADL ,AMP(53  ))            ! W+
      CALL IOVXXX(W(1,61  ),W(1,56  ),W(1,22  ),GWP_ZDL ,AMP(54  ))            ! W+
      CALL jaww_anomal3(W(1,13  ),W(1,63  ),W(1,69  ))
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,69  ),GZ_AF ,AMP(55  ))            ! Z
      CALL jzww_anomal3(W(1,13  ),W(1,63  ),W(1,70  ))   
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,70  ),GZ_ZF ,AMP(56  ))            ! Z
      CALL FVOXXX(W(1,6   ),W(1,63  ),GWF ,ZERO    ,ZERO    ,W(1,72  ))    
      CALL IOVXXX(W(1,7   ),W(1,72  ),W(1,13  ),GWF ,AMP(58  ))            
      CALL FVIXXX(W(1,3   ),W(1,13  ),GWF ,ZERO    ,ZERO    ,W(1,73  ))    
      CALL IOVXXX(W(1,73  ),W(1,2   ),W(1,58  ),GWP_ZUN ,AMP(59  ))            ! W+
      CALL FVOXXX(W(1,2   ),W(1,20  ),GWP_ZUN ,ZERO    ,ZERO    ,W(1,74  ))    ! W+
      CALL IOVXXX(W(1,3   ),W(1,74  ),W(1,13  ),GWF ,AMP(60  ))    
!      if (NW.eq.0) then        

      wwztens(mu) =    -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   6) !non
     &             -AMP(   7)-AMP(   8)-AMP(  10)-AMP(  11)-AMP(  12) !resonant
     &             -AMP(  13)-AMP(  14)-AMP(  15)-AMP(  16)-AMP(  20) !
     &             -AMP(  24)-AMP(  27)-AMP(  28)-AMP(  29)-AMP(  30) !non
     &             -AMP(  31)-AMP(  32)-AMP(  33)-AMP(  34)-AMP(  35) !resonant
     &             -AMP(  36)-AMP(  37)-AMP(  38)-AMP(  39)-AMP(  40) !
     &             -AMP(  42)-AMP(  43)-AMP(  44)-AMP(  45)-AMP(  46) !non
     &             -AMP(  47)-AMP(  48)-AMP(  49)-AMP(  50)-AMP(  51) !resonant
     &             -AMP(  52)-AMP(  53)-AMP(  54)-AMP(  55)-AMP(  56) !
     &             -AMP(  58)-AMP(  59)-AMP(  60)                     !non r.
     &             -AMP(  17)-AMP(  18)-AMP(  21)-AMP(  22)-AMP(  25)
     &             -AMP(  26)
     &             -AMP(  23)  !AZH-contribution
     &             -AMP(  41)  !AAH-contribution

      if (procid .eq. WPhadWMZ) then
        ! new graphs for W+ decay
        CALL FVOXXX(W(1,2   ),W(1,25  ),GAU ,ZERO    ,ZERO    ,W(1,75  ))    ! 25: A
        CALL IOVXXX(W(1,3   ),W(1,75  ),W(1,23  ),GWF ,AMP(61  ))            
        CALL IOVXXX(W(1,46  ),W(1,2   ),W(1,25  ),GAU ,AMP(62  ))            
        CALL IOVXXX(W(1,62  ),W(1,2   ),W(1,25  ),GAU ,AMP(63  ))            
        CALL JIOXXX(W(1,14  ),W(1,6   ),GAL ,ZERO   ,AWIDTH  ,W(1,77  ))    ! Z
        CALL IOVXXX(W(1,73  ),W(1,2   ),W(1,77  ),GAU ,AMP(64  ))            
        CALL JIOXXX(W(1,7   ),W(1,12  ),GAL ,ZERO   ,AWIDTH  ,W(1,78  ))    ! Z
        CALL FVOXXX(W(1,2   ),W(1,78  ),GAU ,ZERO    ,ZERO    ,W(1,76  ))    
        CALL IOVXXX(W(1,3   ),W(1,76  ),W(1,13  ),GWF ,AMP(65  ))    
        CALL FVIXXX(W(1,3   ),W(1,13  ),GWF ,ZERO    ,ZERO    ,W(1,93  ))    
        CALL FVIXXX(W(1,93  ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,98  ))    
        CALL JIOXXX(W(1,98  ),W(1,2   ),GAU ,ZERO    ,AWIDTH  ,W(1,99  ))    
        CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,99  ),GAL ,AMP(66  ))            
        CALL JIOXXX(W(1,98  ),W(1,2   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,100 ))    
        CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,100 ),GZL ,AMP(67  ))            
        CALL FVOXXX(W(1,2   ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,101 ))    
        CALL FVOXXX(W(1,101 ),W(1,13  ),GWF ,ZERO    ,ZERO    ,W(1,102 ))    
        CALL JIOXXX(W(1,3   ),W(1,102 ),GAD ,ZERO    ,AWIDTH  ,W(1,103 ))    
        CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,103 ),GAL ,AMP(68  ))            
        CALL JIOXXX(W(1,3   ),W(1,102 ),GZD ,ZMASS   ,ZWIDTH  ,W(1,104 ))    
        CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,104 ),GZL ,AMP(69  ))            
        CALL JIOXXX(W(1,3   ),W(1,101 ),GWF ,WMASS   ,WWIDTH  ,W(1,105 ))    
        CALL FVIXXX(W(1,5   ),W(1,105 ),GWF ,ZERO    ,ZERO    ,W(1,106 ))    
        CALL JIOXXX(W(1,106 ),W(1,4   ),GAL ,ZERO    ,AWIDTH  ,W(1,107 ))    
        CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,107 ),GAL ,AMP(70  ))            
        CALL JIOXXX(W(1,106 ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,108 ))    
        CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,108 ),GZL ,AMP(71  ))            
        CALL FVOXXX(W(1,4   ),W(1,105 ),GWF ,ZERO    ,ZERO    ,W(1,109 ))    
        CALL JIOXXX(W(1,5   ),W(1,109 ),GZN ,ZMASS   ,ZWIDTH  ,W(1,110 ))    
        CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,110 ),GZL ,AMP(72  ))            
        CALL JIOXXX(W(1,93  ),W(1,101 ),GAU ,ZERO    ,AWIDTH  ,W(1,111 ))    
        CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,111 ),GAL ,AMP(73  ))            
        CALL JIOXXX(W(1,93  ),W(1,101 ),GZU ,ZMASS   ,ZWIDTH  ,W(1,112 ))    
        CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,112 ),GZL ,AMP(74  ))            
        ! CALL JVVXXX(W(1,13  ),W(1,105 ),GWWA ,ZERO    ,AWIDTH  ,W(1,113 ))      !!! anom!!!
        CALL jaww_anomal3(W(1,13  ),W(1,105  ),W(1,113))
        CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,113 ),GAL ,AMP(75  ))            
        ! CALL JVVXXX(W(1,13  ),W(1,105 ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,114 ))      !!! anom!!!
        CALL jzww_anomal3(W(1,13  ),W(1,105  ),W(1,114))
        CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,114 ),GZL ,AMP(76  ))            
        CALL IOVXXX(W(1,18  ),W(1,6   ),W(1,105 ),GWF ,AMP(78  ))            
        wwztens(mu) = wwztens(mu) -AMP(  61)-AMP(  62)-AMP(  63)-AMP(  64)-AMP(  65)
     &             -AMP(  66)-AMP(  67)-AMP(  68)-AMP(  69)-AMP(  70)
     &             -AMP(  71)-AMP(  72)-AMP(  73)-AMP(  74)-AMP(  75)
     &             -AMP(  76)-AMP(  78)
      endif

      if (procid .eq. WPWMhadZ) then
        ! new graphs for W- decay
      CALL JIOXXX(W(1,5   ),W(1,9   ),GAU ,ZERO   ,AWIDTH  ,W(1,75  ))    
      CALL FVOXXX(W(1,6   ),W(1,75  ),GAL ,LMASS   ,ZERO    ,W(1,76  ))    
      CALL IOVXXX(W(1,7   ),W(1,76  ),W(1,1   ),GAL ,AMP(61   ))            
      CALL IOVXXX(W(1,7   ),W(1,12  ),W(1,75  ),GAL ,AMP(62   ))             
      CALL JIOXXX(W(1,5   ),W(1,32  ),GAU ,ZERO   ,AWIDTH  ,W(1,77  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,77  ),GAL ,AMP(63  ))            
      CALL JIOXXX(W(1,5   ),W(1,49  ),GAU ,ZERO   ,AWIDTH  ,W(1,78  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,78  ),GAL ,AMP(64  ))            
      CALL JIOXXX(W(1,5   ),W(1,67  ),GAU ,ZERO   ,AWIDTH  ,W(1,79  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,79  ),GAL ,AMP(65  ))            
      CALL FVIXXX(W(1,5   ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,116  ))    
      CALL JIOXXX(W(1,116  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,117  ))    
      CALL FVIXXX(W(1,3   ),W(1,117  ),GWF ,ZERO    ,ZERO    ,W(1,118  ))    
      CALL JIOXXX(W(1,118  ),W(1,2   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,119  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,119  ),GZL ,AMP(66  ))            
      CALL FVOXXX(W(1,2   ),W(1,117  ),GWF ,ZERO    ,ZERO    ,W(1,120  ))    
      CALL JIOXXX(W(1,3   ),W(1,120  ),GAL ,ZERO    ,AWIDTH  ,W(1,121  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,121  ),GAL ,AMP(67  ))            
      CALL JIOXXX(W(1,3   ),W(1,120  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,122  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,122  ),GZL ,AMP(68  ))            
      CALL FVIXXX(W(1,116  ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,123  ))    
      CALL JIOXXX(W(1,123  ),W(1,4   ),GAD ,ZERO    ,AWIDTH  ,W(1,124  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,124  ),GAL ,AMP(69  ))            
      CALL JIOXXX(W(1,123  ),W(1,4   ),GZD ,ZMASS   ,ZWIDTH  ,W(1,125  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,125  ),GZL ,AMP(70  ))            
      CALL FVOXXX(W(1,9   ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,126  ))    
      CALL JIOXXX(W(1,5   ),W(1,126  ),GAU ,ZERO    ,AWIDTH  ,W(1,127  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,127  ),GAL ,AMP(71  ))            
      CALL JIOXXX(W(1,5   ),W(1,126  ),GZU ,ZMASS   ,ZWIDTH  ,W(1,128  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,128  ),GZL ,AMP(72  ))            
      ! CALL JVVXXX(W(1,117  ),W(1,8   ),GWWA ,ZERO    ,AWIDTH  ,W(1,129  ))      !!! anom!!!
      CALL jaww_anomal3(W(1,117  ),W(1,8  ),W(1,129))
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,129  ),GAL ,AMP(73  ))            
      ! CALL JVVXXX(W(1,117  ),W(1,8   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,130  ))      !!! anom!!!
      CALL jzww_anomal3(W(1,117  ),W(1,8  ),W(1,130))
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,130  ),GZL ,AMP(74  ))            
      CALL FVIXXX(W(1,7   ),W(1,117  ),GWF ,ZERO    ,ZERO    ,W(1,132  ))    
      CALL IOVXXX(W(1,132  ),W(1,6   ),W(1,8   ),GWF ,AMP(75  ))            
      CALL JIOXXX(W(1,116  ),W(1,9   ),GAU ,ZERO    ,AWIDTH  ,W(1,133  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,133  ),GAL ,AMP(76  ))            
      CALL JIOXXX(W(1,116  ),W(1,9   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,134  ))    
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,134  ),GZL ,AMP(78  ))            
        wwztens(mu) = wwztens(mu) -AMP(  61)-AMP(  62)-AMP(  63)-AMP(  64)-AMP(  65)
     &             -AMP(  66)-AMP(  67)-AMP(  68)-AMP(  69)-AMP(  70)
     &             -AMP(  71)-AMP(  72)-AMP(  73)-AMP(  74)-AMP(  75)
     &             -AMP(  76)-AMP(  78)
      endif

      if (procid.eq.WWZhad .and. Ztouu) then
        ! new graph for Z decay
      CALL FVIXXX(W(1,7   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,75  ))    
      CALL FVIXXX(W(1,75  ),W(1,1   ),GAD ,ZERO    ,ZERO    ,W(1,76  ))    
      CALL IOVXXX(W(1,76  ),W(1,6   ),W(1,13  ),GWF ,AMP(61  ))            
        wwztens(mu) = wwztens(mu) -AMP(  61)
        ! replace graphs 6, 16, 20, 24, 42, 58
      CALL FVIXXX(W(1,75  ),W(1,13  ),GWF ,ZERO    ,ZERO    ,W(1,77  ))    
      CALL IOVXXX(W(1,77  ),W(1,6   ),W(1,1   ),GAU ,AMP(62  ))            ! 16 > 5
      CALL IOVXXX(W(1,75  ),W(1,6   ),W(1,23  ),GWF ,AMP(63  ))            ! 20 > 16
      CALL FVIXXX(W(1,14  ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,78  ))    
      CALL IOVXXX(W(1,78  ),W(1,6   ),W(1,13  ),GWF ,AMP(64  ))            ! 6 > 17
      CALL FVIXXX(W(1,7   ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,79  ))    
      CALL IOVXXX(W(1,79  ),W(1,6   ),W(1,13  ),GWF ,AMP(65  ))            ! 24 > 21
      CALL IOVXXX(W(1,75  ),W(1,6   ),W(1,45  ),GWF ,AMP(66  ))            ! 42 > 38
      CALL FVIXXX(W(1,7   ),W(1,63  ),GWF ,ZERO    ,ZERO    ,W(1,80  ))    
      CALL IOVXXX(W(1,80  ),W(1,6   ),W(1,13  ),GWF ,AMP(67  ))            ! 58 > 53
        wwztens(mu) = wwztens(mu) +AMP(   6)+AMP(  16)+AMP(  20)+AMP(  24)+AMP(  42)+AMP(  58)
     &                    -AMP(  64)-AMP(  62)-AMP(  63)-AMP(  65)-AMP(  66)-AMP(  67)
      endif

      if (procid.eq.WWZhad .and. Ztodd) then
        ! new graph for Z decay
        CALL FVIXXX(W(1,18  ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,75  ))    
        CALL IOVXXX(W(1,75  ),W(1,6   ),W(1,8   ),GWF ,AMP(61  ))            
        wwztens(mu) = wwztens(mu) -AMP(  61)
      endif

!      else if (NW.eq.1) then
!      wwztens(mu) =    -AMP(  18)-AMP(  22)-AMP(  26)
!     &             -AMP(  23)  !AZH-contribution
!      endif
      enddo
      wwztens(4) = dcmplx(q(0),q(3))
      wwztens(5) = dcmplx(q(1),q(2))
c
      END


c ------------------------------------------------------------

      subroutine ZTOWWZ_had(P,N,h,wwztens,NW)

      IMPLICIT NONE

      DOUBLE PRECISION P(0:3,2:7)
      complex*16 wwztens(0:5)
      integer lsign(2:7,2),ll,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,7) / -1, -1, -1, -1, -1, -1/  !h=1
      data (lsign(ll,2),ll=2,7) / -1, -1, -1, -1, +1, +1/  !h=2

      call ZTOWWZ1_had(P,N,lsign(2,h),wwztens(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE ZTOWWZ1_had(P,N,lsign,wwztens,NW)
C
C Generated by MadGraph II Version 3.0. Updated 02/19/04
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C
C FOR PROCESS : z -> ve e+ mu- vm~ ta- ta+ 
C
      IMPLICIT NONE
C
C CONSTANTS
C
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  98)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS= 102)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C
C ARGUMENTS
C
      DOUBLE PRECISION P(0:3,2:7), Q(0:3)
      INTEGER N
      COMPLEX*16 wwztens(0:5)
      INTEGER lsign(2:7)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      common/debug1/W

c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
c      logical wtest
c      parameter (wtest=.false.)
      double complex dotcc
      external dotcc

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wmu(i,N)
            w(i,5)  = wvm(i,N)
            w(i,6)  = ztm(i,N)
            w(i,7)  = ztp(i,N)
            w(i,8)  = wp(i,N)
            w(i,28) = wm(i,N)
            w(i,18) = atau(i,N)
            w(i,15) = ztau(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)+p(mu,6)+p(mu,7)
      enddo

!      if (.not.lswitch) then
!         CALL OXXXXX(P(0,2   ),ZERO , lsign(2),+1,W(1,2   )) !ve
!         CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   )) !e+
!         CALL OXXXXX(P(0,4   ),ZERO , lsign(4),+1,W(1,4   )) !mu-
!         CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5),-1,W(1,5   )) !vm~
!         CALL OXXXXX(P(0,6   ),LMASS , lsign(6),+1,W(1,6   )) !ta-
!         CALL IXXXXX(P(0,7   ),LMASS ,-lsign(7),-1,W(1,7   )) !ta+
!         CALL JIOXXX(W(1,3   ),W(1,2),GWF ,WMASS,WWIDTH ,W(1,8 )) !wp
!         CALL JIOXXX(W(1,5   ),W(1,4),GWF ,WMASS,WWIDTH ,W(1,28)) !wm
!         CALL JIOXXX(W(1,7   ),W(1,6),GZL ,ZMASS,ZWIDTH ,W(1,15)) !ztau
!         CALL JIOXXX(W(1,7   ),W(1,6),GAL ,ZERO ,ZERO   ,W(1,18)) !atau
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),ZMASS ,ZWIDTH, MU,-1,W(1,1   ))
      CALL FVOXXX(W(1,4   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,5   ),W(1,9   ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,10  ))    ! W-
      CALL FVOXXX(W(1,6   ),W(1,10  ),GZ_ZF ,LMASS   ,ZERO    ,W(1,11  ))       ! Z
      CALL IOVXXX(W(1,7   ),W(1,11  ),W(1,1   ),GZ_ZF ,AMP(1   ))            ! Z
      CALL FVOXXX(W(1,6   ),W(1,1   ),GZ_ZF ,LMASS   ,ZERO    ,W(1,13  ))      ! Z
      CALL IOVXXX(W(1,7   ),W(1,13  ),W(1,10  ),GZ_ZF ,AMP(3   ))            ! Z
      CALL FVIXXX(W(1,5   ),W(1,1   ),GWM_ZUN ,ZERO    ,ZERO    ,W(1,14  ))    ! W-
      CALL JIOXXX(W(1,14  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,16  ))    
      CALL FVOXXX(W(1,2   ),W(1,15  ),GWP_ZUN ,ZERO    ,ZERO    ,W(1,17  ))    ! W+
      CALL IOVXXX(W(1,3   ),W(1,17  ),W(1,16  ),GWF ,AMP(4   ))            
      CALL FVIXXX(W(1,3   ),W(1,18  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,19  ))    ! W+
      CALL IOVXXX(W(1,19  ),W(1,2   ),W(1,16  ),GWF ,AMP(5   ))            
      CALL FVIXXX(W(1,3   ),W(1,15  ),GWP_ZDL ,ZERO    ,ZERO    ,W(1,20  ))    ! W+
      CALL IOVXXX(W(1,20  ),W(1,2   ),W(1,16  ),GWF ,AMP(6   ))            
      CALL FVIXXX(W(1,14  ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL IOVXXX(W(1,21  ),W(1,4   ),W(1,18  ),GWM_ADL ,AMP(7   ))            ! W-
      CALL IOVXXX(W(1,21  ),W(1,4   ),W(1,15  ),GWM_ZDL ,AMP(8   ))            ! W-
      CALL FVOXXX(W(1,9   ),W(1,1   ),GWM_ZUN ,ZERO    ,ZERO    ,W(1,22  ))    ! W-
      CALL JIOXXX(W(1,5   ),W(1,22  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,23  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,23  ),GZ_ZF ,AMP(9   ))            ! Z
      CALL wwa_anomal3(W(1,16  ),W(1,8   ),W(1,18  ), AMP(10  ))           
      CALL wwz_anomal3(W(1,16  ),W(1,8   ),W(1,15  ), AMP(11  ))           
      CALL FVOXXX(W(1,6   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL JIOXXX(W(1,7   ),W(1,25  ),GWF ,WMASS   ,WWIDTH  ,W(1,26  ))    
      CALL IOVXXX(W(1,14  ),W(1,4   ),W(1,26  ),GWF ,AMP(13  ))            
      CALL JIOXXX(W(1,14  ),W(1,9   ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,27  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,27  ),GZ_ZF ,AMP(14  ))            ! Z
      CALL FVIXXX(W(1,7   ),W(1,1   ),GZ_ZF ,LMASS   ,ZERO    ,W(1,29  ))      ! Z
      CALL jaww_anomal3(W(1,28  ),W(1,8   ), W(1,30 ))
      CALL IOVXXX(W(1,29  ),W(1,6   ),W(1,30  ),GZ_AF ,AMP(15  ))            ! Z
      CALL jzww_anomal3(W(1,28  ),W(1,8   ), W(1,31 ))   
      CALL IOVXXX(W(1,29  ),W(1,6   ),W(1,31  ),GZ_ZF ,AMP(16  ))            ! Z
      CALL jhww_anomal3(W(1,28  ),W(1,8   ),W(1,32 ))  
      CALL zzh_anomal3(W(1,15  ),W(1,1   ),W(1,32  ),AMP(18  ))           
c     New Higgs Coupling: AZH 
      CALL azh_anomal3(W(1,18  ),W(1,1   ),W(1,32  ),AMP(23  ))
      CALL FVIXXX(W(1,7   ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,33  ))    
      CALL IOVXXX(W(1,33  ),W(1,13  ),W(1,8   ),GWF ,AMP(20  ))            
      CALL JIOXXX(W(1,7   ),W(1,13  ),GZ_AF ,ZERO    ,ZERO    ,W(1,34  ))    ! Z
      CALL wwa_anomal3(W(1,28  ),W(1,8   ),W(1,34  ), AMP(21  ))           
      CALL JIOXXX(W(1,7   ),W(1,13  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,35  ))    ! Z
      CALL wwz_anomal3(W(1,28  ),W(1,8   ),W(1,35  ), AMP(22  ))           
      CALL jwpzwm_anomal3(W(1,1   ),W(1,28  ), W(1,37 ))
      CALL IOVXXX(W(1,3   ),W(1,17  ),W(1,37  ),GWF ,AMP(24  ))            
      CALL IOVXXX(W(1,19  ),W(1,2   ),W(1,37  ),GWF ,AMP(25  ))            
      CALL IOVXXX(W(1,20  ),W(1,2   ),W(1,37  ),GWF ,AMP(26  ))            
      CALL jwmwpz_anomal3(W(1,8   ),W(1,1   ), W(1,38 ))
      CALL FVIXXX(W(1,5   ),W(1,38  ),GWF ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL JIOXXX(W(1,39  ),W(1,4   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,40  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,40  ),GZ_AF ,AMP(27  ))            ! Z
      CALL JIOXXX(W(1,39  ),W(1,4   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,41  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,41  ),GZ_ZF ,AMP(28  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,38  ),GWF ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL JIOXXX(W(1,5   ),W(1,42  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,43  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,43  ),GZ_ZF ,AMP(29  ))            ! Z
      CALL IOVXXX(W(1,29  ),W(1,25  ),W(1,28  ),GWF ,AMP(30  ))            
      CALL wwa_anomal3(W(1,37  ),W(1,8   ),W(1,18  ), AMP(31  ))           
      CALL wwz_anomal3(W(1,37  ),W(1,8   ),W(1,15  ), AMP(32  ))           
      CALL wwz_anomal3(W(1,28  ),W(1,26  ),W(1,1   ), AMP(34  ))           
      CALL IOVXXX(W(1,33  ),W(1,25  ),W(1,1   ),GZ_ZUN ,AMP(35  ))            ! Z
      CALL jaww_anomal3(W(1,28  ),W(1,38  ), W(1,44 )) 
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,44  ),GZ_AF ,AMP(36  ))            ! Z
      CALL jzww_anomal3(W(1,28  ),W(1,38  ), W(1,45 ))  
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,45  ),GZ_ZF ,AMP(37  ))            ! Z
      CALL FVOXXX(W(1,6   ),W(1,38  ),GWF ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,7   ),W(1,47  ),W(1,28  ),GWF ,AMP(39  ))            
      CALL wwza_anomal4(W(1,28),W(1,1),W(1,8),W(1,18), AMP(40  )) 
      CALL wwzz_anomal4(W(1,28),W(1,1),W(1,8),W(1,15), AMP(41  ))  
      CALL FVIXXX(W(1,5   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL JIOXXX(W(1,48  ),W(1,4   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,49  ))    ! W-
      CALL IOVXXX(W(1,29  ),W(1,6   ),W(1,49  ),GZ_AF ,AMP(42  ))            ! Z
      CALL JIOXXX(W(1,48  ),W(1,4   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,50  ))    ! W-
      CALL IOVXXX(W(1,29  ),W(1,6   ),W(1,50  ),GZ_ZF ,AMP(43  ))            ! Z
      CALL IOVXXX(W(1,48  ),W(1,4   ),W(1,34  ),GWM_ADL ,AMP(45  ))            ! W-
      CALL IOVXXX(W(1,48  ),W(1,4   ),W(1,35  ),GWM_ZDL ,AMP(46  ))            ! W-
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWM_ZDL ,ZERO    ,ZERO    ,W(1,51  ))    ! W-
      CALL JIOXXX(W(1,5   ),W(1,51  ),GWF ,WMASS   ,WWIDTH  ,W(1,52  ))    
      CALL FVIXXX(W(1,3   ),W(1,52  ),GWF ,ZERO    ,ZERO    ,W(1,53  ))    
      CALL IOVXXX(W(1,53  ),W(1,2   ),W(1,15  ),GWP_ZUN ,AMP(47  ))            ! W+
      CALL FVOXXX(W(1,2   ),W(1,52  ),GWF ,ZERO    ,ZERO    ,W(1,54  ))    
      CALL IOVXXX(W(1,3   ),W(1,54  ),W(1,18  ),GWP_ADL ,AMP(48  ))            ! W+
      CALL IOVXXX(W(1,3   ),W(1,54  ),W(1,15  ),GWP_ZDL ,AMP(49  ))            ! W+
      CALL FVIXXX(W(1,48  ),W(1,1   ),GWM_ZDL ,ZERO    ,ZERO    ,W(1,55  ))    ! W-
      CALL IOVXXX(W(1,55  ),W(1,4   ),W(1,18  ),GWM_ADL ,AMP(50  ))            ! W-
      CALL IOVXXX(W(1,55  ),W(1,4   ),W(1,15  ),GWM_ZDL ,AMP(51  ))            ! W-
      CALL FVOXXX(W(1,51  ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,56  ))    
      CALL JIOXXX(W(1,5   ),W(1,56  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,57  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,57  ),GZ_ZF ,AMP(52  ))            ! Z
      CALL JIOXXX(W(1,48  ),W(1,51  ),GWM_ADL ,ZERO    ,ZERO    ,W(1,58  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,58  ),GZ_AF ,AMP(53  ))            ! Z
      CALL JIOXXX(W(1,48  ),W(1,51  ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,59  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,59  ),GZ_ZF ,AMP(54  ))            ! Z
      CALL jaww_anomal3(W(1,52  ),W(1,8   ), W(1,60 )) 
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,60  ),GZ_AF ,AMP(55  ))            ! Z
      CALL jzww_anomal3(W(1,52  ),W(1,8   ), W(1,61 )) 
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,61  ),GZ_ZF ,AMP(56  ))            ! Z
      CALL IOVXXX(W(1,7   ),W(1,25  ),W(1,52  ),GWF ,AMP(58  ))            
      CALL FVOXXX(W(1,2   ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,63  ))    
      CALL JIOXXX(W(1,29  ),W(1,6   ),GZ_AF ,ZERO    ,ZERO    ,W(1,64  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,63  ),W(1,64  ),GWP_ADL ,AMP(59  ))            ! W+
      CALL JIOXXX(W(1,29  ),W(1,6   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,65  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,63  ),W(1,65  ),GWP_ZDL ,AMP(60  ))            ! W+
      CALL FVIXXX(W(1,3   ),W(1,34  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,67  ))    ! W+
      CALL IOVXXX(W(1,67  ),W(1,2   ),W(1,28  ),GWF ,AMP(62  ))            
      CALL FVIXXX(W(1,3   ),W(1,35  ),GWP_ZDL ,ZERO    ,ZERO    ,W(1,68  ))    ! W+
      CALL IOVXXX(W(1,68  ),W(1,2   ),W(1,28  ),GWF ,AMP(63  ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWP_ZDL ,ZERO    ,ZERO    ,W(1,69  ))    ! W+
      CALL FVIXXX(W(1,69  ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,70  ))    
      CALL IOVXXX(W(1,70  ),W(1,2   ),W(1,15  ),GWP_ZUN ,AMP(64  ))            ! W+
      CALL IOVXXX(W(1,19  ),W(1,63  ),W(1,1   ),GWP_ZDL ,AMP(65  ))            ! W+
      CALL IOVXXX(W(1,20  ),W(1,63  ),W(1,1   ),GWP_ZDL ,AMP(66  ))            ! W+
      CALL JIOXXX(W(1,69  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,71  ))    
      CALL FVIXXX(W(1,5   ),W(1,71  ),GWF ,ZERO    ,ZERO    ,W(1,72  ))    
      CALL JIOXXX(W(1,72  ),W(1,4   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,73  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,73  ),GZ_AF ,AMP(67  ))            ! Z
      CALL JIOXXX(W(1,72  ),W(1,4   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,74  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,74  ),GZ_ZF ,AMP(68  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,71  ),GWF ,ZERO    ,ZERO    ,W(1,75  ))    
      CALL JIOXXX(W(1,5   ),W(1,75  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,76  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,76  ),GZ_ZF ,AMP(69  ))            ! Z
      CALL IOVXXX(W(1,69  ),W(1,63  ),W(1,18  ),GWP_ADL ,AMP(70  ))            ! W+
      CALL IOVXXX(W(1,69  ),W(1,63  ),W(1,15  ),GWP_ZDL ,AMP(71  ))            ! W+
      CALL jaww_anomal3(W(1,28  ),W(1,71  ), W(1,77 )) 
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,77  ),GZ_AF ,AMP(72  ))            ! Z
      CALL jzww_anomal3(W(1,28  ),W(1,71  ), W(1,78 ))  
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,78  ),GZ_ZF ,AMP(73  ))            ! Z
      CALL FVOXXX(W(1,6   ),W(1,71  ),GWF ,ZERO    ,ZERO    ,W(1,80  ))    
      CALL IOVXXX(W(1,7   ),W(1,80  ),W(1,28  ),GWF ,AMP(75  ))            
      CALL FVIXXX(W(1,3   ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,81  ))    
      CALL IOVXXX(W(1,81  ),W(1,2   ),W(1,65  ),GWP_ZUN ,AMP(76  ))            ! W+
      CALL FVOXXX(W(1,2   ),W(1,35  ),GWP_ZUN ,ZERO    ,ZERO    ,W(1,82  ))    ! W+
      CALL IOVXXX(W(1,3   ),W(1,82  ),W(1,28  ),GWF ,AMP(78  ))            
      CALL IOVXXX(W(1,81  ),W(1,17  ),W(1,1   ),GWP_ZUN ,AMP(79  ))            ! W+
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWP_ZUN ,ZERO    ,ZERO    ,W(1,83  ))    ! W+
      CALL FVOXXX(W(1,83  ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,84  ))    
      CALL IOVXXX(W(1,3   ),W(1,84  ),W(1,18  ),GWP_ADL ,AMP(80  ))            ! W+
      CALL IOVXXX(W(1,3   ),W(1,84  ),W(1,15  ),GWP_ZDL ,AMP(81  ))            ! W+
      CALL JIOXXX(W(1,3   ),W(1,83  ),GWF ,WMASS   ,WWIDTH  ,W(1,85  ))    
      CALL FVIXXX(W(1,5   ),W(1,85  ),GWF ,ZERO    ,ZERO    ,W(1,86  ))    
      CALL JIOXXX(W(1,86  ),W(1,4   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,87  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,87  ),GZ_AF ,AMP(82  ))            ! Z
      CALL JIOXXX(W(1,86  ),W(1,4   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,88  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,88  ),GZ_ZF ,AMP(83  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,85  ),GWF ,ZERO    ,ZERO    ,W(1,89  ))    
      CALL JIOXXX(W(1,5   ),W(1,89  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,90  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,90  ),GZ_ZF ,AMP(84  ))            ! Z
      CALL IOVXXX(W(1,81  ),W(1,83  ),W(1,15  ),GWP_ZUN ,AMP(85  ))            ! W+
      CALL jaww_anomal3(W(1,28  ),W(1,85  ), W(1,91 )) 
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,91  ),GZ_AF ,AMP(86  ))            ! Z
      CALL jzww_anomal3(W(1,28  ),W(1,85  ), W(1,92 )) 
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,92  ),GZ_ZF ,AMP(87  ))            ! Z
      CALL FVOXXX(W(1,6   ),W(1,85  ),GWF ,ZERO    ,ZERO    ,W(1,94  ))    
      CALL IOVXXX(W(1,7   ),W(1,94  ),W(1,28  ),GWF ,AMP(89  ))            
!      if (NW.eq.0) then

      wwztens(mu) =    -AMP(   1)-AMP(   3)-AMP(   4)-AMP(   5)-AMP(   6) !non
     &             -AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)-AMP(  11) !resonant
     &             -AMP(  13)-AMP(  14)-AMP(  15)-AMP(  16)-AMP(  20) !
     &             -AMP(  21)-AMP(  22)-AMP(  24)-AMP(  25)-AMP(  26) !non
     &             -AMP(  27)-AMP(  28)-AMP(  29)-AMP(  30)-AMP(  34) !resonant
     &             -AMP(  35)-AMP(  39)-AMP(  42)-AMP(  43)-AMP(  45) !
     &             -AMP(  46)-AMP(  47)-AMP(  48)-AMP(  49)-AMP(  50) !non
     &             -AMP(  51)-AMP(  52)-AMP(  53)-AMP(  54)-AMP(  55) !resonant
     &             -AMP(  56)-AMP(  58)-AMP(  59)-AMP(  60)-AMP(  62) !
     &             -AMP(  63)-AMP(  64)-AMP(  65)-AMP(  66)-AMP(  67) !non
     &             -AMP(  68)-AMP(  69)-AMP(  70)-AMP(  71)-AMP(  72) !resonant
     &             -AMP(  73)-AMP(  75)-AMP(  76)-AMP(  78)-AMP(  79) !
     &             -AMP(  80)-AMP(  81)-AMP(  82)-AMP(  83)-AMP(  84) !non
     &             -AMP(  85)-AMP(  86)-AMP(  87)-AMP(  89)           !resonant
     &             -AMP(  31)-AMP(  32)-AMP(  36)-AMP(  37)-AMP(  40)
     &             -AMP(  41)
     &             -AMP(  18)         !H -> WW contribution 
     &             -AMP(  23)         !AZH contribution 

      if (procid .eq. WPhadWMZ) then
        ! new graphs for W+ decay
      CALL FVOXXX(W(1,2   ),W(1,18  ),GAU ,ZERO    ,ZERO    ,W(1,95  ))    ! W+     18 = A
      CALL IOVXXX(W(1,3   ),W(1,95  ),W(1,16  ),GWF ,AMP(90  ))            
      CALL IOVXXX(W(1,3   ),W(1,95  ),W(1,37  ),GWF ,AMP(91  ))            
      CALL IOVXXX(W(1,53  ),W(1,2   ),W(1,18  ),GAU ,AMP(92  ))            ! W+
      CALL IOVXXX(W(1,70  ),W(1,2   ),W(1,18  ),GAU ,AMP(93  ))            ! W+
      CALL JIOXXX(W(1,29  ),W(1,6   ),GAL ,ZERO   ,AWIDTH  ,W(1,97  ))    
      CALL IOVXXX(W(1,81  ),W(1,2   ),W(1,97  ),GAU ,AMP(94  ))            ! W+
      CALL JIOXXX(W(1,7   ),W(1,13  ),GAL ,ZERO   ,AWIDTH  ,W(1,98  ))    
      CALL FVOXXX(W(1,2   ),W(1,98  ),GAU ,ZERO    ,ZERO    ,W(1,96  ))    ! W+
      CALL IOVXXX(W(1,3   ),W(1,96  ),W(1,28  ),GWF ,AMP(95  ))            
      CALL IOVXXX(W(1,81  ),W(1,95  ),W(1,1   ),GZU ,AMP(96  ))            ! W+
      CALL IOVXXX(W(1,81  ),W(1,83  ),W(1,18  ),GAU ,AMP(97  ))            ! W+
        wwztens(mu) = wwztens(mu) -AMP(  90)-AMP(  91)-AMP(  92)-AMP(  93)-AMP(  94)
     &             -AMP(  95)-AMP(  96)-AMP(  97)
      endif

      if (procid .eq. WPWMhadZ) then
        ! new graphs for W- decay
      CALL JIOXXX(W(1,5   ),W(1,9   ),GAU ,ZERO   ,AWIDTH  ,W(1,95  ))    ! W-
      CALL FVOXXX(W(1,6   ),W(1,95  ),GAL ,LMASS   ,ZERO    ,W(1,96  ))       
      CALL IOVXXX(W(1,7   ),W(1,96  ),W(1,1   ),GZL ,AMP(90  ))            
      CALL IOVXXX(W(1,7   ),W(1,13  ),W(1,95  ),GAL ,AMP(91  ))            
      CALL JIOXXX(W(1,5   ),W(1,22  ),GAU ,ZERO   ,AWIDTH  ,W(1,97  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,97  ),GAL ,AMP(92  ))            
      CALL JIOXXX(W(1,14  ),W(1,9   ),GAU ,ZERO   ,AWIDTH  ,W(1,98  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,98  ),GAL ,AMP(93  ))            
      CALL JIOXXX(W(1,5   ),W(1,42  ),GAU ,ZERO   ,AWIDTH  ,W(1,99  ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,99  ),GAL ,AMP(94  ))            
      CALL JIOXXX(W(1,5   ),W(1,56  ),GAU ,ZERO   ,AWIDTH  ,W(1,100 ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,100 ),GAL ,AMP(95  ))            
      CALL JIOXXX(W(1,5   ),W(1,75  ),GAU ,ZERO   ,AWIDTH  ,W(1,101 ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,101 ),GAL ,AMP(96  ))            
      CALL JIOXXX(W(1,5   ),W(1,89  ),GAU ,ZERO   ,AWIDTH  ,W(1,102 ))    ! W-
      CALL IOVXXX(W(1,7   ),W(1,6   ),W(1,102 ),GAL ,AMP(97  ))            
        wwztens(mu) = wwztens(mu) -AMP(  90)-AMP(  91)-AMP(  92)-AMP(  93)-AMP(  94)
     &             -AMP(  95)-AMP(  96)-AMP(  97)
      endif

      if (procid.eq.WWZhad .and. Ztouu) then
        ! replace graphs 13, 20, 30, 34, 35, 39, 58, 75, 89
      CALL FVIXXX(W(1,7   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,95  ))    
      CALL IOVXXX(W(1,95  ),W(1,6   ),W(1,16  ),GWF ,AMP(90  ))            ! 13 > 11
      CALL FVIXXX(W(1,95  ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,96  ))    
      CALL IOVXXX(W(1,96  ),W(1,6   ),W(1,1   ),GZU ,AMP(91  ))            ! 30 > 16
      CALL IOVXXX(W(1,95  ),W(1,6   ),W(1,37  ),GWF ,AMP(92  ))            ! 34 > 27
      CALL FVIXXX(W(1,29  ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,97  ))    
      CALL IOVXXX(W(1,97  ),W(1,6   ),W(1,28  ),GWF ,AMP(93  ))            ! 20 > 28
      CALL FVIXXX(W(1,95  ),W(1,1   ),GZD ,ZERO    ,ZERO    ,W(1,98  ))    
      CALL IOVXXX(W(1,98  ),W(1,6   ),W(1,28  ),GWF ,AMP(94  ))            ! 35 > 31
      CALL FVIXXX(W(1,7   ),W(1,38  ),GWF ,ZERO    ,ZERO    ,W(1,99  ))    
      CALL IOVXXX(W(1,99  ),W(1,6   ),W(1,28  ),GWF ,AMP(95  ))            ! 39 > 32
      CALL IOVXXX(W(1,95  ),W(1,6   ),W(1,52  ),GWF ,AMP(96  ))            ! 58 > 49
      CALL FVIXXX(W(1,7   ),W(1,71  ),GWF ,ZERO    ,ZERO    ,W(1,100 ))    
      CALL IOVXXX(W(1,100 ),W(1,6   ),W(1,28  ),GWF ,AMP(97  ))            ! 75 > 64
      CALL FVIXXX(W(1,7   ),W(1,85  ),GWF ,ZERO    ,ZERO    ,W(1,101 ))    
      CALL IOVXXX(W(1,101 ),W(1,6   ),W(1,28  ),GWF ,AMP(98  ))            ! 89 > 76
        wwztens(mu) = wwztens(mu) +AMP(  13)+AMP(  30)+AMP(  34)+AMP(  20)+AMP(  35)
     &                    +AMP(  39)+AMP(  58)+AMP(  75)+AMP(  89)
     &                    -AMP(  90)-AMP(  91)-AMP(  92)-AMP(  93)-AMP(  94)
     &                    -AMP(  95)-AMP(  96)-AMP(  97)-AMP(  98)
      endif

!      else if (NW.eq.1 ) then
!      wwztens(mu) =    -AMP(  32)-AMP(  37)-AMP(  41)
!     &             -AMP(  18)         !H -> WW contribution
!     &             -AMP(  23)         !AZH contribution 
!      endif
      enddo
      wwztens(4) = dcmplx(q(0),q(3))
      wwztens(5) = dcmplx(q(1),q(2))

      END


      subroutine TRIBOSZtoWW_had(P,N,z,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z -> ve e+ mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   5) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  13) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      INTEGER N
      DOUBLE PRECISION Q(0:3), P(0:3,2:5)
      complex*16 z(0:5)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(2:5), ihel
      DATA (NHEL(IHEL),IHEL=2,5) / -1,+1,-1,+1/
      Save NHEL

c  lepton spinors and W+- polarization vectors

#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)

C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------    
  
      if (lswitch) then      ! read in lepton an W states from common block
         do i =1,6
            w(i,2) = wve(i,N)
            w(i,3) = wep(i,N)
            w(i,4) = wmu(i,N)
            w(i,5) = wvm(i,N)
            w(i,6) = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

!      if (.not.lswitch) then
!         CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
!         CALL IXXXXX(P(0,3   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
!         CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
!         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
!         CALL JIOXXX(W(1,3   ),W(1,2),GWF ,WMASS,WWIDTH,W(1,6))    
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0     ),ZMASS ,Zwidth,MU,-1,W(1,1   )) 
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GWM_ZUN ,AMP(1   ))            ! W-
      CALL jwmwpz_anomal3(W(1,6   ),W(1,1   ),W(1,8   ))
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWM_ZDL ,ZERO    ,ZERO    ,W(1,9   ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWP_ZDL ,ZERO    ,ZERO    ,W(1,10  ))    ! W+
      CALL JIOXXX(W(1,10  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWP_ZUN ,ZERO    ,ZERO    ,W(1,12  ))    ! W+
      CALL JIOXXX(W(1,3   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GWF ,AMP(5   ))    
!      if (NW.eq.0) then        

         z(mu) = +AMP(   2)
     &           +AMP(   1)+AMP(   3)+AMP(   4)+AMP(   5) !non resonant

!      else if (NW.eq.1) then
!         z(mu) = +AMP(   2)
!      endif
      enddo
      z(4) = dcmplx(q(0),q(3))
      z(5) = dcmplx(q(1),q(2))
c
      return
      END

c---------------------------------------------------------------------

      subroutine TRIBOSAtoWW_had(P,N,a, NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a -> ve e+ mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   4) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  12) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      INTEGER N
      DOUBLE PRECISION Q(0:3), P(0:3,2:5)
      complex*16 a(0:5)
      INTEGER NW ! = 0: all diagrams, = 1: no non resonant diagrams
C  
C LOCAL VARIABLES 
C
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(2:5), ihel
      DATA (NHEL(IHEL),IHEL=2,5) /-1,+1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2) = wve(i,N)
            w(i,3) = wep(i,N)
            w(i,4) = wmu(i,N)
            w(i,5) = wvm(i,N)
            w(i,6) = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

!      if (.not.lswitch) then
!         CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
!         CALL IXXXXX(P(0,3   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
!         CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
!         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
!         CALL JIOXXX(W(1,3   ),W(1,2),GWF ,WMASS,WWIDTH,W(1,6))    
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),ZERO ,ZERO, MU,-1,W(1,1   ))
      CALL jwmwpa_anomal3(W(1,6   ),W(1,1   ),W(1,7   ))
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GWF ,AMP(1   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,8   ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,6   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWP_ADL ,ZERO    ,ZERO    ,W(1,9   ))    ! W+
      CALL JIOXXX(W(1,9   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,10  ),GWF ,AMP(3   ))            
!      if (NW.eq.0) then

         a(mu) = +AMP(   1)
     &        +AMP(   2)+AMP(   3) !non resonant

      if (procid .eq. WPhadWMZ) then
        ! new graphs for W+ decay
        CALL FVOXXX(W(1,2   ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,11  ))    
        CALL JIOXXX(W(1,3   ),W(1,11  ),GWF ,WMASS   ,WWIDTH  ,W(1,12  ))    
        CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GWF ,AMP(4   ))            
        a(mu) = a(mu) + AMP(   4)
      endif

      if (procid .eq. WPWMhadZ) then
        ! new graphs for W- decay
        CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
        CALL FVOXXX(W(1,4   ),W(1,11  ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
        CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,1   ),GAU ,AMP(4   ))            
        a(mu) = a(mu) + AMP(   4)
      endif

!      else if (NW.eq.1) then
!         a(mu) = +AMP(   1)
!      endif
      enddo
      a(4) = dcmplx(q(0),q(3))
      a(5) = dcmplx(q(1),q(2))
c
      END


      SUBROUTINE WMTOWZ_had(v,N,h,wmztens,NW)

      IMPLICIT NONE

      DOUBLE PRECISION P(0:3,2:5), v(0:3,6)
      complex*16 wmztens(0:5)
      integer lsign(2:5,2),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,5) / -1, -1, -1, -1/  !h=1
      data (lsign(ll,2),ll=2,5) / -1, -1, +1, +1/  !h=2

      do mu = 0,3
         P(mu,2) = v(mu,3)
         P(mu,3) = v(mu,4)
         P(mu,4) = v(mu,5)
         P(mu,5) = v(mu,6)
      enddo

      call WMTOWZ1_had(P,N,lsign(2,h),wmztens,NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE WMTOWZ1_had(P,N,lsign,wmztens,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- -> mu- vm~ ta- ta+  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   8) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  16) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:5), Q(0:3)
      INTEGER N
      COMPLEX*16 wmztens(0:5)
      INTEGER lsign(2:5)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)

C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"                    
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wmu(i,N)
            w(i,3)  = wvm(i,N)
            w(i,4)  = ztm(i,N)
            w(i,5)  = ztp(i,N)
            w(i,6)  = wm(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

!      if (.not.lswitch) then     
!         CALL OXXXXX(P(0,2   ),ZERO ,  lsign(2),+1, W(1,2   )) ! mu-       
!         CALL IXXXXX(P(0,3   ),ZERO , -lsign(3),-1, W(1,3   )) ! vm~       
!         CALL OXXXXX(P(0,4   ),LMASS , lsign(4),+1, W(1,4   )) ! ta-      
!         CALL IXXXXX(P(0,5   ),LMASS ,-lsign(5),-1, W(1,5   )) ! ta+       
!         CALL JIOXXX(W(1,3),W(1,2),GWF,WMASS,WWIDTH,W(1,6  ))  ! wm
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))
      CALL jaww_anomal3(W(1,6   ),W(1,1   ),W(1,7  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GZ_AF ,AMP(1   ))            ! Z
      CALL jzww_anomal3(W(1,6   ),W(1,1   ),W(1,8  ))      
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GZ_ZF ,AMP(2   ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,10  ),W(1,6   ),GWF ,AMP(4   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL JIOXXX(W(1,11  ),W(1,2   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,12  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GZ_AF ,AMP(5   ))            ! Z
      CALL JIOXXX(W(1,11  ),W(1,2   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,13  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GZ_ZF ,AMP(6   ))            ! Z
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL JIOXXX(W(1,3   ),W(1,14  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,15  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,15  ),GZ_ZF ,AMP(7   ))            ! Z
!      if (NW.eq.0) then

         wmztens(mu) = +AMP(   1)+AMP(   2)                
     &          +AMP(   4)+AMP(   5)+AMP(   6)+AMP(   7)!non resonant diagrams

      if (procid .eq. WPWMhadZ) then
        ! new graphs for W- decay
        CALL JIOXXX(W(1,3   ),W(1,14  ),GAU ,ZERO   ,AWIDTH  ,W(1,16  ))    ! W-
        CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,16  ),GAL ,AMP(8   ))            
         wmztens(mu) = wmztens(mu) +AMP(   8)
      endif

      if (procid.eq.WWZhad .and. Ztouu) then
        ! replace graph 4
        CALL FVIXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,16  ))    
        CALL IOVXXX(W(1,16  ),W(1,4   ),W(1,6   ),GWF ,AMP(8   ))            
        wmztens(mu) = wmztens(mu) -AMP(   4)
     &                            +AMP(   8)
      endif

!      else if (NW.eq.1) then
!         wmztens(mu) = AMP(   2)      
!      endif
      enddo
      wmztens(4) = dcmplx(q(0),q(3))
      wmztens(5) = dcmplx(q(1),q(2))
c
      return
      END

c----------------------------------------------------------------------

      SUBROUTINE WPTOWZ_had(v,N,h,wpztens,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:5)
      
      complex*16 wpztens(0:5)
      integer lsign(2:5,2),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,5) / -1, -1, -1, -1/  !h=1
      data (lsign(ll,2),ll=2,5) / -1, -1,  1,  1/  !h=2

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,5)
         P(mu,5) = v(mu,6)
      enddo

      call WPTOWZ1_had(P,N,lsign(2,h),wpztens,NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE WPTOWZ1_had(P,N,lsign,wpztens,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ ->  ve e+ ta- ta+   
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   8) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  16) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:5), Q(0:3)
      INTEGER N
      COMPLEX*16 wpztens(0:5)
      INTEGER lsign(2:5)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"

  
C GLOBAL VARIABLES
  
#include "VBFNLO/utilities/coupl.inc"   
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"

      logical lswitch
      parameter (lswitch=.true.)
                       
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = ztm(i,N)
            w(i,5)  = ztp(i,N)
            w(i,6)  = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

!      if (.not.lswitch) then     
!         CALL OXXXXX(P(0,2   ),ZERO ,  lsign(2),+1,W(1,2   )) ! ve       
!         CALL IXXXXX(P(0,3   ),ZERO , -lsign(3),-1,W(1,3   )) ! e+       
!         CALL OXXXXX(P(0,4   ),LMASS , lsign(4),+1,W(1,4   )) ! ta-      
!         CALL IXXXXX(P(0,5   ),LMASS ,-lsign(5),-1,W(1,5   )) ! ta+       
!         CALL JIOXXX(W(1,3),W(1,2),GWF,WMASS,WWIDTH,W(1,6  )) ! wp
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GWF ,AMP(1   ))            
      CALL jaww_anomal3(W(1,1   ),W(1,6   ),W(1,8  ))  
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GZ_AF ,AMP(2   ))            ! Z
      CALL jzww_anomal3(W(1,1   ),W(1,6   ),W(1,9  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,9   ),GZ_ZF ,AMP(3   ))            ! Z
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL JIOXXX(W(1,11  ),W(1,2   ),GWP_ZUN ,ZMASS   ,ZWIDTH  ,W(1,12  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GZ_ZF ,AMP(5   ))            ! Z
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,14  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,14  ),GZ_AF ,AMP(6   ))            ! Z
      CALL JIOXXX(W(1,3   ),W(1,13  ),GWP_ZDL ,ZMASS   ,ZWIDTH  ,W(1,15  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,15  ),GZ_ZF ,AMP(7   ))            ! Z
!      if (NW.eq.0) then        

      wpztens(mu) = +AMP(   1)+AMP(   5)+AMP(   6)+AMP(   7) !non-resonant diagrams
     &          +AMP(   2)+AMP(   3)

      if (procid .eq. WPhadWMZ) then
        ! new graphs for W- decay
      CALL JIOXXX(W(1,11  ),W(1,2   ),GAU ,ZERO   ,AWIDTH  ,W(1,16  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,16  ),GAL ,AMP(8   ))            ! Z
         wpztens(mu) = wpztens(mu) +AMP(   8)
      endif

      if (procid.eq.WWZhad .and. Ztouu) then
        ! replace graph 1
        CALL FVIXXX(W(1,5   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,16  ))    
        CALL IOVXXX(W(1,16  ),W(1,4   ),W(1,1   ),GWF ,AMP(8   ))            
        wpztens(mu) = wpztens(mu) -AMP(   1)
     &                            +AMP(   8)
      endif

!      else if (NW.eq.1) then
!      wpztens(mu) = +AMP(   3)
!      endif
      enddo
      wpztens(4) = dcmplx(q(0),q(3))
      wpztens(5) = dcmplx(q(1),q(2))
c
      return
      END

