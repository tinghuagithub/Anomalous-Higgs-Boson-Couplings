c
c this is the modified version of WWZtoww.F that includes
c anomalous couplings
c
c in this file leptonic tensors needed for qq -> WWZ, WWZ -> 6l
c are computed for specific helicities (h)
c
c ------------------------------------------------------------
c ------------------------------------------------------------

      subroutine TRIBOSZtoWW_anomal(P,N,z,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z -> ve e+ mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   5) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  13) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      INTEGER N
      DOUBLE PRECISION Q(0:3), P(0:3,2:5)
      complex*16 z(0:5)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(2:5), ihel
      DATA (NHEL(IHEL),IHEL=2,5) / -1,+1,-1,+1/
      Save NHEL

c  lepton spinors and W+- polarization vectors

#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)

C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------    
  
      if (lswitch) then      ! read in lepton an W states from common block
         do i =1,6
            w(i,2) = wve(i,N)
            w(i,3) = wep(i,N)
            w(i,4) = wmu(i,N)
            w(i,5) = wvm(i,N)
            w(i,6) = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

c      moved to m2s_qqWWZ.F
c      call anomal_formfactor_4v(q)

      if (.not.lswitch) then
         CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,3   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
         CALL JIOXXX(W(1,3   ),W(1,2),GWF ,WMASS,WWIDTH,W(1,6))    
c         print*," ve ",(wve(i,N)/w(i,2),i=1,6)
c         print*," ep ",(wep(i,N)/w(i,3),i=1,6)
c         print*," mu ",(wmu(i,N)/w(i,4),i=1,6)
c         print*," vm ",(wvm(i,N)/w(i,5),i=1,6)
c         print*," wp ",( wp(i,N)/w(i,6),i=1,6)
      endif

      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0     ),ZMASS ,Zwidth,MU,-1,W(1,1   )) 
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GZN ,AMP(1   ))            

c      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,8   ))
      CALL jwmwpz_anomal3(W(1,6   ),W(1,1   ),W(1,8   ))

      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GWF ,AMP(5   ))    
      if (NW.eq.0) then        
         z(mu) = +AMP(   2)
     &           +AMP(   1)+AMP(   3)+AMP(   4)+AMP(   5) !non resonant
      else if (NW.eq.1) then
         z(mu) = +AMP(   2)
      endif
      enddo
      z(4) = dcmplx(q(0),q(3))
      z(5) = dcmplx(q(1),q(2))
c
      return
      END

c---------------------------------------------------------------------

      subroutine TRIBOSAtoWW_anomal(P,N,a, NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a -> ve e+ mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   3) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  10) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      INTEGER N
      DOUBLE PRECISION Q(0:3), P(0:3,2:5)
      complex*16 a(0:5)
      INTEGER NW ! = 0: all diagrams, = 1: no non resonant diagrams
C  
C LOCAL VARIABLES 
C
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(2:5), ihel
      DATA (NHEL(IHEL),IHEL=2,5) /-1,+1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2) = wve(i,N)
            w(i,3) = wep(i,N)
            w(i,4) = wmu(i,N)
            w(i,5) = wvm(i,N)
            w(i,6) = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

c      moved to m2s_qqWWZ.F
c      call anomal_formfactor_4v(q)

      if (.not.lswitch) then
         CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1,W(1,2   ))        
         CALL IXXXXX(P(0,3   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
         CALL JIOXXX(W(1,3   ),W(1,2),GWF ,WMASS,WWIDTH,W(1,6))    
c         print*," ve ",(wve(i,N)/w(i,2),i=1,6)
c         print*," ep ",(wep(i,N)/w(i,3),i=1,6)
c         print*," mu ",(wmu(i,N)/w(i,4),i=1,6)
c         print*," vm ",(wvm(i,N)/w(i,5),i=1,6)
c         print*," wp ",( wp(i,N)/w(i,6),i=1,6)
      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),ZERO ,ZERO, MU,-1,W(1,1   ))

c      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,7   ))
      CALL jwmwpa_anomal3(W(1,6   ),W(1,1   ),W(1,7   ))

      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GWF ,AMP(1   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,6   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,9   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,10  ),GWF ,AMP(3   ))            
      if (NW.eq.0) then
         a(mu) = +AMP(   1)
     &        +AMP(   2)+AMP(   3) !non resonant
      else if (NW.eq.1) then
         a(mu) = +AMP(   1)
      endif
      enddo
      a(4) = dcmplx(q(0),q(3))
      a(5) = dcmplx(q(1),q(2))
c
      END
