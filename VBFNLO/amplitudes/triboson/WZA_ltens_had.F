c ------------------------------------------------------------

      subroutine WPTOWZA_had(P,N,h,wza,NW)

      IMPLICIT NONE

      DOUBLE PRECISION P(0:3,2:6)
      complex*16 wza(0:5)
      integer lsign(2:6,4),ll,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,6) / -1, -1, -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,6) / -1, -1, +1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,6) / -1, -1, -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,6) / -1, -1, +1, +1, -1/  !h=4

      call WPTOWZA1_had(P,N,lsign(2,h),wza(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE WPTOWZA1_had(P,N,lsign,wza,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : w+ -> ve e+ mu- mu+ a  
C  
C Crossing   1 is w+ ve~ -> e+ mu- mu+ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  46) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  62) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:6), Q(0:3)
      INTEGER N
      COMPLEX*16 wza(0:5)
      INTEGER lsign(2:6)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wmu(i,N)
            w(i,5)  = wmp(i,N)
            w(i,6)  = wa(i,N)
            w(i,7)  = wp(i,N)
            w(i,17) = ztau(i,N)
            w(i,15) = atau(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)+p(mu,6)
      enddo
c
!      if (.not.lswitch) then
!         CALL OXXXXX(P(0,2   ),ZERO , lsign(2),+1,W(1,2   )) !ve
!         CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   )) !e+
!         CALL OXXXXX(P(0,4   ),ZERO , lsign(4),+1,W(1,4   )) !mu-
!         CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5),-1,W(1,5   )) !mu+
!         CALL VXXXXX(P(0,6   ),ZERO , +1  ,+1,W(1,6   )) !A
!         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))
!         CALL JIOXXX(W(1,5   ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,17  ))
!         CALL JIOXXX(W(1,5   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,15  ))
!         print*," ve ",(wve(i,N)/w(i,2),i=1,6)
!         print*," ep ",(wep(i,N)/w(i,3),i=1,6)
!         print*," mu ",(wmu(i,N)/w(i,4),i=1,6)
!         print*," mp ",(wmp(i,N)/w(i,5),i=1,6)
!         print*," A  ",( wa(i,N)/w(i,6),i=1,6)
!      endif

      do mu = 0,3

      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))
      CALL FVOXXX(W(1,4   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL JIOXXX(W(1,5   ),W(1,8   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   )) 
      CALL wwa_anomal3(W(1,1   ),W(1,9   ),W(1,6   ),AMP(1   ))  
      CALL FVIXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL FVOXXX(W(1,2   ),W(1,11  ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL IOVXXX(W(1,3   ),W(1,12  ),W(1,6   ),GWP_ADL ,AMP(2   ))            ! W+
      CALL FVIXXX(W(1,10  ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,13  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(3   ))            ! Z
      CALL FVOXXX(W(1,8   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,6   ),GZ_AF ,AMP(4   ))            ! Z
      CALL wwa_anomal3(W(1,11  ),W(1,7   ),W(1,6   ),AMP(5   ))  
      CALL jwmwpa_anomal3(W(1,7   ),W(1,15  ),W(1,16  )) 
      CALL wwa_anomal3(W(1,1   ),W(1,16  ),W(1,6   ),AMP(6   ))  
      CALL jwmwpz_anomal3(W(1,7   ),W(1,17  ),W(1,18  )) 
      CALL wwa_anomal3(W(1,1   ),W(1,18  ),W(1,6   ),AMP(7   )) 
      CALL jwpawm_anomal3(W(1,15  ),W(1,1   ),W(1,19  )) 
      CALL FVOXXX(W(1,2   ),W(1,19  ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,3   ),W(1,20  ),W(1,6   ),GWP_ADL ,AMP(8   ))            ! W+
      CALL jwpzwm_anomal3(W(1,17  ),W(1,1   ),W(1,21  ))    
      CALL FVOXXX(W(1,2   ),W(1,21  ),GWF ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL IOVXXX(W(1,3   ),W(1,22  ),W(1,6   ),GWP_ADL ,AMP(9   ))            ! W+
      CALL jaww_anomal3(W(1,1   ),W(1,7   ),W(1,23  )) 
      CALL FVIXXX(W(1,5   ),W(1,23  ),GZ_AF ,ZERO    ,ZERO    ,W(1,24  ))    ! Z
      CALL IOVXXX(W(1,24  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(10  ))            ! Z
      CALL jzww_anomal3(W(1,1   ),W(1,7   ),W(1,25  ))  
      CALL FVIXXX(W(1,5   ),W(1,25  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,26  ))    ! Z
      CALL IOVXXX(W(1,26  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(11  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,23  ),GZ_AF ,ZERO    ,ZERO    ,W(1,27  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,27  ),W(1,6   ),GZ_AF ,AMP(12  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,25  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,28  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,28  ),W(1,6   ),GZ_AF ,AMP(13  ))            ! Z
      CALL wwaa_anomal4(W(1,1   ),W(1,15  ),W(1,7   ),W(1,6   ),AMP(14  )) 
      CALL wwza_anomal4(W(1,1   ),W(1,17  ),W(1,7   ),W(1,6   ),AMP(15  ))  
      CALL wwa_anomal3(W(1,19  ),W(1,7   ),W(1,6   ),AMP(16  ))
      CALL wwa_anomal3(W(1,21  ),W(1,7   ),W(1,6   ),AMP(17  )) 
      CALL FVOXXX(W(1,2   ),W(1,17  ),GWP_ZUN ,ZERO    ,ZERO    ,W(1,29  ))    ! W+
      CALL JIOXXX(W(1,3   ),W(1,29  ),GWF ,WMASS   ,WWIDTH  ,W(1,30  ))  
      CALL wwa_anomal3(W(1,1   ),W(1,30  ),W(1,6   ),AMP(18  )) 
      CALL FVOXXX(W(1,29  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL IOVXXX(W(1,3   ),W(1,31  ),W(1,6   ),GWP_ADL ,AMP(19  ))            ! W+
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,32  ),W(1,2   ),GWP_ZUN ,ZMASS   ,ZWIDTH  ,W(1,33  ))    ! W+
      CALL FVIXXX(W(1,5   ),W(1,33  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,34  ))    ! Z
      CALL IOVXXX(W(1,34  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(20  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,33  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,35  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,35  ),W(1,6   ),GZ_AF ,AMP(21  ))            ! Z
      CALL FVIXXX(W(1,3   ),W(1,15  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,36  ))    ! W+
      CALL JIOXXX(W(1,36  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,37  )) 
      CALL wwa_anomal3(W(1,1   ),W(1,37  ),W(1,6   ),AMP(22  ))  
      CALL FVIXXX(W(1,3   ),W(1,17  ),GWP_ZDL ,ZERO    ,ZERO    ,W(1,38  ))    ! W+
      CALL JIOXXX(W(1,38  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,39  ))  
      CALL wwa_anomal3(W(1,1   ),W(1,39  ),W(1,6   ),AMP(23  )) 
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL FVOXXX(W(1,40  ),W(1,15  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,41  ))    ! W+
      CALL IOVXXX(W(1,3   ),W(1,41  ),W(1,6   ),GWP_ADL ,AMP(24  ))            ! W+
      CALL FVOXXX(W(1,40  ),W(1,17  ),GWP_ZDL ,ZERO    ,ZERO    ,W(1,42  ))    ! W+
      CALL IOVXXX(W(1,3   ),W(1,42  ),W(1,6   ),GWP_ADL ,AMP(25  ))            ! W+
      CALL JIOXXX(W(1,3   ),W(1,40  ),GWP_ADL ,ZERO    ,AWIDTH  ,W(1,43  ))    ! W+
      CALL FVIXXX(W(1,5   ),W(1,43  ),GZ_AF ,ZERO    ,ZERO    ,W(1,44  ))    ! Z
      CALL IOVXXX(W(1,44  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(26  ))            ! Z
      CALL JIOXXX(W(1,3   ),W(1,40  ),GWP_ZDL ,ZMASS   ,ZWIDTH  ,W(1,45  ))    ! W+
      CALL FVIXXX(W(1,5   ),W(1,45  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,46  ))    ! Z
      CALL IOVXXX(W(1,46  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(27  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,43  ),GZ_AF ,ZERO    ,ZERO    ,W(1,47  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,47  ),W(1,6   ),GZ_AF ,AMP(28  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,45  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,48  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,48  ),W(1,6   ),GZ_AF ,AMP(29  ))            ! Z
      CALL IOVXXX(W(1,36  ),W(1,40  ),W(1,6   ),GWP_ADL ,AMP(30  ))            ! W+          
      CALL IOVXXX(W(1,38  ),W(1,40  ),W(1,6   ),GWP_ADL ,AMP(31  ))            ! W+

c due to anomalous couplings there are 2 extra graphs with a Higgs (WWH-, AAH-, AZH-coupling)
      CALL jhww_anomal3(W(1,1   ),W(1,7   ),W(1,49  ))
      CALL azh_anomal3(W(1,6   ),W(1,17  ),W(1,49  ),AMP(32  ))
      CALL aah_anomal3(W(1,6   ),W(1,15  ),W(1,49  ),AMP(33  ))

      wza(  mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)
     &             +AMP(  32)+AMP(  33) !new Higgs graphs


      if (procid .eq. WPhadZA) then
        ! new graphs for W+ decay
      CALL FVIXXX(W(1,3   ),W(1,11  ),GWF ,ZERO    ,ZERO    ,W(1,50  ))    
      CALL IOVXXX(W(1,50  ),W(1,2   ),W(1,6   ),GAU ,AMP(34  ))            
      CALL FVIXXX(W(1,3   ),W(1,19  ),GWF ,ZERO    ,ZERO    ,W(1,51  ))    
      CALL IOVXXX(W(1,51  ),W(1,2   ),W(1,6   ),GAU ,AMP(35  ))            
      CALL FVIXXX(W(1,3   ),W(1,21  ),GWF ,ZERO    ,ZERO    ,W(1,52  ))    
      CALL IOVXXX(W(1,52  ),W(1,2   ),W(1,6   ),GAU ,AMP(36  ))            
      CALL FVOXXX(W(1,2   ),W(1,15  ),GAU ,ZERO    ,ZERO    ,W(1,53  ))    
      CALL JIOXXX(W(1,3   ),W(1,53  ),GWF ,WMASS   ,WWIDTH  ,W(1,54  ))    
      CALL wwa_anomal3(W(1,1   ),W(1,54  ),W(1,6   ),AMP(37  ))           
      CALL FVIXXX(W(1,32  ),W(1,15  ),GAU ,ZERO    ,ZERO    ,W(1,55  ))    
      CALL IOVXXX(W(1,55  ),W(1,2   ),W(1,6   ),GAU ,AMP(38  ))            
      CALL FVIXXX(W(1,32  ),W(1,17  ),GZU ,ZERO    ,ZERO    ,W(1,56  ))    
      CALL IOVXXX(W(1,56  ),W(1,2   ),W(1,6   ),GAU ,AMP(39  ))            
      CALL FVOXXX(W(1,53  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,57  ))    
      CALL IOVXXX(W(1,3   ),W(1,57  ),W(1,6   ),GAD ,AMP(40  ))            
      CALL JIOXXX(W(1,32  ),W(1,2   ),GAU ,ZERO    ,AWIDTH  ,W(1,58  ))    
      CALL FVIXXX(W(1,5   ),W(1,58  ),GAL ,ZERO    ,ZERO    ,W(1,59  ))    
      CALL IOVXXX(W(1,59  ),W(1,4   ),W(1,6   ),GAL ,AMP(41  ))            
      CALL FVOXXX(W(1,4   ),W(1,58  ),GAL ,ZERO    ,ZERO    ,W(1,60  ))    
      CALL IOVXXX(W(1,5   ),W(1,60  ),W(1,6   ),GAL ,AMP(42  ))            
      CALL IOVXXX(W(1,32  ),W(1,53  ),W(1,6   ),GAU ,AMP(43  ))            
      CALL IOVXXX(W(1,32  ),W(1,29  ),W(1,6   ),GAU ,AMP(44  ))            
      CALL FVIXXX(W(1,36  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,61  ))    
      CALL IOVXXX(W(1,61  ),W(1,2   ),W(1,6   ),GAU ,AMP(45  ))            
      CALL FVIXXX(W(1,38  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,62  ))    
      CALL IOVXXX(W(1,62  ),W(1,2   ),W(1,6   ),GAU ,AMP(46  ))            
      wza(  mu) = wza(mu) +AMP(  34)+AMP(  35)+AMP(  36)+AMP(  37)+AMP(  38)
     &             +AMP(  39)+AMP(  40)+AMP(  41)+AMP(  42)+AMP(  43)
     &             +AMP(  44)+AMP(  45)+AMP(  46)
      endif

      if (procid.eq.WPZhadA .and. Ztodd) then
        ! new graph for Z decay
      CALL FVIXXX(W(1,10  ),W(1,6   ),GAU ,ZERO    ,ZERO    ,W(1,50  ))    
      CALL IOVXXX(W(1,50  ),W(1,4  ),W(1,7   ),GWF ,AMP(34  ))            
      wza(  mu) = wza(mu) +AMP(  34)
      endif

      if (procid.eq.WPZhadA .and. Ztouu) then
        ! replace graphs 1-5
      CALL FVIXXX(W(1,5   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL JIOXXX(W(1,8   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   )) 
      CALL wwa_anomal3(W(1,1   ),W(1,9   ),W(1,6   ),AMP(1   ))  
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,5   ),W(1,10  ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL FVOXXX(W(1,2   ),W(1,11  ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL IOVXXX(W(1,3   ),W(1,12  ),W(1,6   ),GWP_ADL ,AMP(2   ))            ! W+
      CALL FVOXXX(W(1,10  ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,13  ),W(1,6   ),GZ_AF ,AMP(3   ))            ! Z
      CALL FVIXXX(W(1,8   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,14  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(4   ))            ! Z
      CALL wwa_anomal3(W(1,11  ),W(1,7   ),W(1,6   ),AMP(5   ))  
        ! new graph for Z decay
      CALL FVOXXX(W(1,10  ),W(1,6   ),GAD ,ZERO    ,ZERO    ,W(1,50  ))    
      CALL IOVXXX(W(1,5   ),W(1,50 ),W(1,7   ),GWF ,AMP(34  ))            
      wza(  mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)
     &             +AMP(  32)+AMP(  33) !new Higgs graphs
     &             +AMP(  34)
      endif

      enddo
      wza(4) = dcmplx(q(0),q(3))
      wza(5) = dcmplx(q(1),q(2))
c
      END

c ------------------------------------------------------------

      subroutine WMTOWZA_had(P,N,h,wza,NW)

      IMPLICIT NONE

      DOUBLE PRECISION P(0:3,2:6)
      complex*16 wza(0:5)
      integer lsign(2:6,4),ll,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,6) / -1, -1, -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,6) / -1, -1, +1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,6) / -1, -1, -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,6) / -1, -1, +1, +1, -1/  !h=4

      call WMTOWZA1_had(P,N,lsign(2,h),wza(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE WMTOWZA1_had(P,N,lsign,wza,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : w- -> e- ve~ mu- mu+ a  
C  
C Crossing   1 is w- e+ -> ve~ mu- mu+ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  46) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  62) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:6), Q(0:3)
      INTEGER N
      COMPLEX*16 wza(0:5)
      INTEGER lsign(2:6)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wmu(i,N)
            w(i,5)  = wmp(i,N)
            w(i,6)  = wa(i,N)
            w(i,7)  = wp(i,N)
            w(i,10) = ztau(i,N)
            w(i,8)  = atau(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)+p(mu,6)
      enddo
c
!      if (.not.lswitch) then
!         CALL OXXXXX(P(0,2   ),ZERO , lsign(2),+1,W(1,2   )) !e-
!         CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   )) !ve~
!         CALL OXXXXX(P(0,4   ),ZERO , lsign(4),+1,W(1,4   )) !mu-
!         CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5),-1,W(1,5   )) !mu+
!         CALL VXXXXX(P(0,6   ),ZERO , +1  ,+1,W(1,6   )) !A
!         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))
!         CALL JIOXXX(W(1,5   ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,10  ))
!         CALL JIOXXX(W(1,5   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,8   ))
!         print*," ve ",(wve(i,N)/w(i,2),i=1,6)
!         print*," ep ",(wep(i,N)/w(i,3),i=1,6)
!         print*," mu ",(wmu(i,N)/w(i,4),i=1,6)
!         print*," mp ",(wmp(i,N)/w(i,5),i=1,6)
!         print*," A  ",( wa(i,N)/w(i,6),i=1,6)
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))
      CALL jwpawm_anomal3(W(1,8   ),W(1,7   ),W(1,9   ))
      CALL wwa_anomal3(W(1,9   ),W(1,1   ),W(1,6   ),AMP(1   ))  
      CALL jwpzwm_anomal3(W(1,10  ),W(1,7   ),W(1,11  ))
      CALL wwa_anomal3(W(1,11  ),W(1,1   ),W(1,6   ),AMP(2   ))  
      CALL jwmwpa_anomal3(W(1,1   ),W(1,8   ),W(1,12  ))
      CALL FVIXXX(W(1,3   ),W(1,12  ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,13  ),W(1,2   ),W(1,6   ),GWM_ADL ,AMP(3   ))            ! W-
      CALL jwmwpz_anomal3(W(1,1   ),W(1,10  ),W(1,14  ))
      CALL FVIXXX(W(1,3   ),W(1,14  ),GWF ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL IOVXXX(W(1,15  ),W(1,2   ),W(1,6   ),GWM_ADL ,AMP(4   ))            ! W-
      CALL jaww_anomal3(W(1,7   ),W(1,1   ),W(1,16  ))
      CALL FVIXXX(W(1,5   ),W(1,16  ),GZ_AF ,ZERO    ,ZERO    ,W(1,17  ))    ! Z
      CALL IOVXXX(W(1,17  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(5   ))            ! Z
      CALL jzww_anomal3(W(1,7   ),W(1,1   ),W(1,18  ))
      CALL FVIXXX(W(1,5   ),W(1,18  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,19  ))    ! Z
      CALL IOVXXX(W(1,19  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(6   ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,16  ),GZ_AF ,ZERO    ,ZERO    ,W(1,20  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,20  ),W(1,6   ),GZ_AF ,AMP(7   ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,18  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,21  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,6   ),GZ_AF ,AMP(8   ))            ! Z
      CALL wwaa_anomal4(W(1,7   ),W(1,8   ),W(1,1   ),W(1,6   ),AMP(9   ))
      CALL wwza_anomal4(W(1,7   ),W(1,10  ),W(1,1   ),W(1,6   ),AMP(10  ))
      CALL wwa_anomal3(W(1,7   ),W(1,12  ),W(1,6   ),AMP(11  )) 
      CALL wwa_anomal3(W(1,7   ),W(1,14  ),W(1,6   ),AMP(12  )) 
      CALL FVIXXX(W(1,5   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL JIOXXX(W(1,22  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,23  ))  
      CALL wwa_anomal3(W(1,23  ),W(1,1   ),W(1,6   ),AMP(13  ))  
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL JIOXXX(W(1,5   ),W(1,24  ),GWF ,WMASS   ,WWIDTH  ,W(1,25  ))    
      CALL FVIXXX(W(1,3   ),W(1,25  ),GWF ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,26  ),W(1,2   ),W(1,6   ),GWM_ADL ,AMP(14  ))            ! W-
      CALL FVIXXX(W(1,22  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,27  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(15  ))            ! Z
      CALL FVOXXX(W(1,24  ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,5   ),W(1,28  ),W(1,6   ),GZ_AF ,AMP(16  ))            ! Z
      CALL wwa_anomal3(W(1,7   ),W(1,25  ),W(1,6   ),AMP(17  )) 
      CALL FVOXXX(W(1,2   ),W(1,8   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,29  ))    ! W-
      CALL JIOXXX(W(1,3   ),W(1,29  ),GWF ,WMASS   ,WWIDTH  ,W(1,30  )) 
      CALL wwa_anomal3(W(1,30  ),W(1,1   ),W(1,6   ),AMP(18  )) 
      CALL FVOXXX(W(1,2   ),W(1,10  ),GWM_ZDL ,ZERO    ,ZERO    ,W(1,31  ))    ! W-
      CALL JIOXXX(W(1,3   ),W(1,31  ),GWF ,WMASS   ,WWIDTH  ,W(1,32  )) 
      CALL wwa_anomal3(W(1,32  ),W(1,1   ),W(1,6   ),AMP(19  ))
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,33  ))    
      CALL FVIXXX(W(1,33  ),W(1,8   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,34  ))    ! W-
      CALL IOVXXX(W(1,34  ),W(1,2   ),W(1,6   ),GWM_ADL ,AMP(20  ))            ! W-
      CALL FVIXXX(W(1,33  ),W(1,10  ),GWM_ZDL ,ZERO    ,ZERO    ,W(1,35  ))    ! W-
      CALL IOVXXX(W(1,35  ),W(1,2   ),W(1,6   ),GWM_ADL ,AMP(21  ))            ! W-
      CALL JIOXXX(W(1,33  ),W(1,2   ),GWM_ADL ,ZERO    ,AWIDTH  ,W(1,36  ))    ! W-
      CALL FVIXXX(W(1,5   ),W(1,36  ),GZ_AF ,ZERO    ,ZERO    ,W(1,37  ))    ! Z
      CALL IOVXXX(W(1,37  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(22  ))            ! Z
      CALL JIOXXX(W(1,33  ),W(1,2   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,38  ))    ! W-
      CALL FVIXXX(W(1,5   ),W(1,38  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,39  ))    ! Z
      CALL IOVXXX(W(1,39  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(23  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,36  ),GZ_AF ,ZERO    ,ZERO    ,W(1,40  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,40  ),W(1,6   ),GZ_AF ,AMP(24  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,38  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,41  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,41  ),W(1,6   ),GZ_AF ,AMP(25  ))            ! Z
      CALL IOVXXX(W(1,33  ),W(1,29  ),W(1,6   ),GWM_ADL ,AMP(26  ))            ! W-
      CALL IOVXXX(W(1,33  ),W(1,31  ),W(1,6   ),GWM_ADL ,AMP(27  ))            ! W-
      CALL FVIXXX(W(1,3   ),W(1,10  ),GWM_ZUN ,ZERO    ,ZERO    ,W(1,42  ))    ! W-
      CALL JIOXXX(W(1,42  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,43  ))  
      CALL wwa_anomal3(W(1,43  ),W(1,1   ),W(1,6   ),AMP(28  )) 
      CALL FVIXXX(W(1,42  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,44  ),W(1,2   ),W(1,6   ),GWM_ADL ,AMP(29  ))            ! W-
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,45  ))    
      CALL JIOXXX(W(1,3   ),W(1,45  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,46  ))    ! W-
      CALL FVIXXX(W(1,5   ),W(1,46  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,47  ))    ! Z
      CALL IOVXXX(W(1,47  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(30  ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,46  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,48  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,48  ),W(1,6   ),GZ_AF ,AMP(31  ))            ! Z

c due to anomalous couplings there are 2 extra graphs with a Higgs (WWH-, AAH-, AZH-coupling)
      CALL jhww_anomal3(W(1,7   ),W(1,1   ),W(1,49  ))
      CALL azh_anomal3(W(1,6   ),W(1,10  ),W(1,49  ),AMP(32  ))
      CALL aah_anomal3(W(1,6   ),W(1,8   ),W(1,49  ),AMP(33  ))

      wza(  mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)
     &             +AMP(  32)+AMP(  33) !new Higgs graphs


      if (procid .eq. WMhadZA) then
        ! new graphs for W- decay
      CALL FVOXXX(W(1,2   ),W(1,12  ),GWF ,ZERO    ,ZERO    ,W(1,50  ))    
      CALL IOVXXX(W(1,3   ),W(1,50  ),W(1,6   ),GAU ,AMP(34  ))            
      CALL FVOXXX(W(1,2   ),W(1,14  ),GWF ,ZERO    ,ZERO    ,W(1,51  ))    
      CALL IOVXXX(W(1,3   ),W(1,51  ),W(1,6   ),GAU ,AMP(35  ))            
      CALL FVOXXX(W(1,2   ),W(1,25  ),GWF ,ZERO    ,ZERO    ,W(1,52  ))    
      CALL IOVXXX(W(1,3   ),W(1,52  ),W(1,6   ),GAU ,AMP(36  ))            
      CALL FVOXXX(W(1,29  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,53  ))    
      CALL IOVXXX(W(1,3   ),W(1,53  ),W(1,6   ),GAU ,AMP(37  ))            
      CALL FVOXXX(W(1,31  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,54  ))    
      CALL IOVXXX(W(1,3   ),W(1,54  ),W(1,6   ),GAU ,AMP(38  ))            
      CALL FVIXXX(W(1,3   ),W(1,8   ),GAU ,ZERO    ,ZERO    ,W(1,55  ))    
      CALL JIOXXX(W(1,55  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,56  ))    
      CALL wwa_anomal3(W(1,56  ),W(1,1   ),W(1,6   ),AMP(39  ))           
      CALL FVIXXX(W(1,55  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,57  ))    
      CALL IOVXXX(W(1,57  ),W(1,2   ),W(1,6   ),GAD ,AMP(40  ))            
      CALL FVOXXX(W(1,45  ),W(1,8   ),GAU ,ZERO    ,ZERO    ,W(1,58  ))    
      CALL IOVXXX(W(1,3   ),W(1,58  ),W(1,6   ),GAU ,AMP(41  ))            
      CALL FVOXXX(W(1,45  ),W(1,10  ),GZU ,ZERO    ,ZERO    ,W(1,59  ))    
      CALL IOVXXX(W(1,3   ),W(1,59  ),W(1,6   ),GAU ,AMP(42  ))            
      CALL JIOXXX(W(1,3   ),W(1,45  ),GAU ,ZERO    ,AWIDTH  ,W(1,60  ))    
      CALL FVIXXX(W(1,5   ),W(1,60  ),GAL ,ZERO    ,ZERO    ,W(1,61  ))    
      CALL IOVXXX(W(1,61  ),W(1,4   ),W(1,6   ),GAL ,AMP(43  ))            
      CALL FVOXXX(W(1,4   ),W(1,60  ),GAL ,ZERO    ,ZERO    ,W(1,62  ))    
      CALL IOVXXX(W(1,5   ),W(1,62  ),W(1,6   ),GAL ,AMP(44  ))            
      CALL IOVXXX(W(1,55  ),W(1,45  ),W(1,6   ),GAU ,AMP(45  ))            
      CALL IOVXXX(W(1,42  ),W(1,45  ),W(1,6   ),GAU ,AMP(46  ))            
      wza(  mu) = wza(mu) +AMP(  34)+AMP(  35)+AMP(  36)+AMP(  37)+AMP(  38)
     &             +AMP(  39)+AMP(  40)+AMP(  41)+AMP(  42)+AMP(  43)
     &             +AMP(  44)+AMP(  45)+AMP(  46)
      endif

      if (procid.eq.WMZhadA .and. Ztodd) then
        ! new graph for Z decay
        CALL FVOXXX(W(1,24  ),W(1,6   ),GAU ,ZERO    ,ZERO    ,W(1,50  ))    
        CALL IOVXXX(W(1,5   ),W(1,50  ),W(1,7   ),GWF ,AMP(34  ))
        wza(  mu) = wza(mu) +AMP(  34)
      endif

      if (procid.eq.WMZhadA .and. Ztouu) then
        ! replace graphs 13-17
      CALL FVOXXX(W(1,4   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL JIOXXX(W(1,5   ),W(1,22  ),GWF ,WMASS   ,WWIDTH  ,W(1,23  ))  
      CALL wwa_anomal3(W(1,23  ),W(1,1   ),W(1,6   ),AMP(13  ))  
      CALL FVIXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL JIOXXX(W(1,24  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,25  ))    
      CALL FVIXXX(W(1,3   ),W(1,25  ),GWF ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,26  ),W(1,2   ),W(1,6   ),GWM_ADL ,AMP(14  ))            ! W-
      CALL FVOXXX(W(1,22  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,5   ),W(1,27  ),W(1,6   ),GZ_AF ,AMP(15  ))            ! Z
      CALL FVIXXX(W(1,24  ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,28  ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(16  ))            ! Z
      CALL wwa_anomal3(W(1,7   ),W(1,25  ),W(1,6   ),AMP(17  )) 
        ! new graph for Z decay
      CALL FVIXXX(W(1,24  ),W(1,6   ),GAD ,ZERO    ,ZERO    ,W(1,50  ))    
      CALL IOVXXX(W(1,50  ),W(1,4   ),W(1,7   ),GWF ,AMP(34  ))
      wza(  mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)
     &             +AMP(  32)+AMP(  33) !new Higgs graphs
     &             +AMP(  34)
      endif

      enddo
      wza(4) = dcmplx(q(0),q(3))
      wza(5) = dcmplx(q(1),q(2))
c
      END


c ------------------------------------------------------------

      subroutine tribosWPTOWA_had(v,N,h,wpatens,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:4)
      complex*16 wpatens(0:5)
      integer lsign(2:4,4),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,4) / -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,4) / -1, -1, +1/  !h=2
      data (lsign(ll,3),ll=2,4) / -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,4) / -1, -1, -1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,5)
      enddo

      call tribosWPTOWA1_had(P,N,lsign(2,h),wpatens(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosWPTOWA1_had(P,N,lsign,wpatens,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : w+ -> ve e+ a  
C  
C Crossing   1 is w+ ve~ -> e+ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  3) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  7) 
      DOUBLE PRECISION ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:4), Q(0:3)
      INTEGER N
      COMPLEX*16 wpatens(0:5)
      INTEGER lsign(2:4)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wa(i,N)
            w(i,5)  = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)
      enddo
c
!      if (.not.lswitch) then
!         CALL OXXXXX(P(0,2   ),ZERO , lsign(2),+1,W(1,2   )) !ve
!         CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   )) !e+
!         CALL VXXXXX(P(0,4   ),ZERO , lsign(4),+1,W(1,4   )) !A
!         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,5   ))
!         print*," ve ",(wve(i,N)/w(i,2),i=1,6)
!         print*," ep ",(wep(i,N)/w(i,3),i=1,6)
!         print*," A  ",( wa(i,N)/w(i,4),i=1,6)
!         print*," wp ",( wp(i,N)/w(i,5),i=1,6)
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))
      CALL wwa_anomal3(W(1,1   ),W(1,5   ),W(1,4   ),AMP(1   ))
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,6   ))
      CALL IOVXXX(W(1,3   ),W(1,6   ),W(1,4   ),GWP_ADL ,AMP(2   ))            ! W+
      wpatens(mu) = AMP(   1)+AMP(   2)


      if (procid .eq. WPhadZA) then
        ! new graphs for W+ decay
        CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
        CALL IOVXXX(W(1,7   ),W(1,2   ),W(1,4   ),GAU ,AMP(3   ))
        wpatens(mu) = wpatens(mu) + AMP(   3)
      endif

      enddo

      wpatens(4) = dcmplx(q(0),q(3))
      wpatens(5) = dcmplx(q(1),q(2))
c
      END

c ------------------------------------------------------------

      subroutine tribosWMTOWA_had(v,N,h,wma,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:4)
      complex*16 wma(0:5)
      integer lsign(2:4,4),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,4) / -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,4) / -1, -1, +1/  !h=2
      data (lsign(ll,3),ll=2,4) / -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,4) / -1, -1, -1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,5)
      enddo

      call tribosWMTOWA1_had(P,N,lsign(2,h),wma(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosWMTOWA1_had(P,N,lsign,wmatens,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : w- -> e- ve~ a  
C  
C Crossing   1 is w- e+ -> ve~ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  3) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  7) 
      DOUBLE PRECISION ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:4), Q(0:3)
      INTEGER N
      COMPLEX*16 wmatens(0:5)
      INTEGER lsign(2:4)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wa(i,N)
            w(i,5)  = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)
      enddo
c
!      if (.not.lswitch) then
!         CALL OXXXXX(P(0,2   ),ZERO , lsign(2),+1,W(1,2   )) !ve
!         CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   )) !e+
!         CALL VXXXXX(P(0,4   ),ZERO , lsign(4),+1,W(1,4   )) !A
!         CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,5   ))
!         print*," ve ",(wve(i,N)/w(i,2),i=1,6)
!         print*," ep ",(wep(i,N)/w(i,3),i=1,6)
!         print*," A  ",( wa(i,N)/w(i,4),i=1,6)
!         print*," wp ",( wp(i,N)/w(i,5),i=1,6)
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))
      CALL wwa_anomal3(W(1,5   ),W(1,1   ),W(1,4   ),AMP(1   ))
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,2   ),W(1,4   ),GWM_ADL ,AMP(2   ))            ! W-

      wmatens(mu) = AMP(   1)+AMP(   2)

      if (procid .eq. WMhadZA) then
        ! new graphs for W- decay
        CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
        CALL IOVXXX(W(1,3   ),W(1,7   ),W(1,4   ),GWM_AUN ,AMP(3   ))            ! W-
        wmatens(mu) = wmatens(mu)+AMP(   3)
      endif

      enddo

      wmatens(4) = dcmplx(q(0),q(3))
      wmatens(5) = dcmplx(q(1),q(2))
c
      END


c
c in this file leptonic tensors needed for qq -> WZA, WZA -> 4lA 
c are computed for specific helicities (h)
c
c ------------------------------------------------------------
c ------------------------------------------------------------

      SUBROUTINE tribosWPTOWZ_had(v,N,h,wpz,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:5)
      
      complex*16 wpz(0:5)
      integer lsign(2:5,5),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,5) / -1, -1, -1, -1/  !h=1
      data (lsign(ll,2),ll=2,5) / -1, -1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,5) / -1, -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,5) / -1, -1, +1, +1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
      enddo

      call tribosWPTOWZ1_had(P,N,lsign(2,h),wpz,NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosWPTOWZ1_had(P,N,lsign,wpztens,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ ->  ve e+ mu- mu+   
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   7) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  15) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:5), Q(0:3)
      INTEGER N
      COMPLEX*16 wpztens(0:5)
      INTEGER lsign(2:5)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"

  
C GLOBAL VARIABLES
  
#include "VBFNLO/utilities/coupl.inc"   

      logical lswitch
      parameter (lswitch=.true.)
                       
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wmu(i,N)
            w(i,5)  = wmp(i,N)
            w(i,6)  = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

!      if (.not.lswitch) then     
!         CALL OXXXXX(P(0,2   ),ZERO ,  lsign(2),+1,W(1,2   )) ! ve       
!         CALL IXXXXX(P(0,3   ),ZERO , -lsign(3),-1,W(1,3   )) ! e+       
!         CALL OXXXXX(P(0,4   ),ZERO ,  lsign(4),+1,W(1,4   )) ! mu-      
!         CALL IXXXXX(P(0,5   ),ZERO , -lsign(5),-1,W(1,5   )) ! mu+       
!         CALL JIOXXX(W(1,3),W(1,2),GWF,WMASS,WWIDTH,W(1,6  )) ! wp
!         print*," ve  ",(wve(i,N)/w(i,2),i=1,6)
!         print*," e+  ",(wep(i,N)/w(i,3),i=1,6)
!         print*," mu- ",(wmu(i,N)/w(i,4),i=1,6)
!         print*," mu+ ",(wmp(i,N)/w(i,5),i=1,6)
!         print*," wp  ",(wp(i,N)/w(i,6),i=1,6)
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GWF ,AMP(1   ))
      CALL jaww_anomal3(W(1,1   ),W(1,6   ),W(1,8  ))
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GZ_AF ,AMP(2   ))              ! Z
      CALL jzww_anomal3(W(1,1   ),W(1,6   ),W(1,9  ))
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,9   ),GZ_ZF ,AMP(3   ))              ! Z
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL JIOXXX(W(1,11  ),W(1,2   ),GWP_ZUN ,ZMASS   ,ZWIDTH  ,W(1,12  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GZ_ZF ,AMP(5   ))              ! Z
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,14  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,14  ),GZ_AF ,AMP(6   ))              ! Z
      CALL JIOXXX(W(1,3   ),W(1,13  ),GWP_ZDL ,ZMASS   ,ZWIDTH  ,W(1,15  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,15  ),GZ_ZF ,AMP(7   ))              ! Z

      wpztens(mu) = +AMP(   1)+AMP(   5)+AMP(   6)+AMP(   7) !non-resonant diagrams
     &          +AMP(   2)+AMP(   3)


      if (procid .eq. WPhadZA) then
        ! new graphs for W+ decay
      CALL JIOXXX(W(1,11  ),W(1,2   ),GWP_AUN ,ZERO   ,ZERO  ,W(1,10  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,10  ),GAL ,AMP(4   ))            
      wpztens(mu) = wpztens(mu) + AMP(   4)
      endif

      if (procid.eq.WPZhadA .and. Ztouu) then
        ! replace graph 1
      CALL FVIXXX(W(1,5   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,7   ),W(1,4   ),W(1,1   ),GWF ,AMP(1   ))
      wpztens(mu) = +AMP(   1)+AMP(   5)+AMP(   6)+AMP(   7) !non-resonant diagrams
     &          +AMP(   2)+AMP(   3)
      endif

      enddo
      wpztens(4) = dcmplx(q(0),q(3))
      wpztens(5) = dcmplx(q(1),q(2))
c
      return
      END

c ------------------------------------------------------------

      SUBROUTINE tribosWMTOWZ_had(v,N,h,wmz,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:5)
      
      complex*16 wmz(0:5)
      integer lsign(2:5,5),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,5) / -1, -1, -1, -1/  !h=1
      data (lsign(ll,2),ll=2,5) / -1, -1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,5) / -1, -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,5) / -1, -1, +1, +1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
      enddo

      call tribosWMTOWZ1_had(P,N,lsign(2,h),wmz,NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosWMTOWZ1_had(P,N,lsign,wmztens,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- -> e- ve~ mu- mu+   
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   7) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  15) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:5), Q(0:3)
      INTEGER N
      COMPLEX*16 wmztens(0:5)
      INTEGER lsign(2:5)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"

  
C GLOBAL VARIABLES
  
#include "VBFNLO/utilities/coupl.inc"   

      logical lswitch
      parameter (lswitch=.true.)
                       
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wmu(i,N)
            w(i,5)  = wmp(i,N)
            w(i,6)  = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

!      if (.not.lswitch) then     
!         CALL OXXXXX(P(0,2   ),ZERO ,  lsign(2),+1,W(1,2   )) ! e-       
!         CALL IXXXXX(P(0,3   ),ZERO , -lsign(3),-1,W(1,3   )) ! ve~       
!         CALL OXXXXX(P(0,4   ),ZERO ,  lsign(4),+1,W(1,4   )) ! mu-      
!         CALL IXXXXX(P(0,5   ),ZERO , -lsign(5),-1,W(1,5   )) ! mu+       
!         CALL JIOXXX(W(1,3),W(1,2),GWF,WMASS,WWIDTH,W(1,6  )) ! wm
!         print*," ve  ",(wve(i,N)/w(i,2),i=1,6)
!         print*," e+  ",(wep(i,N)/w(i,3),i=1,6)
!         print*," mu- ",(wmu(i,N)/w(i,4),i=1,6)
!         print*," mu+ ",(wmp(i,N)/w(i,5),i=1,6)
!         print*," wp  ",(wp(i,N)/w(i,6),i=1,6)
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))
      CALL jaww_anomal3(W(1,6   ),W(1,1   ),W(1,7   ))
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GZ_AF ,AMP(1   ))              ! Z
      CALL jzww_anomal3(W(1,6   ),W(1,1   ),W(1,8   ))
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GZ_ZF ,AMP(2   ))              ! Z
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))        
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))
      CALL JIOXXX(W(1,10  ),W(1,2   ),GWM_ADL ,ZERO    ,AWIDTH  ,W(1,11  ))      ! W-
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GZ_AF ,AMP(4   ))              ! Z
      CALL JIOXXX(W(1,10  ),W(1,2   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,12  ))      ! W-
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GZ_ZF ,AMP(5   ))              ! Z
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))
      CALL JIOXXX(W(1,3   ),W(1,13  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,14  ))      ! W-
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,14  ),GZ_ZF ,AMP(6   ))              ! Z

      wmztens(mu) = +AMP(   3)+AMP(   4)+AMP(   5)+AMP(   6) !non-resonant diagrams
     &          +AMP(   1)+AMP(   2)


      if (procid .eq. WMhadZA) then
        ! new graphs for W- decay
        CALL JIOXXX(W(1,3   ),W(1,13  ),GWM_AUN ,ZERO   ,ZERO  ,W(1,15  ))      ! W-
        CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,15  ),GZ_AF ,AMP(7   ))              ! Z
      wmztens(mu) = wmztens(mu)+AMP(   7)
      endif

      if (procid.eq.WMZhadA .and. Ztouu) then
        ! replace graph 3
        CALL FVIXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))
        CALL IOVXXX(W(1,9   ),W(1,4   ),W(1,6   ),GWF ,AMP(3   ))        
        wmztens(mu) = +AMP(   3)+AMP(   4)+AMP(   5)+AMP(   6) !non-resonant diagrams
     &          +AMP(   1)+AMP(   2)
      endif

      enddo

      wmztens(4) = dcmplx(q(0),q(3))
      wmztens(5) = dcmplx(q(1),q(2))
c
      return
      END


      subroutine tribosATOZA_had(v,N,h,zatens,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:4)
      complex*16 zatens(0:5)
      integer lsign(2:4,4),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,4) / -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,4) / +1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,4) / -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,4) / +1, +1, -1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,3)
         P(mu,3) = v(mu,4)
         P(mu,4) = v(mu,5)
      enddo

      call tribosATOZA1_had(P,N,lsign(2,h),zatens(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosATOZA1_had(P,N,lsign,zatens,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : a -> mu- mu+ a  
C  
C Crossing   1 is a mu+ -> mu+ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  2) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  6) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:4), Q(0:3)
      INTEGER N
      COMPLEX*16 zatens(0:5)
      INTEGER lsign(2:4)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wmu(i,N)
            w(i,3)  = wmp(i,N)
            w(i,4)  = wa(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)
      enddo
c
!      if (.not.lswitch) then
!         CALL OXXXXX(P(0,2   ),ZERO , lsign(2),+1,W(1,2   )) !mu-
!         CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   )) !mu+
!         CALL VXXXXX(P(0,4   ),ZERO , lsign(4),+1,W(1,4   )) !A
!         print*," ve ",(wmu(i,N)/w(i,2),i=1,6)
!         print*," ep ",(wmp(i,N)/w(i,3),i=1,6)
!         print*," A  ",( wa(i,N)/w(i,4),i=1,6)
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),ZERO ,ZERO, MU,-1,W(1,1   ))
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,5   ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,2   ),W(1,4   ),GZ_AF ,AMP(1   ))            ! Z
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,6   ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,6   ),W(1,4   ),GZ_AF ,AMP(2   ))            ! Z
      zatens(mu) = AMP(   1)+AMP(   2)

      enddo

      zatens(4) = dcmplx(q(0),q(3))
      zatens(5) = dcmplx(q(1),q(2))
c
      END

c ------------------------------------------------------------

      subroutine tribosZTOZA_had(v,N,h,zatens,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:4)
      complex*16 zatens(0:5)
      integer lsign(2:4,4),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,4) / -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,4) / +1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,4) / -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,4) / +1, +1, -1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,3)
         P(mu,3) = v(mu,4)
         P(mu,4) = v(mu,5)
      enddo

      call tribosZTOZA1_had(P,N,lsign(2,h),zatens(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosZTOZA1_had(P,N,lsign,zatens,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : z -> mu- mu+ a  
C  
C Crossing   1 is z mu+ -> mu+ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  2) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  6) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:4), Q(0:3)
      INTEGER N
      COMPLEX*16 zatens(0:5)
      INTEGER lsign(2:4)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wmu(i,N)
            w(i,3)  = wmp(i,N)
            w(i,4)  = wa(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)
      enddo
c
!      if (.not.lswitch) then
!         CALL OXXXXX(P(0,2   ),ZERO , lsign(2),+1,W(1,2   )) !mu-
!         CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   )) !mu+
!         CALL VXXXXX(P(0,4   ),ZERO , lsign(4),+1,W(1,4   )) !A
!         print*," ve ",(wmu(i,N)/w(i,2),i=1,6)
!         print*," ep ",(wmp(i,N)/w(i,3),i=1,6)
!         print*," A  ",( wa(i,N)/w(i,4),i=1,6)
!      endif
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),ZMASS ,ZWIDTH, MU,-1,W(1,1   ))
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,5   ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,2   ),W(1,4   ),GZ_AF ,AMP(1   ))            ! Z
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,6   ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,6   ),W(1,4   ),GZ_AF ,AMP(2   ))            ! Z
      zatens(mu) = AMP(   1)+AMP(   2)

      enddo

      zatens(4) = dcmplx(q(0),q(3))
      zatens(5) = dcmplx(q(1),q(2))
c
      END

