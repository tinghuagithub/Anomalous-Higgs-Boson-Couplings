c -----------------------------------------------------------------

      subroutine ZAA_ATOZAA(v,N,h,zaa,nA)

      IMPLICIT NONE

      DOUBLE PRECISION P(0:3,2:5), v(0:3,4)
      complex*16 zaa(0:5)
      integer lsign(2:5,8),ll,mu,h,N
      integer nA 

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,5) / -1, +1, +1, +1/  !h=1
      data (lsign(ll,2),ll=2,5) / -1, +1, -1, +1/  !h=2
      data (lsign(ll,3),ll=2,5) / -1, +1, +1, -1/  !h=3
      data (lsign(ll,4),ll=2,5) / -1, +1, -1, -1/  !h=4
      data (lsign(ll,5),ll=2,5) / +1, -1, +1, +1/  !h=5
      data (lsign(ll,6),ll=2,5) / +1, -1, -1, +1/  !h=6
      data (lsign(ll,7),ll=2,5) / +1, -1, +1, -1/  !h=7
      data (lsign(ll,8),ll=2,5) / +1, -1, -1, -1/  !h=8

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
      enddo

      call ZAA_ATOZAA1(P,N,lsign(2,h),zaa,nA)

      ! helicity combi nr.h is selected

      end
c ------------------------------------------------------------
       
      subroutine ZAA_ATOZAA1(P,N,lsign,zaa,nA)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a -> e- e+ a a  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   6) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  13) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5), Q(0:3)
      INTEGER N
      complex*16 zaa(0:5)
      integer lsign(2:5)
      integer nA

C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and Z/A polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)

C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton and Z states from common block
         do i=1,6
            w(i,2)  = zem(i,N)
            w(i,3)  = zep(i,N)
            w(i,4)  = atau1(i,N)
            w(i,5)  = atau2(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo
      do mu=0,3
      CALL TRIBOSVCARTX(Q(0),ZERO ,ZERO, MU,-1,W(1,1   ))
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL FVIXXX(W(1,6   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,7   ),W(1,2   ),W(1,5   ),GAL ,AMP(1   ))            
      CALL FVOXXX(W(1,2   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL FVIXXX(W(1,3   ),W(1,5   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,8   ),W(1,1   ),GAL ,AMP(2   ))            
      CALL IOVXXX(W(1,6   ),W(1,8   ),W(1,5   ),GAL ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL FVOXXX(W(1,2   ),W(1,5   ),GAL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,10  ),W(1,11  ),W(1,1   ),GAL ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL FVOXXX(W(1,12  ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,5   ),GAL ,AMP(5   ))            
      CALL IOVXXX(W(1,10  ),W(1,12  ),W(1,5   ),GAL ,AMP(6   ))            
      zaa(mu) = +AMP(1)+AMP(2)+AMP(3)+AMP(4)+AMP(5)+AMP(6)
      enddo
      zaa(4)=dcmplx(q(0),q(3))
      zaa(5)=dcmplx(q(1),q(2))
      return
      END

c -------------------------------------------------------------------

      subroutine ZAA_ZTOZAA(v,N,h,zaa,nA)

      IMPLICIT NONE

      DOUBLE PRECISION P(0:3,2:5), v(0:3,4)
      complex*16 zaa(0:5)
      integer lsign(2:5,8),ll,mu,h,N
      integer nA 

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,5) / -1, +1, +1, +1/  !h=1
      data (lsign(ll,2),ll=2,5) / -1, +1, -1, +1/  !h=2
      data (lsign(ll,3),ll=2,5) / -1, +1, +1, -1/  !h=3
      data (lsign(ll,4),ll=2,5) / -1, +1, -1, -1/  !h=4
      data (lsign(ll,5),ll=2,5) / +1, -1, +1, +1/  !h=5
      data (lsign(ll,6),ll=2,5) / +1, -1, -1, +1/  !h=6
      data (lsign(ll,7),ll=2,5) / +1, -1, +1, -1/  !h=7
      data (lsign(ll,8),ll=2,5) / +1, -1, -1, -1/  !h=8

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
      enddo

      call ZAA_ZTOZAA1(P,N,lsign(2,h),zaa,nA)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------------
       
      subroutine ZAA_ZTOZAA1(P,N,lsign,zaa,nA)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z -> e- e+ a a  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS= 6) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  13) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5), Q(0:3)
      INTEGER N
      double complex zaa(0:5)
      INTEGER lsign(2:5)
      integer nA
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and Z/A polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)

C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
                                                                         
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton and Z states from common block
         do i=1,6
            w(i,2)  = zem(i,N)
            w(i,3)  = zep(i,N)
            w(i,4)  = atau1(i,N)
            w(i,5)  = atau2(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),ZMASS ,ZWIDTH, MU,-1,W(1,1   )) 
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL FVIXXX(W(1,6   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,7   ),W(1,2   ),W(1,5   ),GAL ,AMP(1   ))            
      CALL FVOXXX(W(1,2   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL FVIXXX(W(1,3   ),W(1,5   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,8   ),W(1,1   ),GZL ,AMP(2   ))            
      CALL IOVXXX(W(1,6   ),W(1,8   ),W(1,5   ),GAL ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL FVOXXX(W(1,2   ),W(1,5   ),GAL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,10  ),W(1,11  ),W(1,1   ),GZL ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL FVOXXX(W(1,12  ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,5   ),GAL ,AMP(5   ))            
      CALL IOVXXX(W(1,10  ),W(1,12  ),W(1,5   ),GAL ,AMP(6   ))            

      zaa(mu) = +AMP(1)+AMP(2)+AMP(3)+AMP(4)+AMP(5)+AMP(6)
      enddo
      zaa(4) = dcmplx(q(0),q(3))
      zaa(5) = dcmplx(q(1),q(2))
      return
      END
