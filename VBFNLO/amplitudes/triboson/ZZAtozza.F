c ------------------------------------------------------------

      subroutine ZZA_ATOZZA(v,N,h,zza,NW)

      IMPLICIT NONE

      DOUBLE PRECISION P(0:3,2:7), v(0:3,5)
      complex*16 zza(0:5)
      integer lsign(2:7,8),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,7) / -1, -1, -1, -1, -1, -1/  !h=1
      data (lsign(ll,2),ll=2,7) / -1, -1, -1, -1, +1, +1/  !h=2

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
         P(mu,6) = v(mu,5)
      enddo

      call ZZA_ATOZZA1(P,N,lsign(2,h),zza(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE ZZA_ATOZZA1(P,N,lsign,zza,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a -> e- e+ mu- mu+ a  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  40)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  47)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:7), Q(0:3)
      INTEGER N
      double complex zza(0:5)
      INTEGER lsign(2:7)
      integer NW
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)

C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"          
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an Z states from common block
         do i=1,6
            w(i,2)  = zem(i,N)
            w(i,3)  = zep(i,N)
            w(i,4)  = zmm(i,N)
            w(i,5)  = zmp(i,N)
            w(i,6)  = atau(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)+p(mu,6)
      enddo
c
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),ZERO ,ZERO, MU,-1,W(1,1   )) 
      CALL FVIXXX(W(1,5   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL FVOXXX(W(1,2   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL JIOXXX(W(1,3   ),W(1,8   ),GAL ,ZERO    ,AWIDTH  ,W(1,9   ))    
      CALL IOVXXX(W(1,7   ),W(1,4   ),W(1,9   ),GAL ,AMP(1   ))            
      CALL JIOXXX(W(1,3   ),W(1,8   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,10  ))    
      CALL IOVXXX(W(1,7   ),W(1,4   ),W(1,10  ),GZL ,AMP(2   ))            
      CALL FVIXXX(W(1,3   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL JIOXXX(W(1,11  ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,7   ),W(1,4   ),W(1,12  ),GAL ,AMP(3   ))            
      CALL JIOXXX(W(1,11  ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,7   ),W(1,4   ),W(1,13  ),GZL ,AMP(4   ))            
      CALL JIOXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,14  ))    
      CALL FVOXXX(W(1,4   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL IOVXXX(W(1,7   ),W(1,15  ),W(1,14  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,3   ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,16  ))    
      CALL IOVXXX(W(1,7   ),W(1,15  ),W(1,16  ),GZL ,AMP(6   ))            
      CALL FVOXXX(W(1,4   ),W(1,14  ),GAL ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL FVOXXX(W(1,17  ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL IOVXXX(W(1,5   ),W(1,18  ),W(1,6   ),GAL ,AMP(7   ))            
      CALL FVOXXX(W(1,4   ),W(1,16  ),GZL ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL FVOXXX(W(1,19  ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,5   ),W(1,20  ),W(1,6   ),GAL ,AMP(8   ))            
      CALL IOVXXX(W(1,7   ),W(1,17  ),W(1,6   ),GAL ,AMP(9   ))            
      CALL IOVXXX(W(1,7   ),W(1,19  ),W(1,6   ),GAL ,AMP(10  ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL JIOXXX(W(1,5   ),W(1,21  ),GAL ,ZERO    ,AWIDTH  ,W(1,22  ))    
      CALL IOVXXX(W(1,3   ),W(1,8   ),W(1,22  ),GAL ,AMP(11  ))            
      CALL JIOXXX(W(1,5   ),W(1,21  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,23  ))    
      CALL IOVXXX(W(1,3   ),W(1,8   ),W(1,23  ),GZL ,AMP(12  ))            
      CALL IOVXXX(W(1,11  ),W(1,2   ),W(1,22  ),GAL ,AMP(13  ))            
      CALL IOVXXX(W(1,11  ),W(1,2   ),W(1,23  ),GZL ,AMP(14  ))            
      CALL FVIXXX(W(1,5   ),W(1,14  ),GAL ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,24  ),W(1,15  ),W(1,1   ),GAL ,AMP(15  ))            
      CALL FVIXXX(W(1,5   ),W(1,16  ),GZL ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL IOVXXX(W(1,25  ),W(1,15  ),W(1,1   ),GAL ,AMP(16  ))            
      CALL FVOXXX(W(1,21  ),W(1,14  ),GAL ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,5   ),W(1,26  ),W(1,6   ),GAL ,AMP(17  ))            
      CALL FVOXXX(W(1,21  ),W(1,16  ),GZL ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,5   ),W(1,27  ),W(1,6   ),GAL ,AMP(18  ))            
      CALL IOVXXX(W(1,24  ),W(1,21  ),W(1,6   ),GAL ,AMP(19  ))            
      CALL IOVXXX(W(1,25  ),W(1,21  ),W(1,6   ),GAL ,AMP(20  ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL JIOXXX(W(1,5   ),W(1,4   ),GAL ,ZERO    ,AWIDTH  ,W(1,29  ))    
      CALL IOVXXX(W(1,28  ),W(1,8   ),W(1,29  ),GAL ,AMP(21  ))            
      CALL JIOXXX(W(1,5   ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,30  ))    
      CALL IOVXXX(W(1,28  ),W(1,8   ),W(1,30  ),GZL ,AMP(22  ))            
      CALL FVIXXX(W(1,11  ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL IOVXXX(W(1,31  ),W(1,2   ),W(1,29  ),GAL ,AMP(23  ))            
      CALL IOVXXX(W(1,31  ),W(1,2   ),W(1,30  ),GZL ,AMP(24  ))            
      CALL JIOXXX(W(1,28  ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,32  ))    
      CALL FVIXXX(W(1,5   ),W(1,32  ),GAL ,ZERO    ,ZERO    ,W(1,33  ))    
      CALL IOVXXX(W(1,33  ),W(1,4   ),W(1,6   ),GAL ,AMP(25  ))            
      CALL JIOXXX(W(1,28  ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,34  ))    
      CALL FVIXXX(W(1,5   ),W(1,34  ),GZL ,ZERO    ,ZERO    ,W(1,35  ))    
      CALL IOVXXX(W(1,35  ),W(1,4   ),W(1,6   ),GAL ,AMP(26  ))            
      CALL FVOXXX(W(1,4   ),W(1,32  ),GAL ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL IOVXXX(W(1,5   ),W(1,36  ),W(1,6   ),GAL ,AMP(27  ))            
      CALL FVOXXX(W(1,4   ),W(1,34  ),GZL ,ZERO    ,ZERO    ,W(1,37  ))    
      CALL IOVXXX(W(1,5   ),W(1,37  ),W(1,6   ),GAL ,AMP(28  ))            
      CALL FVIXXX(W(1,28  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL IOVXXX(W(1,38  ),W(1,2   ),W(1,29  ),GAL ,AMP(29  ))            
      CALL IOVXXX(W(1,38  ),W(1,2   ),W(1,30  ),GZL ,AMP(30  ))            
      CALL FVOXXX(W(1,8   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,29  ),GAL ,AMP(31  ))            
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,30  ),GZL ,AMP(32  ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,11  ),W(1,40  ),W(1,29  ),GAL ,AMP(33  ))            
      CALL IOVXXX(W(1,11  ),W(1,40  ),W(1,30  ),GZL ,AMP(34  ))            
      CALL JIOXXX(W(1,3   ),W(1,40  ),GAL ,ZERO    ,AWIDTH  ,W(1,41  ))    
      CALL FVIXXX(W(1,5   ),W(1,41  ),GAL ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL IOVXXX(W(1,42  ),W(1,4   ),W(1,6   ),GAL ,AMP(35  ))            
      CALL JIOXXX(W(1,3   ),W(1,40  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,43  ))    
      CALL FVIXXX(W(1,5   ),W(1,43  ),GZL ,ZERO    ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,44  ),W(1,4   ),W(1,6   ),GAL ,AMP(36  ))            
      CALL FVOXXX(W(1,4   ),W(1,41  ),GAL ,ZERO    ,ZERO    ,W(1,45  ))    
      CALL IOVXXX(W(1,5   ),W(1,45  ),W(1,6   ),GAL ,AMP(37  ))            
      CALL FVOXXX(W(1,4   ),W(1,43  ),GZL ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL IOVXXX(W(1,5   ),W(1,46  ),W(1,6   ),GAL ,AMP(38  ))            
      CALL FVOXXX(W(1,40  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,3   ),W(1,47  ),W(1,29  ),GAL ,AMP(39  ))            
      CALL IOVXXX(W(1,3   ),W(1,47  ),W(1,30  ),GZL ,AMP(40  ))            
      zza(   mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)+AMP(  34)+AMP(  35)
     &             +AMP(  36)+AMP(  37)+AMP(  38)+AMP(  39)+AMP(  40)
      enddo
      zza(4) = dcmplx(q(0),q(3))
      zza(5) = dcmplx(q(1),q(2))
c
      END

c ------------------------------------------------------------

      subroutine ZZA_ZTOZZA(v,N,h,zza,NW)

      IMPLICIT NONE

      DOUBLE PRECISION P(0:3,2:7), v(0:3,5)
      double complex zza(0:5)
      integer lsign(2:7,8),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,7) / -1, -1, -1, -1, -1, -1/  !h=1
      data (lsign(ll,2),ll=2,7) / -1, -1, -1, -1, +1, +1/  !h=2

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
         P(mu,6) = v(mu,5)
      enddo

      call ZZA_ZTOZZA1(P,N,lsign(2,h),zza(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE ZZA_ZTOZZA1(P,N,lsign,zza,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z -> e- e+ mu- mu+ a  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  40)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  47)
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:7), Q(0:3)
      INTEGER N
      double complex zza(0:5)
      INTEGER lsign(2:7)
      integer NW
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu
      DOUBLE COMPLEX AMP(NGRAPHS)
      DOUBLE COMPLEX W(6,NWAVEFUNCS)

c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)

C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"          
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton and Z states from common block
         do i=1,6
            w(i,2)  = zem(i,N)
            w(i,3)  = zep(i,N)
            w(i,4)  = zmm(i,N)
            w(i,5)  = zmp(i,N)
            w(i,6)  = atau(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)+p(mu,6)
      enddo
c
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),ZMASS ,ZWIDTH, MU,-1,W(1,1   )) 
      CALL FVIXXX(W(1,5   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL FVOXXX(W(1,2   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL JIOXXX(W(1,3   ),W(1,8   ),GAL ,ZERO    ,AWIDTH  ,W(1,9   ))    
      CALL IOVXXX(W(1,7   ),W(1,4   ),W(1,9   ),GAL ,AMP(1   ))            
      CALL JIOXXX(W(1,3   ),W(1,8   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,10  ))    
      CALL IOVXXX(W(1,7   ),W(1,4   ),W(1,10  ),GZL ,AMP(2   ))            
      CALL FVIXXX(W(1,3   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL JIOXXX(W(1,11  ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,7   ),W(1,4   ),W(1,12  ),GAL ,AMP(3   ))            
      CALL JIOXXX(W(1,11  ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,7   ),W(1,4   ),W(1,13  ),GZL ,AMP(4   ))            
      CALL JIOXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,14  ))    
      CALL FVOXXX(W(1,4   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL IOVXXX(W(1,7   ),W(1,15  ),W(1,14  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,3   ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,16  ))    
      CALL IOVXXX(W(1,7   ),W(1,15  ),W(1,16  ),GZL ,AMP(6   ))            
      CALL FVOXXX(W(1,4   ),W(1,14  ),GAL ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL FVOXXX(W(1,17  ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL IOVXXX(W(1,5   ),W(1,18  ),W(1,6   ),GAL ,AMP(7   ))            
      CALL FVOXXX(W(1,4   ),W(1,16  ),GZL ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL FVOXXX(W(1,19  ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,5   ),W(1,20  ),W(1,6   ),GAL ,AMP(8   ))            
      CALL IOVXXX(W(1,7   ),W(1,17  ),W(1,6   ),GAL ,AMP(9   ))            
      CALL IOVXXX(W(1,7   ),W(1,19  ),W(1,6   ),GAL ,AMP(10  ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL JIOXXX(W(1,5   ),W(1,21  ),GAL ,ZERO    ,AWIDTH  ,W(1,22  ))    
      CALL IOVXXX(W(1,3   ),W(1,8   ),W(1,22  ),GAL ,AMP(11  ))            
      CALL JIOXXX(W(1,5   ),W(1,21  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,23  ))    
      CALL IOVXXX(W(1,3   ),W(1,8   ),W(1,23  ),GZL ,AMP(12  ))            
      CALL IOVXXX(W(1,11  ),W(1,2   ),W(1,22  ),GAL ,AMP(13  ))            
      CALL IOVXXX(W(1,11  ),W(1,2   ),W(1,23  ),GZL ,AMP(14  ))            
      CALL FVIXXX(W(1,5   ),W(1,14  ),GAL ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,24  ),W(1,15  ),W(1,1   ),GZL ,AMP(15  ))            
      CALL FVIXXX(W(1,5   ),W(1,16  ),GZL ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL IOVXXX(W(1,25  ),W(1,15  ),W(1,1   ),GZL ,AMP(16  ))            
      CALL FVOXXX(W(1,21  ),W(1,14  ),GAL ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,5   ),W(1,26  ),W(1,6   ),GAL ,AMP(17  ))            
      CALL FVOXXX(W(1,21  ),W(1,16  ),GZL ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,5   ),W(1,27  ),W(1,6   ),GAL ,AMP(18  ))            
      CALL IOVXXX(W(1,24  ),W(1,21  ),W(1,6   ),GAL ,AMP(19  ))            
      CALL IOVXXX(W(1,25  ),W(1,21  ),W(1,6   ),GAL ,AMP(20  ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL JIOXXX(W(1,5   ),W(1,4   ),GAL ,ZERO    ,AWIDTH  ,W(1,29  ))    
      CALL IOVXXX(W(1,28  ),W(1,8   ),W(1,29  ),GAL ,AMP(21  ))            
      CALL JIOXXX(W(1,5   ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,30  ))    
      CALL IOVXXX(W(1,28  ),W(1,8   ),W(1,30  ),GZL ,AMP(22  ))            
      CALL FVIXXX(W(1,11  ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL IOVXXX(W(1,31  ),W(1,2   ),W(1,29  ),GAL ,AMP(23  ))            
      CALL IOVXXX(W(1,31  ),W(1,2   ),W(1,30  ),GZL ,AMP(24  ))            
      CALL JIOXXX(W(1,28  ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,32  ))    
      CALL FVIXXX(W(1,5   ),W(1,32  ),GAL ,ZERO    ,ZERO    ,W(1,33  ))    
      CALL IOVXXX(W(1,33  ),W(1,4   ),W(1,6   ),GAL ,AMP(25  ))            
      CALL JIOXXX(W(1,28  ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,34  ))    
      CALL FVIXXX(W(1,5   ),W(1,34  ),GZL ,ZERO    ,ZERO    ,W(1,35  ))    
      CALL IOVXXX(W(1,35  ),W(1,4   ),W(1,6   ),GAL ,AMP(26  ))            
      CALL FVOXXX(W(1,4   ),W(1,32  ),GAL ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL IOVXXX(W(1,5   ),W(1,36  ),W(1,6   ),GAL ,AMP(27  ))            
      CALL FVOXXX(W(1,4   ),W(1,34  ),GZL ,ZERO    ,ZERO    ,W(1,37  ))    
      CALL IOVXXX(W(1,5   ),W(1,37  ),W(1,6   ),GAL ,AMP(28  ))            
      CALL FVIXXX(W(1,28  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL IOVXXX(W(1,38  ),W(1,2   ),W(1,29  ),GAL ,AMP(29  ))            
      CALL IOVXXX(W(1,38  ),W(1,2   ),W(1,30  ),GZL ,AMP(30  ))            
      CALL FVOXXX(W(1,8   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,29  ),GAL ,AMP(31  ))            
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,30  ),GZL ,AMP(32  ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,11  ),W(1,40  ),W(1,29  ),GAL ,AMP(33  ))            
      CALL IOVXXX(W(1,11  ),W(1,40  ),W(1,30  ),GZL ,AMP(34  ))            
      CALL JIOXXX(W(1,3   ),W(1,40  ),GAL ,ZERO    ,AWIDTH  ,W(1,41  ))    
      CALL FVIXXX(W(1,5   ),W(1,41  ),GAL ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL IOVXXX(W(1,42  ),W(1,4   ),W(1,6   ),GAL ,AMP(35  ))            
      CALL JIOXXX(W(1,3   ),W(1,40  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,43  ))    
      CALL FVIXXX(W(1,5   ),W(1,43  ),GZL ,ZERO    ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,44  ),W(1,4   ),W(1,6   ),GAL ,AMP(36  ))            
      CALL FVOXXX(W(1,4   ),W(1,41  ),GAL ,ZERO    ,ZERO    ,W(1,45  ))    
      CALL IOVXXX(W(1,5   ),W(1,45  ),W(1,6   ),GAL ,AMP(37  ))            
      CALL FVOXXX(W(1,4   ),W(1,43  ),GZL ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL IOVXXX(W(1,5   ),W(1,46  ),W(1,6   ),GAL ,AMP(38  ))            
      CALL FVOXXX(W(1,40  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,3   ),W(1,47  ),W(1,29  ),GAL ,AMP(39  ))            
      CALL IOVXXX(W(1,3   ),W(1,47  ),W(1,30  ),GZL ,AMP(40  ))            
      zza (  mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)+AMP(  34)+AMP(  35)
     &             +AMP(  36)+AMP(  37)+AMP(  38)+AMP(  39)+AMP(  40)
      enddo
      zza(4) = dcmplx(q(0),q(3))
      zza(5) = dcmplx(q(1),q(2))
c
      END
