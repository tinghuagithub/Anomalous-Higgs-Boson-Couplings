c ------------------------------------------------------------

      subroutine WPTOWZA_mg2_had(P,N,h,wza,NW)

      IMPLICIT NONE

      DOUBLE PRECISION P(0:3,2:6)
      complex*16 wza(0:5)
      integer lsign(2:6,4),ll,mu,nu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,6) / -1, -1, -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,6) / -1, -1, +1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,6) / -1, -1, -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,6) / -1, -1, +1, +1, -1/  !h=4

      call WPTOWZA1_mg2_had(P,N,lsign(2,h),wza(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE WPTOWZA1_mg2_had(P,N,lsign,wza,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : w+ -> ve e+ mu- mu+ a  
C  
C Crossing   1 is w+ ve~ -> e+ mu- mu+ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  44) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  61) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:6), Q(0:3)
      INTEGER N
      COMPLEX*16 wza(0:5)
      INTEGER lsign(2:6)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I,J, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/process.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wmu(i,N)
            w(i,5)  = wmp(i,N)
            w(i,6)  = wa(i,N)
            w(i,7)  = wp(i,N)
            w(i,17) = ztau(i,N)
            w(i,15) = atau(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)+p(mu,6)
      enddo
c
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))


      if (procid.eq.WPhadZA) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL FVOXXX(W(1,4   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL JIOXXX(W(1,5   ),W(1,8   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL VVVXXX(W(1,1   ),W(1,9   ),W(1,6   ),GWWA ,AMP(1   ))           
      CALL FVIXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL FVIXXX(W(1,3   ),W(1,11  ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL IOVXXX(W(1,12  ),W(1,2   ),W(1,6   ),GAU ,AMP(2   ))            
      CALL FVOXXX(W(1,2   ),W(1,11  ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,6   ),GAD ,AMP(3   ))            
      CALL FVIXXX(W(1,10  ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,14  ),W(1,4   ),W(1,6   ),GAL ,AMP(4   ))            
      CALL FVOXXX(W(1,8   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL IOVXXX(W(1,5   ),W(1,15  ),W(1,6   ),GAL ,AMP(5   ))            
      CALL VVVXXX(W(1,11  ),W(1,7   ),W(1,6   ),GWWA ,AMP(6   ))           
      CALL JIOXXX(W(1,5   ),W(1,4   ),GAL ,ZERO    ,AWIDTH  ,W(1,16  ))    
      CALL JVVXXX(W(1,7   ),W(1,16  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     17  ))                                                          
      CALL VVVXXX(W(1,1   ),W(1,17  ),W(1,6   ),GWWA ,AMP(7   ))           
      CALL JIOXXX(W(1,5   ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,18  ))    
      CALL JVVXXX(W(1,7   ),W(1,18  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     19  ))                                                          
      CALL VVVXXX(W(1,1   ),W(1,19  ),W(1,6   ),GWWA ,AMP(8   ))           
      CALL JVVXXX(W(1,16  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     20  ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,20  ),GWF ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL IOVXXX(W(1,21  ),W(1,2   ),W(1,6   ),GAU ,AMP(9   ))            
      CALL JVVXXX(W(1,18  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     22  ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,22  ),GWF ,ZERO    ,ZERO    ,W(1,23  ))    
      CALL IOVXXX(W(1,23  ),W(1,2   ),W(1,6   ),GAU ,AMP(10  ))            
      CALL FVOXXX(W(1,2   ),W(1,20  ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,3   ),W(1,24  ),W(1,6   ),GAD ,AMP(11  ))            
      CALL FVOXXX(W(1,2   ),W(1,22  ),GWF ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL IOVXXX(W(1,3   ),W(1,25  ),W(1,6   ),GAD ,AMP(12  ))            
      CALL JVVXXX(W(1,1   ),W(1,7   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     26  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,26  ),GAL ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,27  ),W(1,4   ),W(1,6   ),GAL ,AMP(13  ))            
      CALL JVVXXX(W(1,1   ),W(1,7   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     28  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,28  ),GZL ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL IOVXXX(W(1,29  ),W(1,4   ),W(1,6   ),GAL ,AMP(14  ))            
      CALL FVOXXX(W(1,4   ),W(1,26  ),GAL ,ZERO    ,ZERO    ,W(1,30  ))    
      CALL IOVXXX(W(1,5   ),W(1,30  ),W(1,6   ),GAL ,AMP(15  ))            
      CALL FVOXXX(W(1,4   ),W(1,28  ),GZL ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL IOVXXX(W(1,5   ),W(1,31  ),W(1,6   ),GAL ,AMP(16  ))            
      CALL VVVXXX(W(1,20  ),W(1,7   ),W(1,6   ),GWWA ,AMP(17  ))           
      CALL VVVXXX(W(1,22  ),W(1,7   ),W(1,6   ),GWWA ,AMP(18  ))           
      CALL W3W3XX(W(1,1   ),W(1,16  ),W(1,7   ),W(1,6   ),GWWA ,GWWA ,     
     &     AMP(19  ))                                                      
      CALL W3W3XX(W(1,1   ),W(1,18  ),W(1,7   ),W(1,6   ),GWWZ ,GWWA ,     
     &     AMP(20  ))                                                      
      CALL FVOXXX(W(1,2   ),W(1,16  ),GAU ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,3   ),W(1,32  ),GWF ,WMASS   ,WWIDTH  ,W(1,33  ))    
      CALL VVVXXX(W(1,1   ),W(1,33  ),W(1,6   ),GWWA ,AMP(21  ))           
      CALL FVOXXX(W(1,2   ),W(1,18  ),GZU ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL JIOXXX(W(1,3   ),W(1,34  ),GWF ,WMASS   ,WWIDTH  ,W(1,35  ))    
      CALL VVVXXX(W(1,1   ),W(1,35  ),W(1,6   ),GWWA ,AMP(22  ))           
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL FVIXXX(W(1,36  ),W(1,16  ),GAU ,ZERO    ,ZERO    ,W(1,37  ))    
      CALL IOVXXX(W(1,37  ),W(1,2   ),W(1,6   ),GAU ,AMP(23  ))            
      CALL FVIXXX(W(1,36  ),W(1,18  ),GZU ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL IOVXXX(W(1,38  ),W(1,2   ),W(1,6   ),GAU ,AMP(24  ))            
      CALL FVOXXX(W(1,32  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,6   ),GAD ,AMP(25  ))            
      CALL FVOXXX(W(1,34  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,3   ),W(1,40  ),W(1,6   ),GAD ,AMP(26  ))            
      CALL JIOXXX(W(1,36  ),W(1,2   ),GAU ,ZERO    ,AWIDTH  ,W(1,41  ))    
      CALL FVIXXX(W(1,5   ),W(1,41  ),GAL ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL IOVXXX(W(1,42  ),W(1,4   ),W(1,6   ),GAL ,AMP(27  ))            
      CALL JIOXXX(W(1,36  ),W(1,2   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,43  ))    
      CALL FVIXXX(W(1,5   ),W(1,43  ),GZL ,ZERO    ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,44  ),W(1,4   ),W(1,6   ),GAL ,AMP(28  ))            
      CALL FVOXXX(W(1,4   ),W(1,41  ),GAL ,ZERO    ,ZERO    ,W(1,45  ))    
      CALL IOVXXX(W(1,5   ),W(1,45  ),W(1,6   ),GAL ,AMP(29  ))            
      CALL FVOXXX(W(1,4   ),W(1,43  ),GZL ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL IOVXXX(W(1,5   ),W(1,46  ),W(1,6   ),GAL ,AMP(30  ))            
      CALL IOVXXX(W(1,36  ),W(1,32  ),W(1,6   ),GAU ,AMP(31  ))            
      CALL IOVXXX(W(1,36  ),W(1,34  ),W(1,6   ),GAU ,AMP(32  ))            
      CALL FVIXXX(W(1,3   ),W(1,16  ),GAD ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL JIOXXX(W(1,47  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,48  ))    
      CALL VVVXXX(W(1,1   ),W(1,48  ),W(1,6   ),GWWA ,AMP(33  ))           
      CALL FVIXXX(W(1,3   ),W(1,18  ),GZD ,ZERO    ,ZERO    ,W(1,49  ))    
      CALL JIOXXX(W(1,49  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,50  ))    
      CALL VVVXXX(W(1,1   ),W(1,50  ),W(1,6   ),GWWA ,AMP(34  ))           
      CALL FVIXXX(W(1,47  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,51  ))    
      CALL IOVXXX(W(1,51  ),W(1,2   ),W(1,6   ),GAU ,AMP(35  ))            
      CALL FVIXXX(W(1,49  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,52  ))    
      CALL IOVXXX(W(1,52  ),W(1,2   ),W(1,6   ),GAU ,AMP(36  ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,53  ))    
      CALL FVOXXX(W(1,53  ),W(1,16  ),GAD ,ZERO    ,ZERO    ,W(1,54  ))    
      CALL IOVXXX(W(1,3   ),W(1,54  ),W(1,6   ),GAD ,AMP(37  ))            
      CALL FVOXXX(W(1,53  ),W(1,18  ),GZD ,ZERO    ,ZERO    ,W(1,55  ))    
      CALL IOVXXX(W(1,3   ),W(1,55  ),W(1,6   ),GAD ,AMP(38  ))            
      CALL JIOXXX(W(1,3   ),W(1,53  ),GAD ,ZERO    ,AWIDTH  ,W(1,56  ))    
      CALL FVIXXX(W(1,5   ),W(1,56  ),GAL ,ZERO    ,ZERO    ,W(1,57  ))    
      CALL IOVXXX(W(1,57  ),W(1,4   ),W(1,6   ),GAL ,AMP(39  ))            
      CALL JIOXXX(W(1,3   ),W(1,53  ),GZD ,ZMASS   ,ZWIDTH  ,W(1,58  ))    
      CALL FVIXXX(W(1,5   ),W(1,58  ),GZL ,ZERO    ,ZERO    ,W(1,59  ))    
      CALL IOVXXX(W(1,59  ),W(1,4   ),W(1,6   ),GAL ,AMP(40  ))            
      CALL FVOXXX(W(1,4   ),W(1,56  ),GAL ,ZERO    ,ZERO    ,W(1,60  ))    
      CALL IOVXXX(W(1,5   ),W(1,60  ),W(1,6   ),GAL ,AMP(41  ))            
      CALL FVOXXX(W(1,4   ),W(1,58  ),GZL ,ZERO    ,ZERO    ,W(1,61  ))    
      CALL IOVXXX(W(1,5   ),W(1,61  ),W(1,6   ),GAL ,AMP(42  ))            
      CALL IOVXXX(W(1,47  ),W(1,53  ),W(1,6   ),GAD ,AMP(43  ))            
      CALL IOVXXX(W(1,49  ),W(1,53  ),W(1,6   ),GAD ,AMP(44  ))            
      wza(  mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)+AMP(  34)+AMP(  35)
     &             +AMP(  36)+AMP(  37)+AMP(  38)+AMP(  39)+AMP(  40)
     &             +AMP(  41)+AMP(  42)+AMP(  43)+AMP(  44)

      elseif (procid.eq.WPZhadA .and. Ztodd) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL FVOXXX(W(1,4   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL JIOXXX(W(1,5   ),W(1,8   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL VVVXXX(W(1,1   ),W(1,9   ),W(1,6   ),GWWA ,AMP(1   ))           
      CALL FVIXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL FVOXXX(W(1,2   ),W(1,11  ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL IOVXXX(W(1,3   ),W(1,12  ),W(1,6   ),GAL ,AMP(2   ))            
      CALL FVIXXX(W(1,10  ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,13  ),W(1,4   ),W(1,6   ),GAD ,AMP(3   ))            
      CALL FVOXXX(W(1,8   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,6   ),GAD ,AMP(4   ))            
      CALL VVVXXX(W(1,11  ),W(1,7   ),W(1,6   ),GWWA ,AMP(5   ))           
      CALL IOVXXX(W(1,10  ),W(1,8   ),W(1,6   ),GAU ,AMP(6   ))            
      CALL JIOXXX(W(1,5   ),W(1,4   ),GAD ,ZERO    ,AWIDTH  ,W(1,15  ))    
      CALL JVVXXX(W(1,7   ),W(1,15  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     16  ))                                                          
      CALL VVVXXX(W(1,1   ),W(1,16  ),W(1,6   ),GWWA ,AMP(7   ))           
      CALL JIOXXX(W(1,5   ),W(1,4   ),GZD ,ZMASS   ,ZWIDTH  ,W(1,17  ))    
      CALL JVVXXX(W(1,7   ),W(1,17  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     18  ))                                                          
      CALL VVVXXX(W(1,1   ),W(1,18  ),W(1,6   ),GWWA ,AMP(8   ))           
      CALL JVVXXX(W(1,15  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     19  ))                                                          
      CALL FVOXXX(W(1,2   ),W(1,19  ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,3   ),W(1,20  ),W(1,6   ),GAL ,AMP(9   ))            
      CALL JVVXXX(W(1,17  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     21  ))                                                          
      CALL FVOXXX(W(1,2   ),W(1,21  ),GWF ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL IOVXXX(W(1,3   ),W(1,22  ),W(1,6   ),GAL ,AMP(10  ))            
      CALL JVVXXX(W(1,1   ),W(1,7   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     23  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,23  ),GAD ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,24  ),W(1,4   ),W(1,6   ),GAD ,AMP(11  ))            
      CALL JVVXXX(W(1,1   ),W(1,7   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     25  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,25  ),GZD ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,26  ),W(1,4   ),W(1,6   ),GAD ,AMP(12  ))            
      CALL FVOXXX(W(1,4   ),W(1,23  ),GAD ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,5   ),W(1,27  ),W(1,6   ),GAD ,AMP(13  ))            
      CALL FVOXXX(W(1,4   ),W(1,25  ),GZD ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,5   ),W(1,28  ),W(1,6   ),GAD ,AMP(14  ))            
      CALL VVVXXX(W(1,19  ),W(1,7   ),W(1,6   ),GWWA ,AMP(15  ))           
      CALL VVVXXX(W(1,21  ),W(1,7   ),W(1,6   ),GWWA ,AMP(16  ))           
      CALL W3W3XX(W(1,1   ),W(1,15  ),W(1,7   ),W(1,6   ),GWWA ,GWWA ,     
     &     AMP(17  ))                                                      
      CALL W3W3XX(W(1,1   ),W(1,17  ),W(1,7   ),W(1,6   ),GWWZ ,GWWA ,     
     &     AMP(18  ))                                                      
      CALL FVOXXX(W(1,2   ),W(1,17  ),GZN ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL JIOXXX(W(1,3   ),W(1,29  ),GWF ,WMASS   ,WWIDTH  ,W(1,30  ))    
      CALL VVVXXX(W(1,1   ),W(1,30  ),W(1,6   ),GWWA ,AMP(19  ))           
      CALL FVOXXX(W(1,29  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL IOVXXX(W(1,3   ),W(1,31  ),W(1,6   ),GAL ,AMP(20  ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,32  ),W(1,2   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,33  ))    
      CALL FVIXXX(W(1,5   ),W(1,33  ),GZD ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,34  ),W(1,4   ),W(1,6   ),GAD ,AMP(21  ))            
      CALL FVOXXX(W(1,4   ),W(1,33  ),GZD ,ZERO    ,ZERO    ,W(1,35  ))    
      CALL IOVXXX(W(1,5   ),W(1,35  ),W(1,6   ),GAD ,AMP(22  ))            
      CALL FVIXXX(W(1,3   ),W(1,15  ),GAL ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL JIOXXX(W(1,36  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,37  ))    
      CALL VVVXXX(W(1,1   ),W(1,37  ),W(1,6   ),GWWA ,AMP(23  ))           
      CALL FVIXXX(W(1,3   ),W(1,17  ),GZL ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL JIOXXX(W(1,38  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,39  ))    
      CALL VVVXXX(W(1,1   ),W(1,39  ),W(1,6   ),GWWA ,AMP(24  ))           
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL FVOXXX(W(1,40  ),W(1,15  ),GAL ,ZERO    ,ZERO    ,W(1,41  ))    
      CALL IOVXXX(W(1,3   ),W(1,41  ),W(1,6   ),GAL ,AMP(25  ))            
      CALL FVOXXX(W(1,40  ),W(1,17  ),GZL ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL IOVXXX(W(1,3   ),W(1,42  ),W(1,6   ),GAL ,AMP(26  ))            
      CALL JIOXXX(W(1,3   ),W(1,40  ),GAL ,ZERO    ,AWIDTH  ,W(1,43  ))    
      CALL FVIXXX(W(1,5   ),W(1,43  ),GAD ,ZERO    ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,44  ),W(1,4   ),W(1,6   ),GAD ,AMP(27  ))            
      CALL JIOXXX(W(1,3   ),W(1,40  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,45  ))    
      CALL FVIXXX(W(1,5   ),W(1,45  ),GZD ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL IOVXXX(W(1,46  ),W(1,4   ),W(1,6   ),GAD ,AMP(28  ))            
      CALL FVOXXX(W(1,4   ),W(1,43  ),GAD ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,5   ),W(1,47  ),W(1,6   ),GAD ,AMP(29  ))            
      CALL FVOXXX(W(1,4   ),W(1,45  ),GZD ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL IOVXXX(W(1,5   ),W(1,48  ),W(1,6   ),GAD ,AMP(30  ))            
      CALL IOVXXX(W(1,36  ),W(1,40  ),W(1,6   ),GAL ,AMP(31  ))            
      CALL IOVXXX(W(1,38  ),W(1,40  ),W(1,6   ),GAL ,AMP(32  ))            
       wza(  mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)

      elseif (procid.eq.WPZhadA .and. Ztouu) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL JIOXXX(W(1,5   ),W(1,4   ),GAU ,ZERO    ,AWIDTH  ,W(1,8   ))    
      CALL JVVXXX(W(1,7   ),W(1,8   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     9   ))                                                          
      CALL VVVXXX(W(1,1   ),W(1,9   ),W(1,6   ),GWWA ,AMP(1   ))           
      CALL JIOXXX(W(1,5   ),W(1,4   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,10  ))    
      CALL JVVXXX(W(1,7   ),W(1,10  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     11  ))                                                          
      CALL VVVXXX(W(1,1   ),W(1,11  ),W(1,6   ),GWWA ,AMP(2   ))           
      CALL JVVXXX(W(1,8   ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     12  ))                                                          
      CALL FVOXXX(W(1,2   ),W(1,12  ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,6   ),GAL ,AMP(3   ))            
      CALL JVVXXX(W(1,10  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     14  ))                                                          
      CALL FVOXXX(W(1,2   ),W(1,14  ),GWF ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL IOVXXX(W(1,3   ),W(1,15  ),W(1,6   ),GAL ,AMP(4   ))            
      CALL JVVXXX(W(1,1   ),W(1,7   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     16  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,16  ),GAU ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL IOVXXX(W(1,17  ),W(1,4   ),W(1,6   ),GAU ,AMP(5   ))            
      CALL JVVXXX(W(1,1   ),W(1,7   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     18  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,18  ),GZU ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL IOVXXX(W(1,19  ),W(1,4   ),W(1,6   ),GAU ,AMP(6   ))            
      CALL FVOXXX(W(1,4   ),W(1,16  ),GAU ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,5   ),W(1,20  ),W(1,6   ),GAU ,AMP(7   ))            
      CALL FVOXXX(W(1,4   ),W(1,18  ),GZU ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,6   ),GAU ,AMP(8   ))            
      CALL VVVXXX(W(1,12  ),W(1,7   ),W(1,6   ),GWWA ,AMP(9   ))           
      CALL VVVXXX(W(1,14  ),W(1,7   ),W(1,6   ),GWWA ,AMP(10  ))           
      CALL W3W3XX(W(1,1   ),W(1,8   ),W(1,7   ),W(1,6   ),GWWA ,GWWA ,     
     &     AMP(11  ))                                                      
      CALL W3W3XX(W(1,1   ),W(1,10  ),W(1,7   ),W(1,6   ),GWWZ ,GWWA ,     
     &     AMP(12  ))                                                      
      CALL FVIXXX(W(1,5   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL JIOXXX(W(1,22  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,23  ))    
      CALL VVVXXX(W(1,1   ),W(1,23  ),W(1,6   ),GWWA ,AMP(13  ))           
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL JIOXXX(W(1,5   ),W(1,24  ),GWF ,WMASS   ,WWIDTH  ,W(1,25  ))    
      CALL FVOXXX(W(1,2   ),W(1,25  ),GWF ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,3   ),W(1,26  ),W(1,6   ),GAL ,AMP(14  ))            
      CALL FVIXXX(W(1,22  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,27  ),W(1,4   ),W(1,6   ),GAU ,AMP(15  ))            
      CALL FVOXXX(W(1,24  ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,5   ),W(1,28  ),W(1,6   ),GAU ,AMP(16  ))            
      CALL IOVXXX(W(1,22  ),W(1,24  ),W(1,6   ),GAD ,AMP(17  ))            
      CALL VVVXXX(W(1,25  ),W(1,7   ),W(1,6   ),GWWA ,AMP(18  ))           
      CALL FVOXXX(W(1,2   ),W(1,10  ),GZN ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL JIOXXX(W(1,3   ),W(1,29  ),GWF ,WMASS   ,WWIDTH  ,W(1,30  ))    
      CALL VVVXXX(W(1,1   ),W(1,30  ),W(1,6   ),GWWA ,AMP(19  ))           
      CALL FVOXXX(W(1,29  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL IOVXXX(W(1,3   ),W(1,31  ),W(1,6   ),GAL ,AMP(20  ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,32  ),W(1,2   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,33  ))    
      CALL FVIXXX(W(1,5   ),W(1,33  ),GZU ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,34  ),W(1,4   ),W(1,6   ),GAU ,AMP(21  ))            
      CALL FVOXXX(W(1,4   ),W(1,33  ),GZU ,ZERO    ,ZERO    ,W(1,35  ))    
      CALL IOVXXX(W(1,5   ),W(1,35  ),W(1,6   ),GAU ,AMP(22  ))            
      CALL FVIXXX(W(1,3   ),W(1,8   ),GAL ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL JIOXXX(W(1,36  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,37  ))    
      CALL VVVXXX(W(1,1   ),W(1,37  ),W(1,6   ),GWWA ,AMP(23  ))           
      CALL FVIXXX(W(1,3   ),W(1,10  ),GZL ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL JIOXXX(W(1,38  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,39  ))    
      CALL VVVXXX(W(1,1   ),W(1,39  ),W(1,6   ),GWWA ,AMP(24  ))           
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL FVOXXX(W(1,40  ),W(1,8   ),GAL ,ZERO    ,ZERO    ,W(1,41  ))    
      CALL IOVXXX(W(1,3   ),W(1,41  ),W(1,6   ),GAL ,AMP(25  ))            
      CALL FVOXXX(W(1,40  ),W(1,10  ),GZL ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL IOVXXX(W(1,3   ),W(1,42  ),W(1,6   ),GAL ,AMP(26  ))            
      CALL JIOXXX(W(1,3   ),W(1,40  ),GAL ,ZERO    ,AWIDTH  ,W(1,43  ))    
      CALL FVIXXX(W(1,5   ),W(1,43  ),GAU ,ZERO    ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,44  ),W(1,4   ),W(1,6   ),GAU ,AMP(27  ))            
      CALL JIOXXX(W(1,3   ),W(1,40  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,45  ))    
      CALL FVIXXX(W(1,5   ),W(1,45  ),GZU ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL IOVXXX(W(1,46  ),W(1,4   ),W(1,6   ),GAU ,AMP(28  ))            
      CALL FVOXXX(W(1,4   ),W(1,43  ),GAU ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,5   ),W(1,47  ),W(1,6   ),GAU ,AMP(29  ))            
      CALL FVOXXX(W(1,4   ),W(1,45  ),GZU ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL IOVXXX(W(1,5   ),W(1,48  ),W(1,6   ),GAU ,AMP(30  ))            
      CALL IOVXXX(W(1,36  ),W(1,40  ),W(1,6   ),GAL ,AMP(31  ))            
      CALL IOVXXX(W(1,38  ),W(1,40  ),W(1,6   ),GAL ,AMP(32  ))            
      wza(  mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)

      endif

      enddo
      wza(4) = dcmplx(q(0),q(3))
      wza(5) = dcmplx(q(1),q(2))
c
      END

c ------------------------------------------------------------

      subroutine WMTOWZA_mg2_had(P,N,h,wza,NW)

      IMPLICIT NONE

      DOUBLE PRECISION P(0:3,2:6)
      complex*16 wza(0:5)
      integer lsign(2:6,4),ll,mu,nu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,6) / -1, -1, -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,6) / -1, -1, +1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,6) / -1, -1, -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,6) / -1, -1, +1, +1, -1/  !h=4

      call WMTOWZA1_mg2_had(P,N,lsign(2,h),wza(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE WMTOWZA1_mg2_had(P,N,lsign,wza,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : w- -> e- ve~ mu- mu+ a  
C  
C Crossing   1 is w- e+ -> ve~ mu- mu+ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  44) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  61) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:6), Q(0:3)
      INTEGER N
      COMPLEX*16 wza(0:5)
      INTEGER lsign(2:6)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I,J, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/process.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wmu(i,N)
            w(i,5)  = wmp(i,N)
            w(i,6)  = wa(i,N)
            w(i,7)  = wp(i,N)
            w(i,10) = ztau(i,N)
            w(i,8)  = atau(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)+p(mu,6)
      enddo
c
      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))

      if (procid.eq.WMhadZA) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL JIOXXX(W(1,5   ),W(1,4   ),GAL ,ZERO    ,AWIDTH  ,W(1,8   ))    
      CALL JVVXXX(W(1,8   ),W(1,7   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     9   ))                                                          
      CALL VVVXXX(W(1,9   ),W(1,1   ),W(1,6   ),GWWA ,AMP(1   ))           
      CALL JIOXXX(W(1,5   ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,10  ))    
      CALL JVVXXX(W(1,10  ),W(1,7   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     11  ))                                                          
      CALL VVVXXX(W(1,11  ),W(1,1   ),W(1,6   ),GWWA ,AMP(2   ))           
      CALL JVVXXX(W(1,1   ),W(1,8   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     12  ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,12  ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,13  ),W(1,2   ),W(1,6   ),GAD ,AMP(3   ))            
      CALL JVVXXX(W(1,1   ),W(1,10  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     14  ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,14  ),GWF ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL IOVXXX(W(1,15  ),W(1,2   ),W(1,6   ),GAD ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,12  ),GWF ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,3   ),W(1,16  ),W(1,6   ),GAU ,AMP(5   ))            
      CALL FVOXXX(W(1,2   ),W(1,14  ),GWF ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL IOVXXX(W(1,3   ),W(1,17  ),W(1,6   ),GAU ,AMP(6   ))            
      CALL JVVXXX(W(1,7   ),W(1,1   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     18  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,18  ),GAL ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL IOVXXX(W(1,19  ),W(1,4   ),W(1,6   ),GAL ,AMP(7   ))            
      CALL JVVXXX(W(1,7   ),W(1,1   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     20  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,20  ),GZL ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL IOVXXX(W(1,21  ),W(1,4   ),W(1,6   ),GAL ,AMP(8   ))            
      CALL FVOXXX(W(1,4   ),W(1,18  ),GAL ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL IOVXXX(W(1,5   ),W(1,22  ),W(1,6   ),GAL ,AMP(9   ))            
      CALL FVOXXX(W(1,4   ),W(1,20  ),GZL ,ZERO    ,ZERO    ,W(1,23  ))    
      CALL IOVXXX(W(1,5   ),W(1,23  ),W(1,6   ),GAL ,AMP(10  ))            
      CALL VVVXXX(W(1,7   ),W(1,12  ),W(1,6   ),GWWA ,AMP(11  ))           
      CALL VVVXXX(W(1,7   ),W(1,14  ),W(1,6   ),GWWA ,AMP(12  ))           
      CALL W3W3XX(W(1,7   ),W(1,8   ),W(1,1   ),W(1,6   ),GWWA ,GWWA ,     
     &     AMP(13  ))                                                      
      CALL W3W3XX(W(1,7   ),W(1,10  ),W(1,1   ),W(1,6   ),GWWZ ,GWWA ,     
     &     AMP(14  ))                                                      
      CALL FVIXXX(W(1,5   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL JIOXXX(W(1,24  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,25  ))    
      CALL VVVXXX(W(1,25  ),W(1,1   ),W(1,6   ),GWWA ,AMP(15  ))           
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL JIOXXX(W(1,5   ),W(1,26  ),GWF ,WMASS   ,WWIDTH  ,W(1,27  ))    
      CALL FVIXXX(W(1,3   ),W(1,27  ),GWF ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,28  ),W(1,2   ),W(1,6   ),GAD ,AMP(16  ))            
      CALL FVOXXX(W(1,2   ),W(1,27  ),GWF ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL IOVXXX(W(1,3   ),W(1,29  ),W(1,6   ),GAU ,AMP(17  ))            
      CALL FVIXXX(W(1,24  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,30  ))    
      CALL IOVXXX(W(1,30  ),W(1,4   ),W(1,6   ),GAL ,AMP(18  ))            
      CALL FVOXXX(W(1,26  ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL IOVXXX(W(1,5   ),W(1,31  ),W(1,6   ),GAL ,AMP(19  ))            
      CALL VVVXXX(W(1,7   ),W(1,27  ),W(1,6   ),GWWA ,AMP(20  ))           
      CALL FVOXXX(W(1,2   ),W(1,8   ),GAD ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,3   ),W(1,32  ),GWF ,WMASS   ,WWIDTH  ,W(1,33  ))    
      CALL VVVXXX(W(1,33  ),W(1,1   ),W(1,6   ),GWWA ,AMP(21  ))           
      CALL FVOXXX(W(1,2   ),W(1,10  ),GZD ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL JIOXXX(W(1,3   ),W(1,34  ),GWF ,WMASS   ,WWIDTH  ,W(1,35  ))    
      CALL VVVXXX(W(1,35  ),W(1,1   ),W(1,6   ),GWWA ,AMP(22  ))           
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL FVIXXX(W(1,36  ),W(1,8   ),GAD ,ZERO    ,ZERO    ,W(1,37  ))    
      CALL IOVXXX(W(1,37  ),W(1,2   ),W(1,6   ),GAD ,AMP(23  ))            
      CALL FVIXXX(W(1,36  ),W(1,10  ),GZD ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL IOVXXX(W(1,38  ),W(1,2   ),W(1,6   ),GAD ,AMP(24  ))            
      CALL FVOXXX(W(1,32  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,6   ),GAU ,AMP(25  ))            
      CALL FVOXXX(W(1,34  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,3   ),W(1,40  ),W(1,6   ),GAU ,AMP(26  ))            
      CALL JIOXXX(W(1,36  ),W(1,2   ),GAD ,ZERO    ,AWIDTH  ,W(1,41  ))    
      CALL FVIXXX(W(1,5   ),W(1,41  ),GAL ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL IOVXXX(W(1,42  ),W(1,4   ),W(1,6   ),GAL ,AMP(27  ))            
      CALL JIOXXX(W(1,36  ),W(1,2   ),GZD ,ZMASS   ,ZWIDTH  ,W(1,43  ))    
      CALL FVIXXX(W(1,5   ),W(1,43  ),GZL ,ZERO    ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,44  ),W(1,4   ),W(1,6   ),GAL ,AMP(28  ))            
      CALL FVOXXX(W(1,4   ),W(1,41  ),GAL ,ZERO    ,ZERO    ,W(1,45  ))    
      CALL IOVXXX(W(1,5   ),W(1,45  ),W(1,6   ),GAL ,AMP(29  ))            
      CALL FVOXXX(W(1,4   ),W(1,43  ),GZL ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL IOVXXX(W(1,5   ),W(1,46  ),W(1,6   ),GAL ,AMP(30  ))            
      CALL IOVXXX(W(1,36  ),W(1,32  ),W(1,6   ),GAD ,AMP(31  ))            
      CALL IOVXXX(W(1,36  ),W(1,34  ),W(1,6   ),GAD ,AMP(32  ))            
      CALL FVIXXX(W(1,3   ),W(1,8   ),GAU ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL JIOXXX(W(1,47  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,48  ))    
      CALL VVVXXX(W(1,48  ),W(1,1   ),W(1,6   ),GWWA ,AMP(33  ))           
      CALL FVIXXX(W(1,3   ),W(1,10  ),GZU ,ZERO    ,ZERO    ,W(1,49  ))    
      CALL JIOXXX(W(1,49  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,50  ))    
      CALL VVVXXX(W(1,50  ),W(1,1   ),W(1,6   ),GWWA ,AMP(34  ))           
      CALL FVIXXX(W(1,47  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,51  ))    
      CALL IOVXXX(W(1,51  ),W(1,2   ),W(1,6   ),GAD ,AMP(35  ))            
      CALL FVIXXX(W(1,49  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,52  ))    
      CALL IOVXXX(W(1,52  ),W(1,2   ),W(1,6   ),GAD ,AMP(36  ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,53  ))    
      CALL FVOXXX(W(1,53  ),W(1,8   ),GAU ,ZERO    ,ZERO    ,W(1,54  ))    
      CALL IOVXXX(W(1,3   ),W(1,54  ),W(1,6   ),GAU ,AMP(37  ))            
      CALL FVOXXX(W(1,53  ),W(1,10  ),GZU ,ZERO    ,ZERO    ,W(1,55  ))    
      CALL IOVXXX(W(1,3   ),W(1,55  ),W(1,6   ),GAU ,AMP(38  ))            
      CALL JIOXXX(W(1,3   ),W(1,53  ),GAU ,ZERO    ,AWIDTH  ,W(1,56  ))    
      CALL FVIXXX(W(1,5   ),W(1,56  ),GAL ,ZERO    ,ZERO    ,W(1,57  ))    
      CALL IOVXXX(W(1,57  ),W(1,4   ),W(1,6   ),GAL ,AMP(39  ))            
      CALL JIOXXX(W(1,3   ),W(1,53  ),GZU ,ZMASS   ,ZWIDTH  ,W(1,58  ))    
      CALL FVIXXX(W(1,5   ),W(1,58  ),GZL ,ZERO    ,ZERO    ,W(1,59  ))    
      CALL IOVXXX(W(1,59  ),W(1,4   ),W(1,6   ),GAL ,AMP(40  ))            
      CALL FVOXXX(W(1,4   ),W(1,56  ),GAL ,ZERO    ,ZERO    ,W(1,60  ))    
      CALL IOVXXX(W(1,5   ),W(1,60  ),W(1,6   ),GAL ,AMP(41  ))            
      CALL FVOXXX(W(1,4   ),W(1,58  ),GZL ,ZERO    ,ZERO    ,W(1,61  ))    
      CALL IOVXXX(W(1,5   ),W(1,61  ),W(1,6   ),GAL ,AMP(42  ))            
      CALL IOVXXX(W(1,47  ),W(1,53  ),W(1,6   ),GAU ,AMP(43  ))            
      CALL IOVXXX(W(1,49  ),W(1,53  ),W(1,6   ),GAU ,AMP(44  ))            
      wza(  mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)+AMP(  34)+AMP(  35)
     &             +AMP(  36)+AMP(  37)+AMP(  38)+AMP(  39)+AMP(  40)
     &             +AMP(  41)+AMP(  42)+AMP(  43)+AMP(  44)

      elseif (procid.eq.WMZhadA .and. Ztodd) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL JIOXXX(W(1,5   ),W(1,4   ),GAD ,ZERO    ,AWIDTH  ,W(1,8   ))    
      CALL JVVXXX(W(1,8   ),W(1,7   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     9   ))                                                          
      CALL VVVXXX(W(1,9   ),W(1,1   ),W(1,6   ),GWWA ,AMP(1   ))           
      CALL JIOXXX(W(1,5   ),W(1,4   ),GZD ,ZMASS   ,ZWIDTH  ,W(1,10  ))    
      CALL JVVXXX(W(1,10  ),W(1,7   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     11  ))                                                          
      CALL VVVXXX(W(1,11  ),W(1,1   ),W(1,6   ),GWWA ,AMP(2   ))           
      CALL JVVXXX(W(1,1   ),W(1,8   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     12  ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,12  ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,13  ),W(1,2   ),W(1,6   ),GAL ,AMP(3   ))            
      CALL JVVXXX(W(1,1   ),W(1,10  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     14  ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,14  ),GWF ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL IOVXXX(W(1,15  ),W(1,2   ),W(1,6   ),GAL ,AMP(4   ))            
      CALL JVVXXX(W(1,7   ),W(1,1   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     16  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,16  ),GAD ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL IOVXXX(W(1,17  ),W(1,4   ),W(1,6   ),GAD ,AMP(5   ))            
      CALL JVVXXX(W(1,7   ),W(1,1   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     18  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,18  ),GZD ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL IOVXXX(W(1,19  ),W(1,4   ),W(1,6   ),GAD ,AMP(6   ))            
      CALL FVOXXX(W(1,4   ),W(1,16  ),GAD ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,5   ),W(1,20  ),W(1,6   ),GAD ,AMP(7   ))            
      CALL FVOXXX(W(1,4   ),W(1,18  ),GZD ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,6   ),GAD ,AMP(8   ))            
      CALL VVVXXX(W(1,7   ),W(1,12  ),W(1,6   ),GWWA ,AMP(9   ))           
      CALL VVVXXX(W(1,7   ),W(1,14  ),W(1,6   ),GWWA ,AMP(10  ))           
      CALL W3W3XX(W(1,7   ),W(1,8   ),W(1,1   ),W(1,6   ),GWWA ,GWWA ,     
     &     AMP(11  ))                                                      
      CALL W3W3XX(W(1,7   ),W(1,10  ),W(1,1   ),W(1,6   ),GWWZ ,GWWA ,     
     &     AMP(12  ))                                                      
      CALL FVIXXX(W(1,5   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL JIOXXX(W(1,22  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,23  ))    
      CALL VVVXXX(W(1,23  ),W(1,1   ),W(1,6   ),GWWA ,AMP(13  ))           
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL JIOXXX(W(1,5   ),W(1,24  ),GWF ,WMASS   ,WWIDTH  ,W(1,25  ))    
      CALL FVIXXX(W(1,3   ),W(1,25  ),GWF ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,26  ),W(1,2   ),W(1,6   ),GAL ,AMP(14  ))            
      CALL FVIXXX(W(1,22  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,27  ),W(1,4   ),W(1,6   ),GAD ,AMP(15  ))            
      CALL FVOXXX(W(1,24  ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,5   ),W(1,28  ),W(1,6   ),GAD ,AMP(16  ))            
      CALL IOVXXX(W(1,22  ),W(1,24  ),W(1,6   ),GAU ,AMP(17  ))            
      CALL VVVXXX(W(1,7   ),W(1,25  ),W(1,6   ),GWWA ,AMP(18  ))           
      CALL FVOXXX(W(1,2   ),W(1,8   ),GAL ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL JIOXXX(W(1,3   ),W(1,29  ),GWF ,WMASS   ,WWIDTH  ,W(1,30  ))    
      CALL VVVXXX(W(1,30  ),W(1,1   ),W(1,6   ),GWWA ,AMP(19  ))           
      CALL FVOXXX(W(1,2   ),W(1,10  ),GZL ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL JIOXXX(W(1,3   ),W(1,31  ),GWF ,WMASS   ,WWIDTH  ,W(1,32  ))    
      CALL VVVXXX(W(1,32  ),W(1,1   ),W(1,6   ),GWWA ,AMP(20  ))           
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,33  ))    
      CALL FVIXXX(W(1,33  ),W(1,8   ),GAL ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,34  ),W(1,2   ),W(1,6   ),GAL ,AMP(21  ))            
      CALL FVIXXX(W(1,33  ),W(1,10  ),GZL ,ZERO    ,ZERO    ,W(1,35  ))    
      CALL IOVXXX(W(1,35  ),W(1,2   ),W(1,6   ),GAL ,AMP(22  ))            
      CALL JIOXXX(W(1,33  ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,36  ))    
      CALL FVIXXX(W(1,5   ),W(1,36  ),GAD ,ZERO    ,ZERO    ,W(1,37  ))    
      CALL IOVXXX(W(1,37  ),W(1,4   ),W(1,6   ),GAD ,AMP(23  ))            
      CALL JIOXXX(W(1,33  ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,38  ))    
      CALL FVIXXX(W(1,5   ),W(1,38  ),GZD ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL IOVXXX(W(1,39  ),W(1,4   ),W(1,6   ),GAD ,AMP(24  ))            
      CALL FVOXXX(W(1,4   ),W(1,36  ),GAD ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,5   ),W(1,40  ),W(1,6   ),GAD ,AMP(25  ))            
      CALL FVOXXX(W(1,4   ),W(1,38  ),GZD ,ZERO    ,ZERO    ,W(1,41  ))    
      CALL IOVXXX(W(1,5   ),W(1,41  ),W(1,6   ),GAD ,AMP(26  ))            
      CALL IOVXXX(W(1,33  ),W(1,29  ),W(1,6   ),GAL ,AMP(27  ))            
      CALL IOVXXX(W(1,33  ),W(1,31  ),W(1,6   ),GAL ,AMP(28  ))            
      CALL FVIXXX(W(1,3   ),W(1,10  ),GZN ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL JIOXXX(W(1,42  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,43  ))    
      CALL VVVXXX(W(1,43  ),W(1,1   ),W(1,6   ),GWWA ,AMP(29  ))           
      CALL FVIXXX(W(1,42  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,44  ),W(1,2   ),W(1,6   ),GAL ,AMP(30  ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,45  ))    
      CALL JIOXXX(W(1,3   ),W(1,45  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,46  ))    
      CALL FVIXXX(W(1,5   ),W(1,46  ),GZD ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,47  ),W(1,4   ),W(1,6   ),GAD ,AMP(31  ))            
      CALL FVOXXX(W(1,4   ),W(1,46  ),GZD ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL IOVXXX(W(1,5   ),W(1,48  ),W(1,6   ),GAD ,AMP(32  ))            
       wza(  mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)

      elseif (procid.eq.WMZhadA .and. Ztouu) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))    
      CALL FVOXXX(W(1,4   ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL JIOXXX(W(1,5   ),W(1,8   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL VVVXXX(W(1,9   ),W(1,1   ),W(1,6   ),GWWA ,AMP(1   ))           
      CALL FVIXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL FVIXXX(W(1,3   ),W(1,11  ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL IOVXXX(W(1,12  ),W(1,2   ),W(1,6   ),GAL ,AMP(2   ))            
      CALL FVIXXX(W(1,10  ),W(1,7   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,13  ),W(1,4   ),W(1,6   ),GAU ,AMP(3   ))            
      CALL FVOXXX(W(1,8   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,6   ),GAU ,AMP(4   ))            
      CALL VVVXXX(W(1,7   ),W(1,11  ),W(1,6   ),GWWA ,AMP(5   ))           
      CALL IOVXXX(W(1,10  ),W(1,8   ),W(1,6   ),GAD ,AMP(6   ))            
      CALL JIOXXX(W(1,5   ),W(1,4   ),GAU ,ZERO    ,AWIDTH  ,W(1,15  ))    
      CALL JVVXXX(W(1,15  ),W(1,7   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     16  ))                                                          
      CALL VVVXXX(W(1,16  ),W(1,1   ),W(1,6   ),GWWA ,AMP(7   ))           
      CALL JIOXXX(W(1,5   ),W(1,4   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,17  ))    
      CALL JVVXXX(W(1,17  ),W(1,7   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     18  ))                                                          
      CALL VVVXXX(W(1,18  ),W(1,1   ),W(1,6   ),GWWA ,AMP(8   ))           
      CALL JVVXXX(W(1,1   ),W(1,15  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     19  ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,19  ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,20  ),W(1,2   ),W(1,6   ),GAL ,AMP(9   ))            
      CALL JVVXXX(W(1,1   ),W(1,17  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     21  ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,21  ),GWF ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL IOVXXX(W(1,22  ),W(1,2   ),W(1,6   ),GAL ,AMP(10  ))            
      CALL JVVXXX(W(1,7   ),W(1,1   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     23  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,23  ),GAU ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,24  ),W(1,4   ),W(1,6   ),GAU ,AMP(11  ))            
      CALL JVVXXX(W(1,7   ),W(1,1   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     25  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,25  ),GZU ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,26  ),W(1,4   ),W(1,6   ),GAU ,AMP(12  ))            
      CALL FVOXXX(W(1,4   ),W(1,23  ),GAU ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,5   ),W(1,27  ),W(1,6   ),GAU ,AMP(13  ))            
      CALL FVOXXX(W(1,4   ),W(1,25  ),GZU ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,5   ),W(1,28  ),W(1,6   ),GAU ,AMP(14  ))            
      CALL VVVXXX(W(1,7   ),W(1,19  ),W(1,6   ),GWWA ,AMP(15  ))           
      CALL VVVXXX(W(1,7   ),W(1,21  ),W(1,6   ),GWWA ,AMP(16  ))           
      CALL W3W3XX(W(1,7   ),W(1,15  ),W(1,1   ),W(1,6   ),GWWA ,GWWA ,     
     &     AMP(17  ))                                                      
      CALL W3W3XX(W(1,7   ),W(1,17  ),W(1,1   ),W(1,6   ),GWWZ ,GWWA ,     
     &     AMP(18  ))                                                      
      CALL FVOXXX(W(1,2   ),W(1,15  ),GAL ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL JIOXXX(W(1,3   ),W(1,29  ),GWF ,WMASS   ,WWIDTH  ,W(1,30  ))    
      CALL VVVXXX(W(1,30  ),W(1,1   ),W(1,6   ),GWWA ,AMP(19  ))           
      CALL FVOXXX(W(1,2   ),W(1,17  ),GZL ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL JIOXXX(W(1,3   ),W(1,31  ),GWF ,WMASS   ,WWIDTH  ,W(1,32  ))    
      CALL VVVXXX(W(1,32  ),W(1,1   ),W(1,6   ),GWWA ,AMP(20  ))           
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,33  ))    
      CALL FVIXXX(W(1,33  ),W(1,15  ),GAL ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,34  ),W(1,2   ),W(1,6   ),GAL ,AMP(21  ))            
      CALL FVIXXX(W(1,33  ),W(1,17  ),GZL ,ZERO    ,ZERO    ,W(1,35  ))    
      CALL IOVXXX(W(1,35  ),W(1,2   ),W(1,6   ),GAL ,AMP(22  ))            
      CALL JIOXXX(W(1,33  ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,36  ))    
      CALL FVIXXX(W(1,5   ),W(1,36  ),GAU ,ZERO    ,ZERO    ,W(1,37  ))    
      CALL IOVXXX(W(1,37  ),W(1,4   ),W(1,6   ),GAU ,AMP(23  ))            
      CALL JIOXXX(W(1,33  ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,38  ))    
      CALL FVIXXX(W(1,5   ),W(1,38  ),GZU ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL IOVXXX(W(1,39  ),W(1,4   ),W(1,6   ),GAU ,AMP(24  ))            
      CALL FVOXXX(W(1,4   ),W(1,36  ),GAU ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,5   ),W(1,40  ),W(1,6   ),GAU ,AMP(25  ))            
      CALL FVOXXX(W(1,4   ),W(1,38  ),GZU ,ZERO    ,ZERO    ,W(1,41  ))    
      CALL IOVXXX(W(1,5   ),W(1,41  ),W(1,6   ),GAU ,AMP(26  ))            
      CALL IOVXXX(W(1,33  ),W(1,29  ),W(1,6   ),GAL ,AMP(27  ))            
      CALL IOVXXX(W(1,33  ),W(1,31  ),W(1,6   ),GAL ,AMP(28  ))            
      CALL FVIXXX(W(1,3   ),W(1,17  ),GZN ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL JIOXXX(W(1,42  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,43  ))    
      CALL VVVXXX(W(1,43  ),W(1,1   ),W(1,6   ),GWWA ,AMP(29  ))           
      CALL FVIXXX(W(1,42  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,44  ),W(1,2   ),W(1,6   ),GAL ,AMP(30  ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,45  ))    
      CALL JIOXXX(W(1,3   ),W(1,45  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,46  ))    
      CALL FVIXXX(W(1,5   ),W(1,46  ),GZU ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,47  ),W(1,4   ),W(1,6   ),GAU ,AMP(31  ))            
      CALL FVOXXX(W(1,4   ),W(1,46  ),GZU ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL IOVXXX(W(1,5   ),W(1,48  ),W(1,6   ),GAU ,AMP(32  ))            
      wza(  mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)

      endif

      enddo
      wza(4) = dcmplx(q(0),q(3))
      wza(5) = dcmplx(q(1),q(2))
c
      END


c ------------------------------------------------------------

      subroutine tribosWPTOWA_mg2_had(v,N,h,wpa,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:4)
      complex*16 wpa(0:5)
      integer lsign(2:4,4),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,4) / -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,4) / -1, -1, +1/  !h=2
      data (lsign(ll,3),ll=2,4) / -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,4) / -1, -1, -1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,5)
      enddo

      call tribosWPTOWA1_mg2_had(P,N,lsign(2,h),wpa(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosWPTOWA1_mg2_had(P,N,lsign,wpatens,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : w+ -> ve e+ a  
C  
C Crossing   1 is w+ ve~ -> e+ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  3) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  7) 
      DOUBLE PRECISION ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:4), Q(0:3)
      INTEGER N
      COMPLEX*16 wpatens(0:5)
      INTEGER lsign(2:4)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I,J, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/process.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wa(i,N)
            w(i,5)  = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)
      enddo

      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))

      if (procid.eq.WPhadZA) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,5   ))    
      CALL VVVXXX(W(1,1   ),W(1,5   ),W(1,4   ),GWWA ,AMP(1   ))           
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,2   ),W(1,4   ),GAU ,AMP(2   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,3   ),W(1,7   ),W(1,4   ),GAD ,AMP(3   ))            
      wpatens(mu) = +AMP(   1)+AMP(   2)+AMP(   3)

      else
      
      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,5   ))    
      CALL VVVXXX(W(1,1   ),W(1,5   ),W(1,4   ),GWWA ,AMP(1   ))           
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,3   ),W(1,6   ),W(1,4   ),GAL ,AMP(2   ))            
      wpatens(mu) = +AMP(   1)+AMP(   2)

      endif


      enddo

      wpatens(4) = dcmplx(q(0),q(3))
      wpatens(5) = dcmplx(q(1),q(2))
c
      END

c ------------------------------------------------------------

      subroutine tribosWMTOWA_mg2_had(v,N,h,wma,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:4)
      complex*16 wma(0:5)
      integer lsign(2:4,4),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,4) / -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,4) / -1, -1, +1/  !h=2
      data (lsign(ll,3),ll=2,4) / -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,4) / -1, -1, -1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,5)
      enddo

      call tribosWMTOWA1_mg2_had(P,N,lsign(2,h),wma(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosWMTOWA1_mg2_had(P,N,lsign,wmatens,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : w- -> e- ve~ a  
C  
C Crossing   1 is w- e+ -> ve~ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  3) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  7) 
      DOUBLE PRECISION ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:4), Q(0:3)
      INTEGER N
      COMPLEX*16 wmatens(0:5)
      INTEGER lsign(2:4)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I,J, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/process.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wa(i,N)
            w(i,5)  = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)
      enddo

      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))

      if (procid.eq.WMhadZA) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,5   ))    
      CALL VVVXXX(W(1,5   ),W(1,1   ),W(1,4   ),GWWA ,AMP(1   ))           
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,2   ),W(1,4   ),GAD ,AMP(2   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,3   ),W(1,7   ),W(1,4   ),GAU ,AMP(3   ))            
      wmatens(mu) = +AMP(   1)+AMP(   2)+AMP(   3)

      else

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,5   ))    
      CALL VVVXXX(W(1,5   ),W(1,1   ),W(1,4   ),GWWA ,AMP(1   ))           
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,2   ),W(1,4   ),GAL ,AMP(2   ))            
      wmatens(mu) = AMP(   1)+AMP(   2)

      endif

      enddo

      wmatens(4) = dcmplx(q(0),q(3))
      wmatens(5) = dcmplx(q(1),q(2))
c
      END


c
c in this file leptonic tensors needed for qq -> WZA, WZA -> 4lA 
c are computed for specific helicities (h)
c
c ------------------------------------------------------------
c ------------------------------------------------------------

      SUBROUTINE tribosWPTOWZ_mg2_had(v,N,h,wpz,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:5)
      
      complex*16 wpz(0:5)
      integer lsign(2:5,5),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,5) / -1, -1, -1, -1/  !h=1
      data (lsign(ll,2),ll=2,5) / -1, -1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,5) / -1, -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,5) / -1, -1, +1, +1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
      enddo

      call tribosWPTOWZ1_mg2_had(P,N,lsign(2,h),wpz,NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosWPTOWZ1_mg2_had(P,N,lsign,wpztens,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ ->  ve e+ mu- mu+   
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   7) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  15) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:5), Q(0:3)
      INTEGER N
      COMPLEX*16 wpztens(0:5)
      INTEGER lsign(2:5)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/process.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"

  
C GLOBAL VARIABLES
  
#include "VBFNLO/utilities/coupl.inc"   

      logical lswitch
      parameter (lswitch=.true.)
                       
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wmu(i,N)
            w(i,5)  = wmp(i,N)
            w(i,6)  = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))

      if (procid.eq.WPhadZA) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GWF ,AMP(1   ))            
      CALL JVVXXX(W(1,1   ),W(1,6   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     8   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GAL ,AMP(2   ))            
      CALL JVVXXX(W(1,1   ),W(1,6   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     9   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,9   ),GZL ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GAU ,ZERO    ,AWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GAL ,AMP(4   ))            
      CALL JIOXXX(W(1,10  ),W(1,2   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GZL ,AMP(5   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GAD ,ZERO    ,AWIDTH  ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,14  ),GAL ,AMP(6   ))            
      CALL JIOXXX(W(1,3   ),W(1,13  ),GZD ,ZMASS   ,ZWIDTH  ,W(1,15  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,15  ),GZL ,AMP(7   ))            
      wpztens(mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)

      elseif (procid.eq.WPZhadA .and. Ztodd) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GWF ,AMP(1   ))            
      CALL JVVXXX(W(1,1   ),W(1,6   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     8   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GAD ,AMP(2   ))            
      CALL JVVXXX(W(1,1   ),W(1,6   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     9   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,9   ),GZD ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GZD ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GAL ,ZERO    ,AWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GAD ,AMP(5   ))            
      CALL JIOXXX(W(1,3   ),W(1,12  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,14  ),GZD ,AMP(6   ))            
      wpztens(mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)

      elseif (procid.eq.WPZhadA .and. Ztouu) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
      CALL JVVXXX(W(1,1   ),W(1,6   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     7   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GAU ,AMP(1   ))            
      CALL JVVXXX(W(1,1   ),W(1,6   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     8   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GZU ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GZU ,AMP(4   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GAL ,ZERO    ,AWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GAU ,AMP(5   ))            
      CALL JIOXXX(W(1,3   ),W(1,12  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,14  ),GZU ,AMP(6   ))            
      wpztens(mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)

      endif


      enddo
      wpztens(4) = dcmplx(q(0),q(3))
      wpztens(5) = dcmplx(q(1),q(2))
c
      return
      END

c ------------------------------------------------------------

      SUBROUTINE tribosWMTOWZ_mg2_had(v,N,h,wmz,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:5)
      
      complex*16 wmz(0:5)
      integer lsign(2:5,5),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,5) / -1, -1, -1, -1/  !h=1
      data (lsign(ll,2),ll=2,5) / -1, -1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,5) / -1, -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,5) / -1, -1, +1, +1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,1)
         P(mu,3) = v(mu,2)
         P(mu,4) = v(mu,3)
         P(mu,5) = v(mu,4)
      enddo

      call tribosWMTOWZ1_mg2_had(P,N,lsign(2,h),wmz,NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosWMTOWZ1_mg2_had(P,N,lsign,wmztens,NW)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- ->  ve~ e- mu- mu+   
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   7) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  15) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:5), Q(0:3)
      INTEGER N
      COMPLEX*16 wmztens(0:5)
      INTEGER lsign(2:5)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)

c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/process.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"

  
C GLOBAL VARIABLES
  
#include "VBFNLO/utilities/coupl.inc"   

      logical lswitch
      parameter (lswitch=.true.)
                       
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wve(i,N)
            w(i,3)  = wep(i,N)
            w(i,4)  = wmu(i,N)
            w(i,5)  = wmp(i,N)
            w(i,6)  = wp(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),WMASS ,WWIDTH, MU,-1,W(1,1   ))

      if (procid.eq.WMhadZA) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     7   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GAL ,AMP(1   ))            
      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     8   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GZL ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GAD ,ZERO    ,AWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GAL ,AMP(4   ))            
      CALL JIOXXX(W(1,10  ),W(1,2   ),GZD ,ZMASS   ,ZWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GZL ,AMP(5   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GAU ,ZERO    ,AWIDTH  ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,14  ),GAL ,AMP(6   ))            
      CALL JIOXXX(W(1,3   ),W(1,13  ),GZU ,ZMASS   ,ZWIDTH  ,W(1,15  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,15  ),GZL ,AMP(7   ))            
      wmztens(mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)

      elseif (procid.eq.WMZhadA .and. Ztodd) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     7   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GAD ,AMP(1   ))            
      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     8   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GZD ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GAD ,AMP(4   ))            
      CALL JIOXXX(W(1,10  ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GZD ,AMP(5   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,14  ),GZD ,AMP(6   ))            
      wmztens(mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)

      elseif (procid.eq.WMZhadA .and. Ztouu) then

      CALL JIOXXX(W(1,3   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GWF ,AMP(1   ))            
      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     8   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GAU ,AMP(2   ))            
      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     9   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,9   ),GZU ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,2   ),GAL ,ZERO    ,AWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GAU ,AMP(4   ))            
      CALL JIOXXX(W(1,10  ),W(1,2   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,12  ),GZU ,AMP(5   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,14  ),GZU ,AMP(6   ))            
      wmztens(mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)

      endif

      enddo
      wmztens(4) = dcmplx(q(0),q(3))
      wmztens(5) = dcmplx(q(1),q(2))
c
      return
      END


      subroutine tribosATOZA_mg2_had(v,N,h,za,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:4)
      complex*16 za(0:5)
      integer lsign(2:4,4),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,4) / -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,4) / +1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,4) / -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,4) / +1, +1, -1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,3)
         P(mu,3) = v(mu,4)
         P(mu,4) = v(mu,5)
      enddo

      call tribosATOZA1_mg2_had(P,N,lsign(2,h),za(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosATOZA1_mg2_had(P,N,lsign,zatens,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : a -> mu- mu+ a  
C  
C Crossing   1 is a mu+ -> mu+ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  2) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  6) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:4), Q(0:3)
      INTEGER N
      COMPLEX*16 zatens(0:5)
      INTEGER lsign(2:4)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I,J, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/process.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wmu(i,N)
            w(i,3)  = wmp(i,N)
            w(i,4)  = wa(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)
      enddo

      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),ZERO ,ZERO, MU,-1,W(1,1   ))


      if ((procid.eq.WPZhadA .or. procid.eq.WMZhadA) .and. Ztodd) then

      CALL FVIXXX(W(1,3   ),W(1,1   ),GAD ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,2   ),W(1,4   ),GAD ,AMP(1   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GAD ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,3   ),W(1,6   ),W(1,4   ),GAD ,AMP(2   ))            
      zatens(mu) = AMP(   1)+AMP(   2)

      elseif ((procid.eq.WPZhadA .or. procid.eq.WMZhadA) .and. Ztouu) then

      CALL FVIXXX(W(1,3   ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,2   ),W(1,4   ),GAU ,AMP(1   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,3   ),W(1,6   ),W(1,4   ),GAU ,AMP(2   ))            
      zatens(mu) = AMP(   1)+AMP(   2)

      else

      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,2   ),W(1,4   ),GAL ,AMP(1   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,3   ),W(1,6   ),W(1,4   ),GAL ,AMP(2   ))            
      zatens(mu) = AMP(   1)+AMP(   2)

      endif


      enddo

      zatens(4) = dcmplx(q(0),q(3))
      zatens(5) = dcmplx(q(1),q(2))
c
      END

c ------------------------------------------------------------

      subroutine tribosZTOZA_mg2_had(v,N,h,za,NW)

      IMPLICIT NONE

      DOUBLE PRECISION v(0:3,6)
      DOUBLE PRECISION P(0:3,2:4)
      complex*16 za(0:5)
      integer lsign(2:4,4),ll,mu,h,N
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams

      ! possible lepton helicities:
      data (lsign(ll,1),ll=2,4) / -1, -1, +1/  !h=1
      data (lsign(ll,2),ll=2,4) / +1, +1, +1/  !h=2
      data (lsign(ll,3),ll=2,4) / -1, -1, -1/  !h=3
      data (lsign(ll,4),ll=2,4) / +1, +1, -1/  !h=4

      do mu = 0,3
         P(mu,2) = v(mu,3)
         P(mu,3) = v(mu,4)
         P(mu,4) = v(mu,5)
      enddo

      call tribosZTOZA1_mg2_had(P,N,lsign(2,h),za(0),NW)

      ! helicity combi nr.h is selected

      end

c ------------------------------------------------------------

      SUBROUTINE tribosZTOZA1_mg2_had(P,N,lsign,zatens,NW)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : z -> mu- mu+ a  
C  
C Crossing   1 is z mu+ -> mu+ a  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  2) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  6) 
      DOUBLE PRECISION     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      DOUBLE PRECISION P(0:3,2:4), Q(0:3)
      INTEGER N
      COMPLEX*16 zatens(0:5)
      INTEGER lsign(2:4)
      integer NW ! = 0: all diagrams, = 1: no non resonant diagrams
C
C LOCAL VARIABLES
C
      INTEGER I,J, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors and W+-, Z/A polarization vectors
#include "tensor.inc"
#include "VBFNLO/utilities/process.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"

      logical lswitch
      parameter (lswitch=.true.)

C
C GLOBAL VARIABLES
C
#include "VBFNLO/utilities/coupl.inc"
C
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2)  = wmu(i,N)
            w(i,3)  = wmp(i,N)
            w(i,4)  = wa(i,N)
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)
      enddo

      do mu = 0,3
      CALL TRIBOSVCARTX(Q(0),ZMASS ,ZWIDTH, MU,-1,W(1,1   ))


      if ((procid.eq.WPZhadA .or. procid.eq.WMZhadA) .and. Ztodd) then

      CALL FVIXXX(W(1,3   ),W(1,1   ),GZD ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,2   ),W(1,4   ),GAD ,AMP(1   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZD ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,3   ),W(1,6   ),W(1,4   ),GAD ,AMP(2   ))            
      zatens(mu) = AMP(   1)+AMP(   2)

      elseif ((procid.eq.WPZhadA .or. procid.eq.WMZhadA) .and. Ztouu) then

      CALL FVIXXX(W(1,3   ),W(1,1   ),GZU ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,2   ),W(1,4   ),GAU ,AMP(1   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZU ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,3   ),W(1,6   ),W(1,4   ),GAU ,AMP(2   ))            
      zatens(mu) = AMP(   1)+AMP(   2)

      else

      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,2   ),W(1,4   ),GAL ,AMP(1   ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,3   ),W(1,6   ),W(1,4   ),GAL ,AMP(2   ))            
      zatens(mu) = AMP(   1)+AMP(   2)

      endif

      enddo

      zatens(4) = dcmplx(q(0),q(3))
      zatens(5) = dcmplx(q(1),q(2))
c
      END

