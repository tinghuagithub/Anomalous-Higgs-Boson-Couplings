       
      subroutine WPPTOWPP(q1,q2,p,ww)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ w+ -> e+ ve mu+ vm  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  

      INTEGER NGRAPHS
      PARAMETER (NGRAPHS=  35) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  38) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 ww(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(3:6), ihel
      DATA (NHEL(IHEL),IHEL=3,6) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
c
C ----------
C BEGIN CODE
C ----------
c read in lepton an W states from common block:
         do i=1,6
            w(i,3) = wel(i)
            w(i,4) = wve(i)
            w(i,5) = wmu(i)
            w(i,6) = wvu(i)
         enddo

c	print*,'q1,q2 in ww = ',q1(0),q2(0)

      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),wMASS ,wwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),wMASS ,wwidth, NU,-1,W(1,2   )) 
               
      CALL FVIXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    
      CALL FVIXXX(W(1,5   ),W(1,8   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GWF ,AMP(1   ))            
      CALL JVVXXX(W(1,8   ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     10  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,10  ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,8   ),GZN ,AMP(3   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL FVOXXX(W(1,6   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GAL ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,13  ),W(1,14  ),GAL ,AMP(4   ))            
      CALL JIOXXX(W(1,3   ),W(1,12  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,15  ))    
      CALL IOVXXX(W(1,5   ),W(1,13  ),W(1,15  ),GZL ,AMP(5   ))            
      CALL JIOXXX(W(1,5   ),W(1,6   ),GWF ,WMASS   ,WWIDTH  ,W(1,16  ))    
      CALL VVVXXX(W(1,2   ),W(1,16  ),W(1,14  ),GWWA ,AMP(6   ))           
      CALL VVVXXX(W(1,2   ),W(1,16  ),W(1,15  ),GWWZ ,AMP(7   ))           
      CALL FVIXXX(W(1,5   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,17  ),W(1,6   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,18  ))    
      CALL IOVXXX(W(1,3   ),W(1,12  ),W(1,18  ),GZL ,AMP(8   ))            
      CALL JIOXXX(W(1,7   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,19  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,19  ),GWF ,AMP(9   ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL FVOXXX(W(1,6   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL JIOXXX(W(1,3   ),W(1,20  ),GAL ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,22  ),GAL ,AMP(10  ))            
      CALL JIOXXX(W(1,3   ),W(1,20  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,23  ))    
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,23  ),GZL ,AMP(11  ))            
      CALL VVVXXX(W(1,1   ),W(1,16  ),W(1,22  ),GWWA ,AMP(12  ))           
      CALL VVVXXX(W(1,1   ),W(1,16  ),W(1,23  ),GWWZ ,AMP(13  ))           
      CALL JIOXXX(W(1,11  ),W(1,6   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,24  ))    
      CALL IOVXXX(W(1,3   ),W(1,20  ),W(1,24  ),GZL ,AMP(14  ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL JIOXXX(W(1,25  ),W(1,4   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,26  ))    
      CALL FVIXXX(W(1,5   ),W(1,26  ),GZL ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,27  ),W(1,6   ),W(1,2   ),GWF ,AMP(15  ))            
      CALL JVVXXX(W(1,26  ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     28  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,28  ),GWF ,AMP(16  ))            
      CALL IOVXXX(W(1,17  ),W(1,6   ),W(1,26  ),GZN ,AMP(17  ))            
      CALL JIOXXX(W(1,25  ),W(1,20  ),GWF ,WMASS   ,WWIDTH  ,W(1,29  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,29  ),GWF ,AMP(18  ))            
      CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,30  ))    
      CALL JVVXXX(W(1,2   ),W(1,30  ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     31  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,31  ),GAL ,AMP(19  ))            
      CALL JVVXXX(W(1,2   ),W(1,30  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     32  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,32  ),GZL ,AMP(20  ))            
      CALL IOVXXX(W(1,11  ),W(1,13  ),W(1,30  ),GWF ,AMP(21  ))            
      CALL VVVXXX(W(1,1   ),W(1,16  ),W(1,31  ),GWWA ,AMP(22  ))           
      CALL VVVXXX(W(1,1   ),W(1,16  ),W(1,32  ),GWWZ ,AMP(23  ))           
      CALL HVVXXX(W(1,2   ),W(1,30  ),GWWH ,HMASS   ,HWIDTH  ,W(1,         
     &     33  ))                                                          
      CALL VVSXXX(W(1,1   ),W(1,16  ),W(1,33  ),GWWH ,AMP(24  ))           
      CALL VVVXXX(W(1,2   ),W(1,30  ),W(1,24  ),GWWZ ,AMP(25  ))           
      CALL IOVXXX(W(1,17  ),W(1,21  ),W(1,30  ),GWF ,AMP(26  ))            
      CALL JVVXXX(W(1,1   ),W(1,30  ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     34  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,13  ),W(1,34  ),GAL ,AMP(27  ))            
      CALL JVVXXX(W(1,1   ),W(1,30  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     35  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,13  ),W(1,35  ),GZL ,AMP(28  ))            
      CALL VVVXXX(W(1,2   ),W(1,16  ),W(1,34  ),GWWA ,AMP(29  ))           
      CALL VVVXXX(W(1,2   ),W(1,16  ),W(1,35  ),GWWZ ,AMP(30  ))           
      CALL HVVXXX(W(1,1   ),W(1,30  ),GWWH ,HMASS   ,HWIDTH  ,W(1,         
     &     36  ))                                                          
      CALL VVSXXX(W(1,2   ),W(1,16  ),W(1,36  ),GWWH ,AMP(31  ))           
      CALL VVVXXX(W(1,1   ),W(1,30  ),W(1,18  ),GWWZ ,AMP(32  ))           
      CALL WWWWXX(W(1,1   ),W(1,30  ),W(1,2   ),W(1,16  ),GWWZ ,GWWA ,     
     &     AMP(33  ))                                                      
c second Higgs
      CALL HVVXXX(W(1,2   ),W(1,30  ),GWWH2,H2MASS  ,H2WIDTH ,W(1,         
     &     37  ))                                                          
      CALL VVSXXX(W(1,1   ),W(1,16  ),W(1,37  ),GWWH2,AMP(34  ))           
      CALL HVVXXX(W(1,1   ),W(1,30  ),GWWH2,H2MASS  ,H2WIDTH ,W(1,         
     &     38  ))                                                          
      CALL VVSXXX(W(1,2   ),W(1,16  ),W(1,38  ),GWWH2,AMP(35  ))           
      ww(mu,nu)  = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)
      if (with_secondhiggs) then
        ww(mu,nu)  = ww(mu,nu) +AMP(  34)+AMP(  35)
      endif
     
c test only (Higgs graphs):     
c      ww(mu,nu)  = +AMP(24)+AMP(31)
     
      ENDDO
      enddo
      
      END
      
c ************************************************************************       
c ************************************************************************       

      subroutine WMMTOWMM(q1,q2,p,ww)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- w- -> e- ve~ mu- vm~    
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  

      INTEGER NGRAPHS
      PARAMETER (NGRAPHS=  35) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  38) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 ww(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(3:6), ihel
      DATA (NHEL(IHEL),IHEL=3,6) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"
#include "tensorz.inc"

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
c
C ----------
C BEGIN CODE
C ----------
c read in lepton an W states from common block:
         do i=1,6
            w(i,3) = wel(i)
            w(i,4) = wve(i)
            w(i,5) = wmu(i)
            w(i,6) = wvu(i)
         enddo

      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),wMASS ,wwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),wMASS ,wwidth, NU,-1,W(1,2   )) 
            
      CALL FVOXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,4   ),W(1,7   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    
      CALL FVOXXX(W(1,5   ),W(1,8   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,6   ),W(1,9   ),W(1,1   ),GWF ,AMP(1   ))            
      CALL JVVXXX(W(1,1   ),W(1,8   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     10  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,10  ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,8   ),GZN ,AMP(3   ))            
      CALL FVIXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL FVIXXX(W(1,6   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,12  ),W(1,3   ),GAL ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,13  ),W(1,5   ),W(1,14  ),GAL ,AMP(4   ))            
      CALL JIOXXX(W(1,12  ),W(1,3   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,15  ))    
      CALL IOVXXX(W(1,13  ),W(1,5   ),W(1,15  ),GZL ,AMP(5   ))            
      CALL JIOXXX(W(1,6   ),W(1,5   ),GWF ,WMASS   ,WWIDTH  ,W(1,16  ))    
      CALL VVVXXX(W(1,16  ),W(1,2   ),W(1,14  ),GWWA ,AMP(6   ))           
      CALL VVVXXX(W(1,16  ),W(1,2   ),W(1,15  ),GWWZ ,AMP(7   ))           
      CALL FVOXXX(W(1,5   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,6   ),W(1,17  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,18  ))    
      CALL IOVXXX(W(1,12  ),W(1,3   ),W(1,18  ),GZL ,AMP(8   ))            
      CALL JIOXXX(W(1,12  ),W(1,7   ),GWF ,WMASS   ,WWIDTH  ,W(1,19  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,19  ),GWF ,AMP(9   ))            
      CALL FVIXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL FVIXXX(W(1,6   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL JIOXXX(W(1,20  ),W(1,3   ),GAL ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL IOVXXX(W(1,21  ),W(1,5   ),W(1,22  ),GAL ,AMP(10  ))            
      CALL JIOXXX(W(1,20  ),W(1,3   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,23  ))    
      CALL IOVXXX(W(1,21  ),W(1,5   ),W(1,23  ),GZL ,AMP(11  ))            
      CALL VVVXXX(W(1,16  ),W(1,1   ),W(1,22  ),GWWA ,AMP(12  ))           
      CALL VVVXXX(W(1,16  ),W(1,1   ),W(1,23  ),GWWZ ,AMP(13  ))           
      CALL JIOXXX(W(1,6   ),W(1,11  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,24  ))    
      CALL IOVXXX(W(1,20  ),W(1,3   ),W(1,24  ),GZL ,AMP(14  ))            
      CALL FVOXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL JIOXXX(W(1,4   ),W(1,25  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,26  ))    
      CALL FVOXXX(W(1,5   ),W(1,26  ),GZL ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,6   ),W(1,27  ),W(1,2   ),GWF ,AMP(15  ))            
      CALL JVVXXX(W(1,2   ),W(1,26  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     28  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,28  ),GWF ,AMP(16  ))            
      CALL IOVXXX(W(1,6   ),W(1,17  ),W(1,26  ),GZN ,AMP(17  ))            
      CALL JIOXXX(W(1,20  ),W(1,25  ),GWF ,WMASS   ,WWIDTH  ,W(1,29  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,29  ),GWF ,AMP(18  ))            
      CALL JIOXXX(W(1,4   ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,30  ))    
      CALL JVVXXX(W(1,30  ),W(1,2   ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     31  ))                                                          
      CALL IOVXXX(W(1,21  ),W(1,5   ),W(1,31  ),GAL ,AMP(19  ))            
      CALL JVVXXX(W(1,30  ),W(1,2   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     32  ))                                                          
      CALL IOVXXX(W(1,21  ),W(1,5   ),W(1,32  ),GZL ,AMP(20  ))            
      CALL IOVXXX(W(1,13  ),W(1,11  ),W(1,30  ),GWF ,AMP(21  ))            
      CALL VVVXXX(W(1,16  ),W(1,1   ),W(1,31  ),GWWA ,AMP(22  ))           
      CALL VVVXXX(W(1,16  ),W(1,1   ),W(1,32  ),GWWZ ,AMP(23  ))           
      CALL HVVXXX(W(1,30  ),W(1,2   ),GWWH ,HMASS   ,HWIDTH  ,W(1,         
     &     33  ))                                                          
      CALL VVSXXX(W(1,16  ),W(1,1   ),W(1,33  ),GWWH ,AMP(24  ))           
      CALL VVVXXX(W(1,30  ),W(1,2   ),W(1,24  ),GWWZ ,AMP(25  ))           
      CALL IOVXXX(W(1,21  ),W(1,17  ),W(1,30  ),GWF ,AMP(26  ))            
      CALL JVVXXX(W(1,30  ),W(1,1   ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     34  ))                                                          
      CALL IOVXXX(W(1,13  ),W(1,5   ),W(1,34  ),GAL ,AMP(27  ))            
      CALL JVVXXX(W(1,30  ),W(1,1   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     35  ))                                                          
      CALL IOVXXX(W(1,13  ),W(1,5   ),W(1,35  ),GZL ,AMP(28  ))            
      CALL VVVXXX(W(1,16  ),W(1,2   ),W(1,34  ),GWWA ,AMP(29  ))           
      CALL VVVXXX(W(1,16  ),W(1,2   ),W(1,35  ),GWWZ ,AMP(30  ))           
      CALL HVVXXX(W(1,30  ),W(1,1   ),GWWH ,HMASS   ,HWIDTH  ,W(1,         
     &     36  ))                                                          
      CALL VVSXXX(W(1,16  ),W(1,2   ),W(1,36  ),GWWH ,AMP(31  ))           
      CALL VVVXXX(W(1,30  ),W(1,1   ),W(1,18  ),GWWZ ,AMP(32  ))           
      CALL WWWWXX(W(1,30  ),W(1,1   ),W(1,16  ),W(1,2   ),GWWZ ,GWWA ,     
     &     AMP(33  ))                                                      
c second Higgs
      CALL HVVXXX(W(1,30  ),W(1,2   ),GWWH2,H2MASS  ,H2WIDTH ,W(1,         
     &     37  ))                                                          
      CALL VVSXXX(W(1,16  ),W(1,1   ),W(1,37  ),GWWH2,AMP(34  ))           
      CALL HVVXXX(W(1,30  ),W(1,1   ),GWWH2,H2MASS  ,H2WIDTH ,W(1,         
     &     38  ))                                                          
      CALL VVSXXX(W(1,16  ),W(1,2   ),W(1,38  ),GWWH2,AMP(35  ))           
      ww(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)
      if (with_secondhiggs) then
        ww(mu,nu)  = ww(mu,nu) +AMP(  34)+AMP(  35)
      endif
               
	enddo
	enddo
	
	end

c----------------------------------------------------------------

      subroutine WPVtoWP(idl,id,Q,v,wpa,wpz)
C  Input:   Q(*)        one of the two incoming boson momenta (t-channel)
c           id = 1      Q = q1 = W+ momentum 
c           id = 2      Q = q2 = gamma/Z momentum
c	    idl = 1	l,vu = e+,ve
c	    idl = 2	l,vu = mu+,vmu	
c	
c  OUPTPUT: wpa(mu,nu)  lepton tensor for w gamma--> l+nu
c           wpz(mu,nu)  lepton tensor for w Z    --> l+nu
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+(q1) z(q2) -> l+ vl  
C FOR PROCESS : w+(q1) a(q2) -> l+ vl  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   3) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=   7) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS
C
      integer id,idl
      real*8 q(0:3), v(0:3,4)
      complex*16 wpa(0:3,0:3), wpz(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      real*8 q2sq, Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS), denz
      complex*16 wwp(6),wl(6),wn(6)
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"
#include "tensorz.inc"

      logical ldebug
      parameter (ldebug=.false.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------

      if (idl.eq.1) then
         do i = 1,6
	    wwp(i) = we(i)
	    wl(i) = wel(i)
	    wn(i) = wve(i)
	 enddo      
      else
         do i = 1,6
	    wwp(i) = wu(i)
	    wl(i) = wmu(i)
	    wn(i) = wvu(i)
	 enddo            
      endif 
      
      if (id.eq.1) then
         q2(0) = dreal(wwp(5))
         q2(1) = dreal(wwp(6))
         q2(2) = dimag(wwp(6))
         q2(3) = dimag(wwp(5))
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = q2(mu)-q(mu)
         enddo
      elseif (id.eq.2) then
         q1(0) = dreal(wwp(5))
         q1(1) = dreal(wwp(6))
         q1(2) = dimag(wwp(6))
         q1(3) = dimag(wwp(5))
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = q1(mu)-q(mu)
         enddo
      endif
c
      do i=1,6                  ! read in lepton states from common block
         w(i,3) = wl(i)
         w(i,4) = wn(i)
	 w(i,7) = wwp(i)
      enddo

      q2sq = q2(0)**2-q2(1)**2-q2(2)**2-q2(3)**2
      denz = q2sq/dcmplx(q2sq-zmass**2,zmass*zwidth)
      DO MU = 0,3
         DO NU = 0,3
            CALL VCARTX(Q1(0),WMASS ,Wwidth, MU,-1,W(1,1))        
            CALL VCARTX(Q2(0),ZERO  ,ZERO  , NU,-1,W(1,2))
            CALL FVIXXX(W(1,3),W(1,2),GZL ,ZERO,ZERO,W(1,5))    
            CALL IOVXXX(W(1,5),W(1,4),W(1,1),GWF ,AMP(1))            
            CALL FVIXXX(W(1,3),W(1,1),GWF ,ZERO,ZERO,W(1,6))    
            CALL IOVXXX(W(1,6),W(1,4),W(1,2),GZN ,AMP(2))	                
            CALL VVVXXX(W(1,1),W(1,7),W(1,2),GWWZ ,AMP(3))            
            wpz(mu,nu) = (-AMP(   1)-AMP(   2)-AMP(   3))*denz
            wpa(mu,nu) = -(amp(1)*gal(1)/gzl(1)+amp(3)*gwwa/gwwz)
	    
         enddo
      enddo
 
      end


c----------------------------------------------------------------
       
      subroutine  WMVTOWM(idl,id,Q,v,wma,wmz)
c
C  Input:   Q(*)        one of the two incoming boson momenta (t-channel)
c           id = 1      Q = q1 = W- momentum 
c           id = 2      Q = q2 = gamma/Z momentum
c	    idl = 1	l,v~ = e-,ve~
c	    idl = 2	l,v~ = mu-,vm~	
c	
c  OUPTPUT: wma(mu,nu)  lepton tensor for w gamma--> l-nu~
c           wmz(mu,nu)  lepton tensor for w Z    --> l-nu~
C  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w-(q1) z(q2) -> l- vl~ 
C FOR PROCESS : w-(q1) a(q2) -> l- vl~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   3) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=   7) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS
C
      integer id,idl
      real*8 q(0:3), v(0:3,4)
      complex*16 wma(0:3,0:3), wmz(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      real*8 q2sq, Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS), denz
      complex*16 wwm(6),wl(6),wn(6)
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical ldebug
      parameter (ldebug=.false.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------

      if (idl.eq.1) then
         do i = 1,6
	    wwm(i) = we(i)
	    wl(i) = wel(i)
	    wn(i) = wve(i)
	 enddo      
      else
         do i = 1,6
	    wwm(i) = wu(i)
	    wl(i) = wmu(i)
	    wn(i) = wvu(i)
	 enddo            
      endif 
      
      if (id.eq.1) then
         q2(0) = dreal(wwm(5))
         q2(1) = dreal(wwm(6))
         q2(2) = dimag(wwm(6))
         q2(3) = dimag(wwm(5))
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = q2(mu)-q(mu)
         enddo
      elseif (id.eq.2) then
         q1(0) = dreal(wwm(5))
         q1(1) = dreal(wwm(6))
         q1(2) = dimag(wwm(6))
         q1(3) = dimag(wwm(5))
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = q1(mu)-q(mu)
         enddo
      endif
c
      do i=1,6                  ! read in lepton states from common block
         w(i,3) = wl(i)
         w(i,4) = wn(i)
	 w(i,7) = wwm(i)
      enddo
            
	
      q2sq = q2(0)**2-q2(1)**2-q2(2)**2-q2(3)**2
      denz = q2sq/dcmplx(q2sq-zmass**2,zmass*zwidth)
      
      DO MU = 0,3
         DO NU = 0,3
            CALL VCARTX(Q1(0),WMASS ,Wwidth, MU,-1,W(1,1))        
            CALL VCARTX(Q2(0),ZERO  ,ZERO  , NU,-1,W(1,2))
	          
      	    CALL FVOXXX(W(1,3   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,5   ))    
      	    CALL IOVXXX(W(1,4   ),W(1,5   ),W(1,1   ),GWF ,AMP(1   ))  
	              
            CALL FVOXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,6   ))    
      	    CALL IOVXXX(W(1,4   ),W(1,6   ),W(1,2   ),GZN ,AMP(2   ))          
      	    
	    CALL VVVXXX(W(1,1   ),W(1,7   ),W(1,2),GWWZ ,AMP(3   ))            
      
            wmz(mu,nu) = (+AMP(   1)+AMP(   2)-AMP(   3))*denz
            wma(mu,nu) = (amp(1)*gal(1)/gzl(1)-amp(3)*gwwa/gwwz)

         enddo
      enddo
      
      end
