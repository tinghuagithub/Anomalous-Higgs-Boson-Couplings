      subroutine AAtoWW_anomal2(Q1,Q2,P,aa)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a a -> e+ ve mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  14) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  26) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 aa(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(3:6), ihel
      DATA (NHEL(IHEL),IHEL=3,6) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
c#include "VBFNLO/utilities/an_couplings.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,3) = wep(i)
            w(i,4) = wve(i)
            w(i,5) = wmu(i)
            w(i,6) = wvm(i)
            w(i,19) = wp(i)
            w(i,20) = wm(i)
         enddo
      endif


C Overall factor scheme
C      widthfactor=1.d0
C      if (ofs) then
C        ofsfactor1=((p(0,3)+p(0,4))**2-(p(1,3)+p(1,4))**2-(p(2,3)+p(2,4))**2
C     &             -(p(3,3)+p(3,4))**2-wmass**2)/dcmplx((p(0,3)+p(0,4))**2
C     &             -(p(1,3)+p(1,4))**2-(p(2,3)+p(2,4))**2-(p(3,3)+p(3,4))**2
C     &             -wmass**2,wmass*wwidth)
C       ofsfactor2=((p(0,5)+p(0,6))**2-(p(1,5)+p(1,6))**2-(p(2,5)+p(2,6))**2
C     &            -(p(3,5)+p(3,6))**2-wmass**2)/dcmplx((p(0,5)+p(0,6))**2
C     &            -(p(1,5)+p(1,6))**2-(p(2,5)+p(2,6))**2-(p(3,5)+p(3,6))**2
C     &            -wmass**2,wmass*wwidth)
C      widthfactor=0.d0
C      endif
      DO MU = 0,3
         DO NU = 0,3
      CALL VCARTX(Q1(0),ZERO ,ZERO, MU,-1,W(1,1   ))     !A   
      CALL VCARTX(Q2(0),ZERO ,ZERO, NU,-1,W(1,2   ))     !A
      if (.not.lswitch) then
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(3   ),-1,W(1,3   ))    !e+    
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))    !ve    
         CALL OXXXXX(P(0,6   ),ZERO ,NHEL(5   ),+1,W(1,5   ))    !mu-    
         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(6   ),-1,W(1,6   ))    !vm~
      endif
      CALL FVIXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   )) 
   
C      CALL JVVXXX(W(1,8   ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,9))
      CALL jwmwpa_anomal3(W(1,8   ),W(1,1   ),W(1,9)) 

      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,9   ),GWF ,AMP(1   ))            
      CALL FVOXXX(W(1,5   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,6   ),W(1,10  ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,7   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL JIOXXX(W(1,11  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,12  ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,13  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,14  ))
    
C      CALL JVVXXX(W(1,14  ),W(1,2   ),GWWA ,WMASS   ,WWIDTH  ,W(1,15))
      CALL jwmwpa_anomal3(W(1,14   ),W(1,2   ),W(1,15))

      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,15  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,5   ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,6   ),W(1,16  ),W(1,14  ),GWF ,AMP(5   ))            
      CALL FVIXXX(W(1,13  ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,17  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,18  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,18  ),GWF ,AMP(6   )) 
      if (.not.lswitch) then
         CALL JIOXXX(W(1,3),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,19))    
         CALL JIOXXX(W(1,6),W(1,5   ),GWF ,WMASS   ,WWIDTH  ,W(1,20)) 
      endif
C      CALL JVVXXX(W(1,19  ),W(1,2   ),GWWA ,WMASS   ,WWIDTH  ,W(1,21))
      CALL jwmwpa_anomal3(W(1,19   ),W(1,2   ),W(1,21))

C      CALL VVVXXX(W(1,20  ),W(1,21  ),W(1,1   ),GWWA ,AMP(7   ))  
      CALL wwa_anomal3(W(1,20  ),W(1,21  ),W(1,1   ),AMP(7   )) 
         
      CALL FVIXXX(W(1,6   ),W(1,19  ),GWF ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL IOVXXX(W(1,22  ),W(1,10  ),W(1,2   ),GAL ,AMP(8   ))            
      CALL JIOXXX(W(1,6   ),W(1,10  ),GWF ,WMASS   ,WWIDTH  ,W(1,23  ))   
 
C      CALL VVVXXX(W(1,23  ),W(1,19  ),W(1,2   ),GWWA ,AMP(9   )) 
      CALL wwa_anomal3(W(1,23  ),W(1,19  ),W(1,2   ),AMP(9   )) 

C      CALL JVVXXX(W(1,19  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,24))
      CALL jwmwpa_anomal3(W(1,19   ),W(1,1   ),W(1,24))

C      CALL VVVXXX(W(1,20  ),W(1,24  ),W(1,2   ),GWWA ,AMP(10  )) 
      CALL wwa_anomal3(W(1,20  ),W(1,24  ),W(1,2   ),AMP(10   )) 
         
      CALL IOVXXX(W(1,22  ),W(1,16  ),W(1,1   ),GAL ,AMP(11  ))            
      CALL JIOXXX(W(1,6   ),W(1,16  ),GWF ,WMASS   ,WWIDTH  ,W(1,25  ))  
  
C      CALL VVVXXX(W(1,25  ),W(1,19  ),W(1,1   ),GWWA ,AMP(12  )) 
      CALL wwa_anomal3(W(1,25  ),W(1,19  ),W(1,1   ),AMP(12   ))
          
C      CALL W3W3XX(W(1,20  ),W(1,1   ),W(1,19  ),W(1,2   ),GWWA ,GWWA ,     
C     &     AMP(13  )) 
      CALL wwaa_anomal4(W(1,20  ),W(1,1   ),W(1,19  ),W(1,2   ),     
     &     AMP(13  ))  
       
c considering anomalous couplings, we get an extra graph: A+A -> H -> W+ W-
      CALL jhww_anomal3(W(1,20  ),W(1,19  ),W(1,26  ))
      CALL aah_anomal3(W(1,1  ),W(1,2  ),W(1,26  ),AMP(14  ))
                                              
      AA(MU,NU)  = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)
     &             -AMP(  14) !new diagram with Higgs
         enddo
      enddo
      END


      subroutine AZtoWW_anomal2(Q1,Q2,P,az)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a z -> e+ ve mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  20) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  31) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 az(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(3:6), ihel
      DATA (NHEL(IHEL),IHEL=3,6) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
c#include "VBFNLO/utilities/an_couplings.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,3) = wep(i)
            w(i,4) = wve(i)
            w(i,5) = wmu(i)
            w(i,6) = wvm(i)
            w(i,25) = wp(i)
            w(i,14) = wm(i)
         enddo
      endif


      DO MU = 0,3
         DO NU = 0,3
      CALL VCARTX(Q1(0),ZERO ,ZERO, MU,-1,W(1,1   ))    !A    
      CALL VCARTX(Q2(0),ZMASS ,Zwidth, NU,-1,W(1,2   )) !Z
      if (.not.lswitch) then
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(3   ),-1,W(1,3   )) !e+       
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   )) !ve       
         CALL OXXXXX(P(0,6   ),ZERO ,NHEL(5   ),+1,W(1,5   )) !mu-       
         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(6   ),-1,W(1,6   )) !vm~       
      endif
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   )) 
   
C      CALL JVVXXX(W(1,8   ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
C     &     9   )) 
      CALL jwmwpa_anomal3(W(1,8   ),W(1,1   ),W(1,9   )) 
                                                   
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,9   ),GWF ,AMP(1   ))            
      CALL FVOXXX(W(1,5   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,6   ),W(1,10  ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,7   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL JIOXXX(W(1,11  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,12  ),GWF ,AMP(3   ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GZN ,ZERO    ,ZERO    ,W(1,13  ))    
      if (.not.lswitch)
     &   CALL JIOXXX(W(1,6),W(1,5   ),GWF ,WMASS   ,WWIDTH  ,W(1,14  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GWF ,WMASS   ,WWIDTH  ,W(1,15  )) 
   
C      CALL VVVXXX(W(1,14  ),W(1,15  ),W(1,1   ),GWWA ,AMP(4   ))     
      CALL wwa_anomal3(W(1,14  ),W(1,15  ),W(1,1   ),AMP(4   ))   

      CALL JIOXXX(W(1,6   ),W(1,10  ),GWF ,WMASS   ,WWIDTH  ,W(1,16  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,16  ),GWF ,AMP(5   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,17  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,18  ))    
      CALL FVOXXX(W(1,5   ),W(1,18  ),GWF ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL IOVXXX(W(1,6   ),W(1,19  ),W(1,2   ),GZN ,AMP(6   ))   
         
C      CALL JVVXXX(W(1,18  ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
C     &     20  ))         
      CALL jwmwpz_anomal3(W(1,18  ),W(1,2   ),W(1,20  )) 
                                           
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,20  ),GWF ,AMP(7   ))            
      CALL FVOXXX(W(1,5   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL IOVXXX(W(1,6   ),W(1,21  ),W(1,18  ),GWF ,AMP(8   ))            
      CALL FVIXXX(W(1,17  ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL JIOXXX(W(1,22  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,23  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,23  ),GWF ,AMP(9   ))            
      CALL JIOXXX(W(1,17  ),W(1,13  ),GWF ,WMASS   ,WWIDTH  ,W(1,24  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,24  ),GWF ,AMP(10  ))            
      if (.not.lswitch) 
     &   CALL JIOXXX(W(1,3),W(1,4   ),GWF ,WMASS ,WWIDTH  ,W(1,25))    
      CALL FVIXXX(W(1,6   ),W(1,2   ),GZN ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,26  ),W(1,10  ),W(1,25  ),GWF ,AMP(11  ))  
          
C      CALL JVVXXX(W(1,25  ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
C     &     27  ))    
      CALL jwmwpz_anomal3(W(1,25  ),W(1,2   ),W(1,27  ))  
                                                
C      CALL VVVXXX(W(1,14  ),W(1,27  ),W(1,1   ),GWWA ,AMP(12  ))   
      CALL wwa_anomal3(W(1,14  ),W(1,27  ),W(1,1   ),AMP(12  ))
  
      CALL FVIXXX(W(1,6   ),W(1,25  ),GWF ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,28  ),W(1,10  ),W(1,2   ),GZL ,AMP(13  ))  
          
C      CALL VVVXXX(W(1,16  ),W(1,25  ),W(1,2   ),GWWZ ,AMP(14  ))  
      CALL wwz_anomal3(W(1,16  ),W(1,25  ),W(1,2   ),AMP(14  ))
   
C      CALL JVVXXX(W(1,25  ),W(1,1),GWWA ,WMASS   ,WWIDTH  ,W(1,29) )
      CALL jwmwpa_anomal3(W(1,25  ),W(1,1),W(1,29) )

      CALL IOVXXX(W(1,26  ),W(1,5   ),W(1,29  ),GWF ,AMP(15  )) 
           
C      CALL VVVXXX(W(1,14  ),W(1,29  ),W(1,2   ),GWWZ ,AMP(16  )) 
      CALL wwz_anomal3(W(1,14  ),W(1,29  ),W(1,2   ),AMP(16  ))
    
      CALL IOVXXX(W(1,28  ),W(1,21  ),W(1,1   ),GAL ,AMP(17  ))            
      CALL JIOXXX(W(1,6   ),W(1,21  ),GWF ,WMASS   ,WWIDTH  ,W(1,30  )) 
   
C      CALL VVVXXX(W(1,30  ),W(1,25  ),W(1,1   ),GWWA ,AMP(18  ))  
      CALL wwa_anomal3(W(1,30  ),W(1,25  ),W(1,1   ),AMP(18  )) 
   
C      CALL W3W3XX(W(1,14  ),W(1,2   ),W(1,25  ),W(1,1   ),GWWZ ,GWWA ,     
C     &     AMP(19  ))      
      CALL wwza_anomal4(W(1,14  ),W(1,2   ),W(1,25  ),W(1,1   ),
     &     AMP(19  ))  

c considering anomalous couplings, we get an extra graph: A+Z -> H -> W+ W-
      CALL jhww_anomal3(W(1,14  ),W(1,25  ),W(1,31  ))
      CALL azh_anomal3(W(1,1  ),W(1,2  ),W(1,31  ),AMP(20  ))
                                          
      AZ(MU,NU)  = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)
     &             -AMP(  20) !new diagram with Higgs
         ENDDO
      ENDDO

      END


      subroutine ZZtoWW_anomal2(Q1,Q2,P,zz)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z z -> e+ ve mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  32) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  39) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 zz(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(3:6), ihel
      DATA (NHEL(IHEL),IHEL=3,6) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
c#include "VBFNLO/utilities/an_couplings.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,3) = wep(i)
            w(i,4) = wve(i)
            w(i,5) = wmu(i)
            w(i,6) = wvm(i)
            w(i,34) = wp(i)
            w(i,15) = wm(i)
         enddo
      endif


      DO MU = 0,3
c         print*," mu = ",mu,":",(q1(mu)+q2(mu))/(p(mu,3)+p(mu,4)+p(mu,5)+p(mu,6))
         DO NU = 0,3
      CALL VCARTX(Q1(0),ZMASS ,Zwidth, MU,-1,W(1,1   ))  !Z      
      CALL VCARTX(Q2(0),ZMASS ,Zwidth, NU,-1,W(1,2   ))  !Z
      if (.not.lswitch) then 
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(3   ),-1,W(1,3   ))  !e+      
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))  !ve      
         CALL OXXXXX(P(0,6   ),ZERO ,NHEL(5   ),+1,W(1,5   ))  !mu-      
         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(6   ),-1,W(1,6   ))  !vm~
      endif        
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   ))    
      CALL FVOXXX(W(1,5   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,6   ),W(1,9   ),W(1,1   ),GZN ,AMP(1   ))  
          
C      CALL JVVXXX(W(1,8   ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,10))
      CALL jwmwpz_anomal3(W(1,8   ),W(1,1   ),W(1,10))

      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,10  ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,5   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,8   ),GWF ,AMP(3   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL FVIXXX(W(1,6   ),W(1,2   ),GZN ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,14  ))    
      CALL IOVXXX(W(1,13  ),W(1,5   ),W(1,14  ),GWF ,AMP(4   ))            
      if (.not.lswitch) then
         CALL JIOXXX(W(1,6),W(1,5),GWF ,WMASS   ,WWIDTH  ,W(1,15)) 
      endif   
C      CALL VVVXXX(W(1,15  ),W(1,14  ),W(1,2   ),GWWZ ,AMP(5   ))  
      CALL wwz_anomal3(W(1,15  ),W(1,14  ),W(1,2   ),AMP(5   )) 
   
      CALL FVOXXX(W(1,5   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL JIOXXX(W(1,6   ),W(1,16  ),GWF ,WMASS   ,WWIDTH  ,W(1,17  ))    
      CALL IOVXXX(W(1,3   ),W(1,12  ),W(1,17  ),GWF ,AMP(6   ))            
      CALL FVOXXX(W(1,12  ),W(1,2   ),GZN ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL IOVXXX(W(1,3   ),W(1,18  ),W(1,15  ),GWF ,AMP(7   ))            
      CALL FVIXXX(W(1,7   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL JIOXXX(W(1,19  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,20  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,20  ),GWF ,AMP(8   ))            
      CALL JIOXXX(W(1,7   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,21  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,21  ),GWF ,AMP(9   ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GZN ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL FVIXXX(W(1,6   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,23  ))    
      CALL JIOXXX(W(1,3   ),W(1,22  ),GWF ,WMASS   ,WWIDTH  ,W(1,24  ))    
      CALL IOVXXX(W(1,23  ),W(1,5   ),W(1,24  ),GWF ,AMP(10  ))   
         
C      CALL VVVXXX(W(1,15  ),W(1,24  ),W(1,1   ),GWWZ ,AMP(11  )) 
      CALL wwz_anomal3(W(1,15  ),W(1,24  ),W(1,1   ),AMP(11  ))
    
      CALL JIOXXX(W(1,6   ),W(1,11  ),GWF ,WMASS   ,WWIDTH  ,W(1,25  ))    
      CALL IOVXXX(W(1,3   ),W(1,22  ),W(1,25  ),GWF ,AMP(12  ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL JIOXXX(W(1,26  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,27  ))    
      CALL FVOXXX(W(1,5   ),W(1,27  ),GWF ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,6   ),W(1,28  ),W(1,2   ),GZN ,AMP(13  ))  
          
C      CALL JVVXXX(W(1,27  ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,29))
      CALL jwmwpz_anomal3(W(1,27  ),W(1,2   ),W(1,29))

      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,29  ),GWF ,AMP(14  ))            
      CALL IOVXXX(W(1,6   ),W(1,16  ),W(1,27  ),GWF ,AMP(15  ))            
      CALL FVOXXX(W(1,22  ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,30  ))    
      CALL IOVXXX(W(1,3   ),W(1,30  ),W(1,15  ),GWF ,AMP(16  ))            
      CALL FVIXXX(W(1,26  ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL JIOXXX(W(1,31  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,32  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,32  ),GWF ,AMP(17  ))            
      CALL JIOXXX(W(1,26  ),W(1,22  ),GWF ,WMASS   ,WWIDTH  ,W(1,33  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,33  ),GWF ,AMP(18  ))            
      if (.not.lswitch)
     &   CALL JIOXXX(W(1,3),W(1,4),GWF ,WMASS,WWIDTH  ,W(1,34))  
  
C      CALL JVVXXX(W(1,34),W(1,2),GWWZ ,WMASS ,WWIDTH  ,W(1,35))
      CALL jwmwpz_anomal3(W(1,34),W(1,2),W(1,35))

      CALL IOVXXX(W(1,23  ),W(1,5   ),W(1,35  ),GWF ,AMP(19  ))            
      CALL IOVXXX(W(1,13  ),W(1,11  ),W(1,34  ),GWF ,AMP(20  ))  
          
C      CALL VVVXXX(W(1,15  ),W(1,35  ),W(1,1   ),GWWZ ,AMP(21  )) 
      CALL wwz_anomal3(W(1,15  ),W(1,35  ),W(1,1   ),AMP(21  ))
    
      CALL FVIXXX(W(1,6   ),W(1,34  ),GWF ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL IOVXXX(W(1,36  ),W(1,11  ),W(1,2   ),GZL ,AMP(22  )) 
           
C      CALL VVVXXX(W(1,25  ),W(1,34  ),W(1,2   ),GWWZ ,AMP(23  ))  
      CALL wwz_anomal3(W(1,25  ),W(1,34  ),W(1,2   ),AMP(23  ))
   
      CALL IOVXXX(W(1,23  ),W(1,16  ),W(1,34  ),GWF ,AMP(24  ))    
        
C      CALL JVVXXX(W(1,34  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,37))
      CALL jwmwpz_anomal3(W(1,34  ),W(1,1   ),W(1,37))

      CALL IOVXXX(W(1,13  ),W(1,5   ),W(1,37  ),GWF ,AMP(25  ))   
         
C      CALL VVVXXX(W(1,15  ),W(1,37  ),W(1,2   ),GWWZ ,AMP(26  ))  
      CALL wwz_anomal3(W(1,15  ),W(1,37  ),W(1,2   ),AMP(26  ))
   
      CALL IOVXXX(W(1,36  ),W(1,16  ),W(1,1   ),GZL ,AMP(27  ))   
         
C      CALL VVVXXX(W(1,17  ),W(1,34  ),W(1,1   ),GWWZ ,AMP(28  ))  
      CALL wwz_anomal3(W(1,17  ),W(1,34  ),W(1,1   ),AMP(28  ))
   
      CALL FVOXXX(W(1,5   ),W(1,34  ),GWF ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL IOVXXX(W(1,23  ),W(1,38  ),W(1,2   ),GZN ,AMP(29  ))            
      CALL IOVXXX(W(1,13  ),W(1,38  ),W(1,1   ),GZN ,AMP(30  ))    
        
C      CALL HVVXXX(W(1,1   ),W(1,2   ),GZZH ,HMASS   ,HWIDTH  ,W(1,39))
C      CALL JVSXXX(W(1,34  ),W(1,39  ),GWWH ,WMASS   ,WWIDTH  ,W(1,40))
C      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,40  ),GWF ,AMP(31  ))     
      CALL jhww_anomal3(W(1,15  ),W(1,34  ),W(1,39  ))
      CALL zzh_anomal3(W(1,1   ),W(1,2   ),W(1,39  ),AMP(31  ))    

C      CALL W3W3XX(W(1,15  ),W(1,1   ),W(1,34  ),W(1,2   ),GWWZ ,GWWZ ,     
C     &     AMP(32  ))                             
      CALL wwzz_anomal4(W(1,15  ),W(1,1   ),W(1,34  ),W(1,2   ),     
     &     AMP(32  ))  
                        
      ZZ(MU,NU)  = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)-AMP(  22)-AMP(  23)-AMP(  24)-AMP(  25)
     &             -AMP(  26)-AMP(  27)-AMP(  28)-AMP(  29)-AMP(  30)
     &             -AMP(  31)-AMP(  32)
          ENDDO
      ENDDO
c         print*," wep ",(wep(i)/w(i,3),i=1,6)
c         print*," wve ",(wve(i)/w(i,4),i=1,6)
c         print*," wmu ",(wmu(i)/w(i,5),i=1,6)
c         print*," wvm ",(wvm(i)/w(i,6),i=1,6)
c         print*," wp  ",(wp(i)/w(i,34),i=1,6)
c         print*," wm  ",(wm(i)/w(i,15),i=1,6)
c         read(*,*)

      END


      subroutine WWtoWW_anomal2(Q1,Q2,P,ww)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- w+ -> e+ ve mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  28) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  40)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 ww(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(3:6), ihel
      DATA (NHEL(IHEL),IHEL=3,6) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
c#include "VBFNLO/utilities/an_couplings.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,3) = wep(i)
            w(i,4) = wve(i)
            w(i,5) = wmu(i)
            w(i,6) = wvm(i)
            w(i,21) = wp(i)
            w(i,18) = wm(i)
         enddo
      endif


      DO MU = 0,3
         DO NU = 0,3
      CALL VCARTX(Q1(0),wMASS ,wwidth, MU,-1,W(1,1   )) !W-      
      CALL VCARTX(Q2(0),wMASS ,wwidth, NU,-1,W(1,2   )) !W+
      if (.not.lswitch) then
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(3   ),-1,W(1,3   )) !e+        
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   )) !ve       
         CALL OXXXXX(P(0,6   ),ZERO ,NHEL(5   ),+1,W(1,5   )) !mu-       
         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(6   ),-1,W(1,6   )) !vm~ 
      endif      
      CALL FVIXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    
      CALL FVOXXX(W(1,5   ),W(1,8   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,6   ),W(1,9   ),W(1,1   ),GWF ,AMP(1   )) 
           
C      CALL JVVXXX(W(1,1   ),W(1,8   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,10))
      CALL jwmwpz_anomal3(W(1,1   ),W(1,8   ),W(1,10))

      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,10  ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,8   ),GZN ,AMP(3   ))            
      CALL FVIXXX(W(1,7   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,12  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,13  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL FVIXXX(W(1,6   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL JIOXXX(W(1,3   ),W(1,14  ),GAL ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,15  ),W(1,5   ),W(1,16  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,3   ),W(1,14  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,17  ))    
      CALL IOVXXX(W(1,15  ),W(1,5   ),W(1,17  ),GZL ,AMP(6   ))      
      if (.not.lswitch) 
     &   CALL JIOXXX( W(1,6),W(1,5),GWF ,WMASS,WWIDTH,W(1,18) )   
 
C      CALL VVVXXX(W(1,18  ),W(1,1   ),W(1,16  ),GWWA ,AMP(7   )) 
      CALL wwa_anomal3(W(1,18  ),W(1,1   ),W(1,16  ),AMP(7   )) 
   
c      CALL VVVXXX(W(1,18  ),W(1,1   ),W(1,17  ),GWWZ ,AMP(8   ))  
      CALL wwz_anomal3(W(1,18  ),W(1,1   ),W(1,17  ),AMP(8   ))
  
      CALL JIOXXX(W(1,6   ),W(1,11  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,19  ))    
      CALL IOVXXX(W(1,3   ),W(1,14  ),W(1,19  ),GZL ,AMP(9   ))            
      CALL FVOXXX(W(1,14  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,3   ),W(1,20  ),W(1,18  ),GWF ,AMP(10  ))  
      if (.not.lswitch)
     &   CALL JIOXXX(W(1,3),W(1,4),GWF ,WMASS,WWIDTH,W(1,21))    

C      CALL JVVXXX(W(1,2   ),W(1,21  ),GWWA ,ZERO    ,ZERO    ,W(1,22))
      CALL jaww_anomal3(W(1,2   ),W(1,21  ),W(1,22))

      CALL IOVXXX(W(1,15  ),W(1,5   ),W(1,22  ),GAL ,AMP(11  ))      
      
C      CALL JVVXXX(W(1,2   ),W(1,21  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,23))
      CALL jzww_anomal3(W(1,2   ),W(1,21  ),W(1,23))

      CALL IOVXXX(W(1,15  ),W(1,5   ),W(1,23  ),GZL ,AMP(12  ))  
          
C      CALL VVVXXX(W(1,18  ),W(1,1   ),W(1,22  ),GWWA ,AMP(13  ))  
      CALL wwa_anomal3(W(1,18  ),W(1,1   ),W(1,22  ),AMP(13  )) 

C      CALL VVVXXX(W(1,18  ),W(1,1   ),W(1,23  ),GWWZ ,AMP(14  ))  
      CALL wwz_anomal3(W(1,18  ),W(1,1   ),W(1,23  ),AMP(14  ))
   
C      CALL HVVXXX(W(1,2   ),W(1,21  ),GWWH ,HMASS   ,HWIDTH  ,W(1,24))
C      CALL VVSXXX(W(1,18  ),W(1,1   ),W(1,24  ),GWWH ,AMP(15  ))  
      CALL jhww_anomal3(W(1,2   ),W(1,21  ),W(1,24))
      CALL wwh_anomal3(W(1,18  ),W(1,1   ),W(1,24  ),AMP(15  )) 
   
      CALL FVIXXX(W(1,6   ),W(1,21  ),GWF ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL IOVXXX(W(1,25  ),W(1,11  ),W(1,2   ),GWF ,AMP(16  )) 
           
C      CALL VVVXXX(W(1,2   ),W(1,21  ),W(1,19  ),GWWZ ,AMP(17  )) 
      CALL wwz_anomal3(W(1,2   ),W(1,21  ),W(1,19  ),AMP(17  ))
    
C      CALL JVVXXX(W(1,2   ),W(1,1   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,26))
      CALL jzww_anomal3(W(1,2   ),W(1,1   ),W(1,26))

      CALL FVOXXX(W(1,4   ),W(1,26  ),GZN ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL JIOXXX(W(1,3   ),W(1,27  ),GWF ,WMASS   ,WWIDTH  ,W(1,28  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,28  ),GWF ,AMP(18  ))    
        
C      CALL JVVXXX(W(1,2   ),W(1,1   ),GWWA ,ZERO    ,ZERO    ,W(1,29))
      CALL jaww_anomal3(W(1,2   ),W(1,1   ),W(1,29))

      CALL FVIXXX(W(1,3   ),W(1,29  ),GAL ,ZERO    ,ZERO    ,W(1,30  ))    
      CALL JIOXXX(W(1,30  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,31  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,31  ),GWF ,AMP(19  ))            
      CALL FVIXXX(W(1,3   ),W(1,26  ),GZL ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,32  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,33  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,33  ),GWF ,AMP(20  ))            
      CALL FVOXXX(W(1,5   ),W(1,21  ),GWF ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,15  ),W(1,34  ),W(1,2   ),GWF ,AMP(21  ))      
      
C      CALL JVVXXX(W(1,21  ),W(1,29  ),GWWA ,WMASS   ,WWIDTH  ,W(1,35))
      CALL jwmwpa_anomal3(W(1,21  ),W(1,29  ),W(1,35))

      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,35  ),GWF ,AMP(22  ))   
         
C      CALL JVVXXX(W(1,21  ),W(1,26  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,36))
      CALL jwmwpz_anomal3(W(1,21  ),W(1,26  ),W(1,36))

      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,36  ),GWF ,AMP(23  ))   
         
C      CALL HVVXXX(W(1,2   ),W(1,1   ),GWWH ,HMASS   ,HWIDTH  ,W(1,37))
C      CALL JVSXXX(W(1,21  ),W(1,37  ),GWWH ,WMASS   ,WWIDTH  ,W(1,38))
C      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,38  ),GWF ,AMP(24  ))   
      CALL jhww_anomal3(W(1,2   ),W(1,1   ),W(1,37))
      CALL wwh_anomal3(W(1,18  ),W(1,21  ),W(1,37  ),AMP(24  ))
  
      CALL FVOXXX(W(1,5   ),W(1,29  ),GAL ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL IOVXXX(W(1,6   ),W(1,39  ),W(1,21  ),GWF ,AMP(25  ))            
      CALL FVOXXX(W(1,5   ),W(1,26  ),GZL ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,6   ),W(1,40  ),W(1,21  ),GWF ,AMP(26  ))            
      CALL IOVXXX(W(1,6   ),W(1,34  ),W(1,26  ),GZN ,AMP(27  )) 
           
C      CALL WWWWXX(W(1,2   ),W(1,1   ),W(1,18  ),W(1,21  ),GWWZ ,GWWA ,     
C     &     AMP(28  ))      
      CALL wwww_anomal4(W(1,2   ),W(1,1   ),W(1,18  ),W(1,21  ),
     &     AMP(28  ))
                                          
      WW(MU,NU)  = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)-AMP(  22)-AMP(  23)-AMP(  24)-AMP(  25)
     &             -AMP(  26)-AMP(  27)-AMP(  28)
          ENDDO
      ENDDO

      END


      subroutine ZtoWW_anomal2(P,z)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z -> e+ ve mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   5) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  13) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5)
      complex*16 z(0:5)
C  
C LOCAL VARIABLES 
C  
      REAL*8 Q1(0:3)
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(2:5), ihel
      DATA (NHEL(IHEL),IHEL=2,5) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
c#include "VBFNLO/utilities/an_couplings.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2) = wep(i)
            w(i,3) = wve(i)
            w(i,4) = wmu(i)
            w(i,5) = wvm(i)
            w(i,6) = wp(i)
c            w(i,) = wm(i)
         enddo
      endif

      do mu = 0,3
         q1(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5) !Z
      enddo

c
      if (.not.lswitch) then
         CALL IXXXXX(P(0,3   ),ZERO ,NHEL(2   ),-1,W(1,2   )) !e+
         CALL OXXXXX(P(0,2   ),ZERO ,NHEL(3   ),+1,W(1,3   )) !ve       
         CALL OXXXXX(P(0,5   ),ZERO ,NHEL(4   ),+1,W(1,4   )) !mu-       
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   )) !vm~       
         CALL JIOXXX(W(1,2   ),W(1,3),GWF ,WMASS,WWIDTH,W(1,6))  
      endif  
      do mu = 0,3
      CALL VCARTX(Q1(0     ),ZMASS ,Zwidth,MU,-1,W(1,1   )) !Z
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GZN ,AMP(1   ))
            
C      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,8)) 
      CALL jwmwpz_anomal3(W(1,6   ),W(1,1   ),W(1,8))

      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVOXXX(W(1,3   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,2   ),W(1,10  ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GWF ,AMP(4   ))            
      CALL FVIXXX(W(1,2   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,12  ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GWF ,AMP(5   ))            
      Z(mu) = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
      enddo
      z(4) = dcmplx(q1(0),q1(3))
      z(5) = dcmplx(q1(1),q1(2))
c
      return
      END


      subroutine AtoWW_anomal2(P,a)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a -> e+ ve mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   3) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  10) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5)
      complex*16 a(0:5)
C  
C LOCAL VARIABLES 
C
      REAL*8 Q1(0:3)
      INTEGER I, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(2:5), ihel
      DATA (NHEL(IHEL),IHEL=2,5) /+1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
c#include "VBFNLO/utilities/an_couplings.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            w(i,2) = wep(i)
            w(i,3) = wve(i)
            w(i,4) = wmu(i)
            w(i,5) = wvm(i)
            w(i,6) = wp(i)
c            w(i,) = wm(i)
         enddo
      endif

      do mu = 0,3
         q1(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5) !A
      enddo

      if (.not.lswitch) then
         CALL IXXXXX(P(0,3   ),ZERO ,NHEL(2   ),-1,W(1,2   )) !e+       
         CALL OXXXXX(P(0,2   ),ZERO ,NHEL(3   ),+1,W(1,3   )) !ve       
         CALL OXXXXX(P(0,5   ),ZERO ,NHEL(4   ),+1,W(1,4   )) !mu-       
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   )) !vm~       
         CALL JIOXXX(W(1,2   ),W(1,3),GWF ,WMASS,WWIDTH,W(1,6))    
c         print*," ep ",(wep(i)/w(i,2),i=1,6)
c         print*," ve ",(wve(i)/w(i,3),i=1,6)
c         print*," mu ",(wmu(i)/w(i,4),i=1,6)
c         print*," vm ",(wvm(i)/w(i,5),i=1,6)
c         print*," wp ",( wp(i)/w(i,6),i=1,6)
      endif
      do mu = 0,3
      CALL VCARTX(Q1(0),ZERO ,ZERO, MU,-1,W(1,1   )) !A

C      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,7)) 
      CALL jwmwpa_anomal3(W(1,6   ),W(1,1   ),W(1,7))

      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,7   ),GWF ,AMP(1   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,8   ))    
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,6   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,2   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL JIOXXX(W(1,9   ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,10  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,10  ),GWF ,AMP(3   ))            
      a(mu) = -AMP(   1)-AMP(   2)-AMP(   3)
      enddo
      a(4) = dcmplx(q1(0),q1(3))
      a(5) = dcmplx(q1(1),q1(2))
c
      END


      subroutine WVtoWM_anomal2(id,Q,v,wma,wmz)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           id = 1      Q = q1 = W- momentum
c           id = 2      Q = q2 = gamma/Z momentum
c  OUPTPUT: wma(mu,nu)  lepton tensor for w gamma--> mu- nubar
c           wmz(mu,nu)  lepton tensor for w Z    --> mu- nubar
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- z -> mu- vm~  
C and           w- a -> mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   4) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=   8)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer id
      real*8 q(0:3), v(0:3,4)
      complex*16 wma(0:3,0:3), wmz(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      real*8 q2sq, Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS), denz
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical ldebug
      parameter (ldebug=.false.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
c#include "VBFNLO/utilities/an_couplings.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (id.eq.1) then
         q2(0) = dreal(wm(5))
         q2(1) = dreal(wm(6))
         q2(2) = dimag(wm(6))
         q2(3) = dimag(wm(5))
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = q2(mu)-q(mu)
         enddo
      elseif (id.eq.2) then
         q1(0) = dreal(wm(5))
         q1(1) = dreal(wm(6))
         q1(2) = dimag(wm(6))
         q1(3) = dimag(wm(5))
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = q1(mu)-q(mu)
         enddo
      endif

      do i=1,6                  ! read in lepton states from common block
         w(i,3) = wmu(i)
         w(i,4) = wvm(i)
      enddo


c      CALL VXXXXX(P(0,1   ),WMASS ,NHEL(1   ),-1,W(1,1   ))       
c      CALL VXXXXX(P(0,2   ),ZMASS ,NHEL(2   ),-1,W(1,2   ))       
c      CALL OXXXXX(P(0,3   ),ZERO ,NHEL(3   ),+1,W(1,3   ))        
c      CALL IXXXXX(P(0,4   ),ZERO ,NHEL(4   ),-1,W(1,4   ))
      q2sq = q2(0)**2-q2(1)**2-q2(2)**2-q2(3)**2
      denz = q2sq/dcmplx(q2sq-zmass**2,zmass*zwidth)
      DO MU = 0,3
         CALL VCARTX(Q1(0),WMASS ,Wwidth, MU,-1,W(1,1)) !W-       
         CALL FVOXXX(WMU,W(1,1),GWF ,ZERO,ZERO,W(1,6))    
         DO NU = 0,3
            CALL VCARTX(Q2(0),ZERO  ,ZERO  , NU,-1,W(1,2)) !A / (Z)
            CALL FVOXXX(WMU,W(1,2),GZL ,ZERO,ZERO,W(1,5))    
            CALL IOVXXX(WVM,W(1,5),W(1,1),GWF ,AMP(1))            
            CALL IOVXXX(WVM,W(1,6),W(1,2),GZN ,AMP(2))  
          
C            CALL JVVXXX(W(1,1),W(1,2),GWWZ ,WMASS,WWIDTH,W(1,7))
            CALL jwmwpa_anomal3(W(1,1),W(1,2),W(1,7)) !for A
            CALL jwmwpz_anomal3(W(1,1),W(1,2),W(1,8)) !for Z

C            CALL IOVXXX(WVM,WMU,W(1,7),GWF ,AMP(3)) 
            CALL IOVXXX(WVM,WMU,W(1,7),GWF ,AMP(3)) !for A
            CALL IOVXXX(WVM,WMU,W(1,8),GWF ,AMP(4)) !for Z
           
            wmz(mu,nu) = (-AMP(   1)-AMP(   2)-AMP(   4))*denz
            wma(mu,nu) = -(amp(1)*gal(1)/gzl(1)+amp(3))
C            wma(mu,nu) = -(amp(1)*gal(1)/gzl(1)+amp(3)*gwwa/gwwz)
         enddo
      enddo

      end


      subroutine WVtoWP_anomal2(id,Q,v,wpa,wpz)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           id = 1      Q = q1 = W+ momentum
c           id = 2      Q = q2 = gamma/Z momentum
c  OUPTPUT: wpa(mu,nu)  lepton tensor for w gamma--> e+nu
c           wpz(mu,nu)  lepton tensor for w Z    --> e+nu
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+(q1) z(q2) -> e+ ve  
C FOR PROCESS : w+(q1) a(q2) -> e+ ve  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   4) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=   8) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS
C
      integer id
      real*8 q(0:3), v(0:3,4)
      complex*16 wpa(0:3,0:3), wpz(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      real*8 q2sq, Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS), denz
c  lepton spinors and W+- polarization vectors
#include "tensor.inc"

      logical ldebug
      parameter (ldebug=.false.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
c#include "VBFNLO/utilities/an_couplings.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      
      if (id.eq.1) then
         q2(0) = dreal(wp(5))
         q2(1) = dreal(wp(6))
         q2(2) = dimag(wp(6))
         q2(3) = dimag(wp(5))
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = q2(mu)-q(mu)
         enddo
      elseif (id.eq.2) then
         q1(0) = dreal(wp(5))
         q1(1) = dreal(wp(6))
         q1(2) = dimag(wp(6))
         q1(3) = dimag(wp(5))
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = q1(mu)-q(mu)
         enddo
      endif

      do i=1,6                  ! read in lepton states from common block
         w(i,3) = wep(i)
         w(i,4) = wve(i)
      enddo


c      CALL VXXXXX(P(0,1   ),WMASS ,NHEL(1   ),-1*IC(1   ),W(1,1   ))       
c      CALL VXXXXX(P(0,2   ),ZMASS ,NHEL(2   ),-1*IC(2   ),W(1,2   ))       
c      CALL IXXXXX(P(0,3   ),ZERO ,NHEL(3   ),-1*IC(3   ),W(1,3   ))        
c      CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1*IC(4   ),W(1,4   ))        
      q2sq = q2(0)**2-q2(1)**2-q2(2)**2-q2(3)**2
      denz = q2sq/dcmplx(q2sq-zmass**2,zmass*zwidth)
      DO MU = 0,3
         DO NU = 0,3
            CALL VCARTX(Q1(0),WMASS ,Wwidth, MU,-1,W(1,1)) !W+       
            CALL VCARTX(Q2(0),ZERO  ,ZERO  , NU,-1,W(1,2)) !A / (Z)
            CALL FVIXXX(W(1,3),W(1,2),GZL ,ZERO,ZERO,W(1,5))    
            CALL IOVXXX(W(1,5),W(1,4),W(1,1),GWF ,AMP(1))            
            CALL FVIXXX(W(1,3),W(1,1),GWF ,ZERO,ZERO,W(1,6))    
            CALL IOVXXX(W(1,6),W(1,4),W(1,2),GZN ,AMP(2)) 
           
C            CALL JVVXXX(W(1,2),W(1,1),GWWZ ,WMASS,WWIDTH,W(1,7) )
            CALL jwpawm_anomal3(W(1,2),W(1,1),W(1,7) ) !for A
            CALL jwpzwm_anomal3(W(1,2),W(1,1),W(1,8) ) !for Z

C            CALL IOVXXX(W(1,3),W(1,4),W(1,7),GWF ,AMP(3))   
            CALL IOVXXX(W(1,3),W(1,4),W(1,7),GWF ,AMP(3)) !for A
            CALL IOVXXX(W(1,3),W(1,4),W(1,8),GWF ,AMP(4)) !for Z

            wpz(mu,nu) = (-AMP(   1)-AMP(   2)-AMP(   4))*denz
            wpa(mu,nu) = -(amp(1)*gal(1)/gzl(1)+amp(3))
C            wpa(mu,nu) = -(amp(1)*gal(1)/gzl(1)+amp(3)*gwwa/gwwz)
         enddo
      enddo

      end

