
c ------------------------------------------------------------	

      subroutine wpto4l(p,h,wp4l)
	
      IMPLICIT NONE

      REAL*8 P(0:3,2:5)
      complex*16 wp4l(0:5)
      integer lsign(2:5,4),h,ll   

	! possible lepton helicities:
	data (lsign(ll,1),ll=2,5) / -1, -1, -1, -1/  !h=1
	data (lsign(ll,2),ll=2,5) / -1, -1,  1,  1/  !h=2

	call wpto4ln(P,lsign(2,h),wp4l)
	end
		
c ------------------------------------------------------------	
c ------------------------------------------------------------	
   
      subroutine wpto4LN(P,lsign,wp)

C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ -> e+ ve mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   6) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=  11) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5),q(0:3)
      INTEGER lsign(2:5)
      complex*16 wp(0:5)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors and V polarization vectors
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
c
#include "VBFNLO/utilities/coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------


      if (lswitch) then
	do i = 1,6
	   w(i,2) = wl(i)
	   w(i,3) = wn(i)
	   w(i,4) = lp(i)
	   w(i,5) = lm(i)
	   
	   w(i,6) = we(i)
	   w(i,10) = au(i)
	   w(i,11) = zu(i)
	enddo
      else
      	CALL IXXXXX(P(0,2   ),ZERO ,-lsign(2),-1,W(1,2   ))       
      	CALL OXXXXX(P(0,3   ),ZERO ,+lsign(3),+1,W(1,3   ))       
      	CALL IXXXXX(P(0,4   ),ZERO ,-lsign(4),-1,W(1,4   ))       
      	CALL OXXXXX(P(0,5   ),ZERO ,+lsign(5),+1,W(1,5   )) 

      	CALL JIOXXX(W(1,2   ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,6   ))    
      endif
             
      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

      do mu = 0,3
      CALL VCARTX(Q(0),wmass ,wwidth, MU,-1,W(1,1   ))
      CALL VVVXXX(W(1,1), W(1,6), W(1,10), GWWA, AMP(1))
      CALL VVVXXX(W(1,1), W(1,6), W(1,11), GWWZ, AMP(2))                    
      CALL FVIXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,5   ),W(1,6   ),GWF ,AMP(3   ))           
      CALL FVOXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,7  ))    
      CALL IOVXXX(W(1,2   ),W(1,7   ),W(1,10  ),GAL ,AMP(4   ))
      CALL IOVXXX(W(1,2   ),W(1,7   ),W(1,11  ),GZL ,AMP(5   ))  
      CALL FVIXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,8  ))    
      CALL IOVXXX(W(1,8   ),W(1,3   ),W(1,11  ),GZN ,AMP(6   ))            
      
      wp(   mu) =  +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)
     
      enddo
             
      wp(4) = dcmplx(q(0),q(3))
      wp(5) = dcmplx(q(1),q(2))

      return
      END


c ------------------------------------------------------------	

      subroutine wmto4l(p,h,wm4l)
	
      IMPLICIT NONE

      REAL*8 P(0:3,2:5)
      complex*16 wm4l(0:5)
      integer lsign(2:5,4),h,ll   

	! possible lepton helicities:
	data (lsign(ll,1),ll=2,5) / -1, -1, -1, -1/  !h=1
	data (lsign(ll,2),ll=2,5) / -1, -1,  1,  1/  !h=2

	call wmto4ln(P,lsign(2,h),wm4l)
	end
c ------------------------------------------------------------	
       
      subroutine WMTO4LN(P,lsign,wm)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- -> e- ve~ mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   6) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=  11) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5),q(0:3)
      INTEGER lsign(2:5)
      complex*16 wm(0:5)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu

      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C   
c  lepton spinors and V polarization vectors
#include "tensorw.inc"
c 
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
c ----------
C BEGIN CODE
C ----------

	do i = 1,6
	   w(i,2) = wl(i)
	   w(i,3) = wn(i)
	   w(i,4) = lp(i)
	   w(i,5) = lm(i)
	   
	   w(i,6) = we(i)	   
 	   w(i,10) = au(i)	   
	   w(i,11) = zu(i)	   
	 enddo  

             
      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo


      do mu = 0,3
      CALL VCARTX(Q(0),wmass ,wwidth, MU,-1,W(1,1   ))
      CALL FVIXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))          
      CALL IOVXXX(W(1,7   ),W(1,5   ),W(1,1),GWF  ,amp(1))                       
      CALL VVVXXX(W(1,6),W(1,1),W(1,10),GWWA,AMP(2))
      CALL VVVXXX(W(1,6),W(1,1),W(1,11),GWWZ,AMP(3))                              
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,8  ))    
      CALL IOVXXX(W(1,8   ),W(1,2   ),W(1,10),GAL  ,AMP(4))
      CALL IOVXXX(W(1,8   ),W(1,2   ),W(1,11),GZL  ,AMP(5))		 
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,9 ))    
      CALL IOVXXX(W(1,3   ),W(1,9   ),W(1,11),GZN  ,AMP(6))
            
      wm(   mu)  = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)
     
      enddo
             
      wm(4) = dcmplx(q(0),q(3))
      wm(5) = dcmplx(q(1),q(2))

      END
		

c ------------------------------------------------------------	

      subroutine WMVtoln(id,Q,v,wma,wmz)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           id = 1      Q = q1 = W- momentum
c           id = 2      Q = q2 = gamma/Z momentum
c  OUPTPUT: wma(mu,nu)  lepton tensor for w gamma--> mu- nubar
c           wmz(mu,nu)  lepton tensor for w Z    --> mu- nubar
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- z -> mu- vm~  
C and           w- a -> mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   3) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=   7)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer id
      real*8 q(0:3), v(0:3,4)
      complex*16 wma(0:3,0:3), wmz(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      real*8 q2sq, Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS), denz
c  lepton spinors and W+- polarization vectors
#include "tensorw.inc"

      logical ldebug
      parameter (ldebug=.false.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (id.eq.1) then
         q2(0) = dreal(we(5))
         q2(1) = dreal(we(6))
         q2(2) = dimag(we(6))
         q2(3) = dimag(we(5))
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = q2(mu)-q(mu)
         enddo
      elseif (id.eq.2) then
         q1(0) = dreal(we(5))
         q1(1) = dreal(we(6))
         q1(2) = dimag(we(6))
         q1(3) = dimag(we(5))
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = q1(mu)-q(mu)
         enddo
      endif

      do i=1,6                  ! read in lepton states from common block
         w(i,3) = wl(i)
         w(i,4) = wn(i)
	 w(i,7) = we(i)
      enddo

      q2sq = q2(0)**2-q2(1)**2-q2(2)**2-q2(3)**2
      denz = q2sq/dcmplx(q2sq-zmass**2,zmass*zwidth)
      DO MU = 0,3
         CALL VCARTX(Q1(0),WMASS ,Wwidth, MU,-1,W(1,1))        
         CALL FVOXXX(W(1,3),W(1,1),GWF ,ZERO,ZERO,W(1,6))    
         DO NU = 0,3
            CALL VCARTX(Q2(0),ZERO  ,ZERO  , NU,-1,W(1,2))
            CALL FVOXXX(W(1,3),W(1,2),GZL ,ZERO,ZERO,W(1,5))    
            CALL IOVXXX(W(1,4),W(1,5),W(1,1),GWF ,AMP(1))   
	    CALL IOVXXX(W(1,4),W(1,6),W(1,2),GZN ,AMP(2))            
	    CALL VVVXXX (W(1,7),W(1,1),W(1,2),GWWZ,AMP(3))
            wmz(mu,nu) = (-AMP(   1)-AMP(   2)-AMP(   3))*denz
            wma(mu,nu) = -(amp(1)*gal(1)/gzl(1)+amp(3)*gwwa/gwwz)
         enddo
      enddo

      end

c----------------------------------------------------------------

      subroutine WPVtoln(id,Q,v,wpa,wpz)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           id = 1      Q = q1 = W+ momentum
c           id = 2      Q = q2 = gamma/Z momentum
c  OUPTPUT: wpa(mu,nu)  lepton tensor for w gamma--> e+nu
c           wpz(mu,nu)  lepton tensor for w Z    --> e+nu
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+(q1) z(q2) -> e+ ve  
C FOR PROCESS : w+(q1) a(q2) -> e+ ve  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   3) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=   7) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS
C
      integer id
      real*8 q(0:3), v(0:3,4)
      complex*16 wpa(0:3,0:3), wpz(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      real*8 q2sq, Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS), denz
c  lepton spinors and W+- polarization vectors
#include "tensorw.inc"

      logical ldebug
      parameter (ldebug=.false.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      
      if (id.eq.1) then
         q2(0) = dreal(we(5))
         q2(1) = dreal(we(6))
         q2(2) = dimag(we(6))
         q2(3) = dimag(we(5))
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = q2(mu)-q(mu)
         enddo
      elseif (id.eq.2) then
         q1(0) = dreal(we(5))
         q1(1) = dreal(we(6))
         q1(2) = dimag(we(6))
         q1(3) = dimag(we(5))
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = q1(mu)-q(mu)
         enddo
      endif
c
      do i=1,6                  ! read in lepton states from common block
         w(i,3) = wl(i)
         w(i,4) = wn(i)
	 w(i,7) = we(i)
      enddo

      q2sq = q2(0)**2-q2(1)**2-q2(2)**2-q2(3)**2
      denz = q2sq/dcmplx(q2sq-zmass**2,zmass*zwidth)
      DO MU = 0,3
         DO NU = 0,3
            CALL VCARTX(Q1(0),WMASS ,Wwidth, MU,-1,W(1,1))        
            CALL VCARTX(Q2(0),ZERO  ,ZERO  , NU,-1,W(1,2))
            CALL FVIXXX(W(1,3),W(1,2),GZL ,ZERO,ZERO,W(1,5))    
            CALL IOVXXX(W(1,5),W(1,4),W(1,1),GWF ,AMP(1))            
            CALL FVIXXX(W(1,3),W(1,1),GWF ,ZERO,ZERO,W(1,6))    
            CALL IOVXXX(W(1,6),W(1,4),W(1,2),GZN ,AMP(2))	                
            CALL VVVXXX(W(1,1),W(1,7),W(1,2),GWWZ ,AMP(3))            
            wpz(mu,nu) = (-AMP(   1)-AMP(   2)-AMP(   3))*denz
            wpa(mu,nu) = -(amp(1)*gal(1)/gzl(1)+amp(3)*gwwa/gwwz)
         enddo
      enddo

      end

c ------------------------------------------------------------	

      subroutine vvtomm(idb,h,Q,v,aa,az,za,zz)
      
c 	tensor for VV->mu+mu- with V=A,Z      
	
      IMPLICIT NONE

        integer idb,idbb,h
        real*8 q(0:3), v(0:3,4)
        complex*16 aa(0:3,0:3)
        complex*16 az(0:3,0:3)
        complex*16 za(0:3,0:3)
        complex*16 zz(0:3,0:3)
	integer lsign(2,2),ll,nu
      	
	data (lsign(ll,1),ll=1,2) / -1, -1/
	data (lsign(ll,2),ll=1,2) / +1, +1/
	
	idbb = -idb+3

	call AAtoMM1(idb ,Q,v,lsign(1,h),aa(0,0))
	call AZtoMM1(idb ,Q,v,lsign(1,h),az(0,0))
	call AZtoMM1(idbb,Q,v,lsign(1,h),za(0,0)) 
	call ZZtoMM1(idb ,Q,v,lsign(1,h),zz(0,0))
				
	end
		
c ------------------------------------------------------------	
       
      subroutine AAtoMM1(idb,Q,v,lsign,aa)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = A(2) momentum
c  OUPTPUT: aa(mu,nu)  lepton tensor for a a --> mu+mu-  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a a -> mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS   
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 aa(0:3,0:3)
      integer lsign(3:4)
C    
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
	    q2(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      endif
	 
      if (lswitch) then
	do i = 1,6
	   w(i,3) = lp(i)
	   w(i,4) = lm(i)
	enddo
      else
       	CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
       	CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
      endif    
	     
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zero ,zero, MU,-1,W(1,1	  ))	    
      CALL VCARTX(Q2(0),zero ,zero, NU,-1,W(1,2	  )) 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GAL ,AMP(2   ))            
      
      aa(mu,nu) = +AMP(   1)+AMP(   2)
        
	 enddo !nu
      enddo !mu

      end

c ------------------------------------------------------------	
       
      subroutine AZtoMM1(idb,Q,v,lsign,az)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = Z(2) momentum
c  OUPTPUT: az(mu,nu)  lepton tensor for a z --> l+l-  
C  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a z -> mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 az(0:3,0:3)
      integer lsign(3:4)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
	    q2(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      endif
	 

      if (lswitch) then
	do i = 1,6
	   w(i,3) = lp(i)
	   w(i,4) = lm(i)
	enddo
      else
       	CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
       	CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
      endif 
             
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zero  ,zero, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),zMASS ,zwidth, NU,-1,W(1,2   )) 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZL ,AMP(2   ))            
      
      az(mu,nu) = +AMP(   1)+AMP(   2)
         
	 enddo !nu
      enddo !mu

      end

c ------------------------------------------------------------	
       
      subroutine ZZtoMM1(idb,Q,v,lsign,zz)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = Z(1) momentum
c           idb = 2      Q = q2 = Z(2) momentum
c  OUPTPUT: zz(mu,nu)  lepton tensor for z z --> l+l-  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z z -> mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS   
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 zz(0:3,0:3)
      integer lsign(3:4)
C  
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
	    q2(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      endif 
 
      if (lswitch) then
	do i = 1,6
	   w(i,3) = lp(i)
	   w(i,4) = lm(i)
	enddo
      else
       	CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
       	CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
      endif 
             
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zMASS ,zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),zMASS ,zwidth, NU,-1,W(1,2   )) 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZL ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZL ,AMP(2   ))            
      
      zz(mu,nu) = +AMP(   1)+AMP(   2)
        
	 enddo !nu
      enddo !mu

      end

  
c ------------------------------------------------------------	
c ------------------------------------------------------------	

      subroutine vwtovwp(q1,q2,P,h,zwp,awp)
	
      IMPLICIT NONE

      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 zwp(0:3,0:3), awp(0:3,0:3)
      integer lsign(3:6,2),ll,h
      

	! possible lepton helicities:
	data (lsign(ll,1),ll=3,6) / -1, -1, -1, -1/  !h=1
	data (lsign(ll,2),ll=3,6) / -1, -1,  1,  1/  !h=2
	
	call zwtovwp1(q1,q2,P,lsign(3,h),zwp(0,0))
	call awtovwp1(q1,q2,P,lsign(3,h),awp(0,0))
	
	! helicity combi nr.h is selected
	
	end
		
c ------------------------------------------------------------	

      subroutine zwtovwp1(q1,q2,P,lsign,zwp)
	
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z w+ -> e+ ve mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=  41) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=  51) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8  Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 zwp(0:3,0:3)
      integer lsign(3:6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors and Z polarization vectors
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C                                                                          
C ----------
C BEGIN CODE
C ----------

      if (lswitch) then
      	do i = 1,6
         w(i,3) = wl(i)
         w(i,4) = wn(i)
         w(i,5) = lp(i)
         w(i,6) = lm(i)

	 w(i,12) = au(i)
	 w(i,14) = zu(i)
	 w(i,36) = we(i)
      	enddo
      else 
        CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3   ),-1,W(1,3   ))	    
        CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4   ),+1,W(1,4   ))	    
        CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5   ),-1,W(1,5   ))	    
        CALL OXXXXX(P(0,6   ),ZERO ,+lsign(6   ),+1,W(1,6   ))	    
     
        CALL JIOXXX(W(1,5   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,12  ))    
        CALL JIOXXX(W(1,5   ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,14  ))    
        CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,36  ))    
      endif

      DO MU = 0,3
         DO NU = 0,3
       
      CALL VCARTX(Q1(0),ZMASS ,zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 

      CALL FVIXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    
      CALL FVIXXX(W(1,5   ),W(1,8   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GZL ,AMP(1   ))            
      CALL FVIXXX(W(1,5   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,8   ),GZL ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL JIOXXX(W(1,3   ),W(1,11  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL VVVXXX(W(1,2   ),W(1,13  ),W(1,12  ),GWWA ,AMP(3   ))           
      CALL VVVXXX(W(1,2   ),W(1,13  ),W(1,14  ),GWWZ ,AMP(4   ))           
      CALL FVIXXX(W(1,5   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL JIOXXX(W(1,15  ),W(1,6   ),GWF ,WMASS   ,WWIDTH  ,W(1,16  ))    
      CALL IOVXXX(W(1,3   ),W(1,11  ),W(1,16  ),GWF ,AMP(5   ))            
      CALL FVOXXX(W(1,11  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL IOVXXX(W(1,3   ),W(1,17  ),W(1,12  ),GAL ,AMP(6   ))            
      CALL IOVXXX(W(1,3   ),W(1,17  ),W(1,14  ),GZL ,AMP(7   ))            
      CALL FVIXXX(W(1,7   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL JIOXXX(W(1,18  ),W(1,4   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,19  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,19  ),GZL ,AMP(8   ))            
      CALL JIOXXX(W(1,7   ),W(1,11  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,20  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,20  ),GZL ,AMP(9   ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL FVOXXX(W(1,6   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL JIOXXX(W(1,3   ),W(1,21  ),GAL ,ZERO    ,ZERO    ,W(1,23  ))    
      CALL IOVXXX(W(1,5   ),W(1,22  ),W(1,23  ),GAL ,AMP(10  ))            
      CALL JIOXXX(W(1,3   ),W(1,21  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,24  ))    
      CALL IOVXXX(W(1,5   ),W(1,22  ),W(1,24  ),GZL ,AMP(11  ))            
      CALL JIOXXX(W(1,10  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL IOVXXX(W(1,3   ),W(1,21  ),W(1,25  ),GAL ,AMP(12  ))            
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,26  ))    
      CALL IOVXXX(W(1,3   ),W(1,21  ),W(1,26  ),GZL ,AMP(13  ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL JIOXXX(W(1,27  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,28  ))    
      CALL JVVXXX(W(1,2   ),W(1,28  ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     29  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,29  ),GAL ,AMP(14  ))            
      CALL JVVXXX(W(1,2   ),W(1,28  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     30  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,30  ),GZL ,AMP(15  ))            
      CALL IOVXXX(W(1,15  ),W(1,6   ),W(1,28  ),GWF ,AMP(16  ))            
      CALL FVOXXX(W(1,21  ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL IOVXXX(W(1,3   ),W(1,31  ),W(1,12  ),GAL ,AMP(17  ))            
      CALL IOVXXX(W(1,3   ),W(1,31  ),W(1,14  ),GZL ,AMP(18  ))            
      CALL FVIXXX(W(1,27  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,32  ),W(1,4   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,33  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,33  ),GZL ,AMP(19  ))            
      CALL JIOXXX(W(1,27  ),W(1,21  ),GAL ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,34  ),GAL ,AMP(20  ))            
      CALL JIOXXX(W(1,27  ),W(1,21  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,35  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,35  ),GZL ,AMP(21  ))            
      CALL JVVXXX(W(1,2   ),W(1,36  ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     37  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,22  ),W(1,37  ),GAL ,AMP(22  ))            
      CALL JVVXXX(W(1,2   ),W(1,36  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     38  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,22  ),W(1,38  ),GZL ,AMP(23  ))            
      CALL HVVXXX(W(1,2   ),W(1,36  ),GWWH ,HMASS   ,HWIDTH  ,W(1,         
     &     39  ))                                                          
      CALL VVSXXX(W(1,14  ),W(1,1   ),W(1,39  ),GZZH ,AMP(24  ))           
      CALL FVOXXX(W(1,6   ),W(1,36  ),GWF ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,10  ),W(1,40  ),W(1,2   ),GWF ,AMP(25  ))            
      CALL VVVXXX(W(1,2   ),W(1,36  ),W(1,25  ),GWWA ,AMP(26  ))           
      CALL VVVXXX(W(1,2   ),W(1,36  ),W(1,26  ),GWWZ ,AMP(27  ))           
      CALL IOVXXX(W(1,15  ),W(1,22  ),W(1,36  ),GWF ,AMP(28  ))            
      CALL JVVXXX(W(1,36  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     41  ))                                                          
      CALL VVVXXX(W(1,2   ),W(1,41  ),W(1,12  ),GWWA ,AMP(29  ))           
      CALL VVVXXX(W(1,2   ),W(1,41  ),W(1,14  ),GWWZ ,AMP(30  ))           
      CALL IOVXXX(W(1,15  ),W(1,40  ),W(1,1   ),GZN ,AMP(31  ))            
      CALL VVVXXX(W(1,16  ),W(1,36  ),W(1,1   ),GWWZ ,AMP(32  ))           
      CALL JVVXXX(W(1,1   ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     42  ))                                                          
      CALL FVOXXX(W(1,4   ),W(1,42  ),GWF ,ZERO    ,ZERO    ,W(1,43  ))    
      CALL JIOXXX(W(1,3   ),W(1,43  ),GAL ,ZERO    ,ZERO    ,W(1,44  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,44  ),GAL ,AMP(33  ))            
      CALL JIOXXX(W(1,3   ),W(1,43  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,45  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,45  ),GZL ,AMP(34  ))            
      CALL FVIXXX(W(1,3   ),W(1,42  ),GWF ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL JIOXXX(W(1,46  ),W(1,4   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,47  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,47  ),GZL ,AMP(35  ))            
      CALL JVVXXX(W(1,42  ),W(1,36  ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     48  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,48  ),GAL ,AMP(36  ))            
      CALL JVVXXX(W(1,42  ),W(1,36  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     49  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,49  ),GZL ,AMP(37  ))            
      CALL FVIXXX(W(1,5   ),W(1,42  ),GWF ,ZERO    ,ZERO    ,W(1,50  ))    
      CALL IOVXXX(W(1,50  ),W(1,6   ),W(1,36  ),GWF ,AMP(38  ))            
      CALL W3W3XX(W(1,2   ),W(1,1   ),W(1,36  ),W(1,12  ),GWWZ ,GWWA ,     
     &     AMP(39  ))                                                      
      CALL W3W3XX(W(1,2   ),W(1,1   ),W(1,36  ),W(1,14  ),GWWZ ,GWWZ ,     
     &     AMP(40  ))                                                      
c second Higgs
      CALL HVVXXX(W(1,2   ),W(1,36  ),GWWH2,H2MASS  ,H2WIDTH ,W(1,         
     &     51  ))                                                          
      CALL VVSXXX(W(1,14  ),W(1,1   ),W(1,51  ),GZZH2,AMP(41  ))           
      
      zwp(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)+AMP(  34)+AMP(  35)
     &             +AMP(  36)+AMP(  37)+AMP(  38)+AMP(  39)+AMP(  40)
      if (with_secondhiggs) then
        zwp(mu,nu)  = zwp(mu,nu) +AMP(  41)
      endif
          
          ENDDO
      ENDDO
 
      END

c ------------------------------------------------------------	

      subroutine awtovwp1(q1,q2,P,lsign,awp)
	  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a w+ -> e+ ve mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  31) 
c#include "genps.inc"
      INTEGER    NWAVEFUNCS    
      PARAMETER (NWAVEFUNCS=  43) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 awp(0:3,0:3)
      integer lsign(3:6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors and Z polarization vectors
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
c
#include "VBFNLO/utilities/coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C                                                                          
C ----------
C BEGIN CODE
C ----------

      if (lswitch) then
      	do i = 1,6
         w(i,3) = wl(i)
         w(i,4) = wn(i)
         w(i,5) = lp(i)
         w(i,6) = lm(i)

	 w(i,22) = au(i)
	 w(i,24) = zu(i)
	 w(i,29) = we(i)
      	enddo
      else 
	CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3   ),-1,W(1,3   ))	    
      	CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4   ),+1,W(1,4   ))	    
      	CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5   ),-1,W(1,5   ))	    
      	CALL OXXXXX(P(0,6   ),ZERO ,+lsign(6   ),+1,W(1,6   ))
     
      	CALL JIOXXX(W(1,5   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,22  ))    
      	CALL JIOXXX(W(1,5   ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,24  ))    
      	CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,29  ))         
      endif	    

      DO MU = 0,3
         DO NU = 0,3
       
      CALL VCARTX(Q1(0),ZERO ,zero, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 

      CALL FVIXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    
      CALL FVIXXX(W(1,5   ),W(1,8   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL FVIXXX(W(1,5   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,8   ),GZL ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL FVOXXX(W(1,6   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,11  ),GAL ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,13  ),GAL ,AMP(3   ))            
      CALL JIOXXX(W(1,3   ),W(1,11  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,14  ),GZL ,AMP(4   ))            
      CALL JIOXXX(W(1,10  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL IOVXXX(W(1,3   ),W(1,11  ),W(1,15  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,16  ))    
      CALL IOVXXX(W(1,3   ),W(1,11  ),W(1,16  ),GZL ,AMP(6   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,17  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,18  ))    
      CALL JVVXXX(W(1,2   ),W(1,18  ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     19  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,19  ),GAL ,AMP(7   ))            
      CALL JVVXXX(W(1,2   ),W(1,18  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     20  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,20  ),GZL ,AMP(8   ))            
      CALL FVIXXX(W(1,5   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL IOVXXX(W(1,21  ),W(1,6   ),W(1,18  ),GWF ,AMP(9   ))            
      CALL FVOXXX(W(1,11  ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,23  ))    
      CALL IOVXXX(W(1,3   ),W(1,23  ),W(1,22  ),GAL ,AMP(10  ))            
      CALL IOVXXX(W(1,3   ),W(1,23  ),W(1,24  ),GZL ,AMP(11  ))            
      CALL FVIXXX(W(1,17  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL JIOXXX(W(1,25  ),W(1,4   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,26  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,26  ),GZL ,AMP(12  ))            
      CALL JIOXXX(W(1,17  ),W(1,11  ),GAL ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,27  ),GAL ,AMP(13  ))            
      CALL JIOXXX(W(1,17  ),W(1,11  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,28  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,28  ),GZL ,AMP(14  ))            
      CALL JVVXXX(W(1,2   ),W(1,29  ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     30  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,30  ),GAL ,AMP(15  ))            
      CALL JVVXXX(W(1,2   ),W(1,29  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     31  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,31  ),GZL ,AMP(16  ))            
      CALL FVOXXX(W(1,6   ),W(1,29  ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL IOVXXX(W(1,10  ),W(1,32  ),W(1,2   ),GWF ,AMP(17  ))            
      CALL VVVXXX(W(1,2   ),W(1,29  ),W(1,15  ),GWWA ,AMP(18  ))           
      CALL VVVXXX(W(1,2   ),W(1,29  ),W(1,16  ),GWWZ ,AMP(19  ))           
      CALL IOVXXX(W(1,21  ),W(1,12  ),W(1,29  ),GWF ,AMP(20  ))            
      CALL JVVXXX(W(1,29  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     33  ))                                                          
      CALL VVVXXX(W(1,2   ),W(1,33  ),W(1,22  ),GWWA ,AMP(21  ))           
      CALL VVVXXX(W(1,2   ),W(1,33  ),W(1,24  ),GWWZ ,AMP(22  ))           
      CALL JIOXXX(W(1,21  ),W(1,6   ),GWF ,WMASS   ,WWIDTH  ,W(1,34  ))    
      CALL VVVXXX(W(1,34  ),W(1,29  ),W(1,1   ),GWWA ,AMP(23  ))           
      CALL JVVXXX(W(1,1   ),W(1,2   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     35  ))                                                          
      CALL FVOXXX(W(1,4   ),W(1,35  ),GWF ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL JIOXXX(W(1,3   ),W(1,36  ),GAL ,ZERO    ,ZERO    ,W(1,37  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,37  ),GAL ,AMP(24  ))            
      CALL JIOXXX(W(1,3   ),W(1,36  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,38  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,38  ),GZL ,AMP(25  ))            
      CALL FVIXXX(W(1,3   ),W(1,35  ),GWF ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL JIOXXX(W(1,39  ),W(1,4   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,40  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,40  ),GZL ,AMP(26  ))            
      CALL JVVXXX(W(1,35  ),W(1,29  ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     41  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,41  ),GAL ,AMP(27  ))            
      CALL JVVXXX(W(1,35  ),W(1,29  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     42  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,42  ),GZL ,AMP(28  ))            
      CALL FVIXXX(W(1,5   ),W(1,35  ),GWF ,ZERO    ,ZERO    ,W(1,43  ))    
      CALL IOVXXX(W(1,43  ),W(1,6   ),W(1,29  ),GWF ,AMP(29  ))            
      CALL W3W3XX(W(1,2   ),W(1,1   ),W(1,29  ),W(1,22  ),GWWA ,GWWA ,     
     &     AMP(30  ))                                                      
      CALL W3W3XX(W(1,2   ),W(1,24  ),W(1,29  ),W(1,1   ),GWWZ ,GWWA ,     
     &     AMP(31  ))               
                                            
      awp(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)

c test only:     
c      awp(mu,nu) = 0d0
     
          ENDDO
      ENDDO
c
      END
c ------------------------------------------------------------	

      subroutine vwtovwm(q1,q2,P,h,zwm,awm)
	
      IMPLICIT NONE

      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 zwm(0:3,0:3), awm(0:3,0:3)
      integer lsign(3:6,2),ll,h
      

	! possible lepton helicities:
	data (lsign(ll,1),ll=3,6) /  -1,  -1, -1, -1/  !h=1
	data (lsign(ll,2),ll=3,6) /  -1,  -1,  1,  1/  !h=2

	! helicity combi nr.h is selected
	
	call zwtovwm1(q1,q2,P,lsign(3,h),zwm(0,0))
	call awtovwm1(q1,q2,P,lsign(3,h),awm(0,0))
		
	
	end
		
c ------------------------------------------------------------	

      subroutine zwtovwm1(q1,q2,P,lsign,zwm)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z w- -> e- ve~ mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  41) 
      INTEGER    NWAVEFUNCS     
      PARAMETER (NWAVEFUNCS=  50) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 zwm(0:3,0:3)
      integer lsign(3:6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
c  lepton spinors and Z polarization vectors
#include "tensorw.inc"
      
#include "VBFNLO/utilities/coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------

      if (lswitch) then
      	do i = 1,6
         w(i,3) = wl(i)
         w(i,4) = wn(i)
         w(i,5) = lp(i)
         w(i,6) = lm(i)

	 w(i,14) = au(i)
	 w(i,15) = zu(i)
	 w(i,36) = we(i)
      	enddo
      else 
      	CALL OXXXXX(P(0,3   ),ZERO ,+lsign(3   ),+1,W(1,3   ))	   
      	CALL IXXXXX(P(0,4   ),ZERO ,-lsign(4   ),-1,W(1,4   ))	   
      	CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5   ),-1,W(1,5   ))	   
      	CALL OXXXXX(P(0,6   ),ZERO ,+lsign(6   ),+1,W(1,6   ))	   
      	
	CALL JIOXXX(W(1,5   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,14  ))    
        CALL JIOXXX(W(1,5   ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,15  ))    
        CALL JIOXXX(W(1,4   ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,36  ))    
      endif
	

      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),ZMASS ,zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 
 
      CALL FVOXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,4   ),W(1,7   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    
      CALL FVIXXX(W(1,5   ),W(1,8   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GZL ,AMP(1   ))
      CALL FVIXXX(W(1,5   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,8   ),GZL ,AMP(2   ))            
      CALL FVIXXX(W(1,4   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL FVOXXX(W(1,6   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,11  ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,13  ),GWF ,AMP(3   ))            
      CALL VVVXXX(W(1,13  ),W(1,2   ),W(1,14  ),GWWA ,AMP(4   ))           
      CALL VVVXXX(W(1,13  ),W(1,2   ),W(1,15  ),GWWZ ,AMP(5   ))           
      CALL FVIXXX(W(1,11  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,16  ),W(1,3   ),W(1,14  ),GAL ,AMP(6   ))            
      CALL IOVXXX(W(1,16  ),W(1,3   ),W(1,15  ),GZL ,AMP(7   ))            
      CALL FVOXXX(W(1,7   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,4   ),W(1,17  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,18  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,18  ),GZL ,AMP(8   ))            
      CALL JIOXXX(W(1,11  ),W(1,7   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,19  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,19  ),GZL ,AMP(9   ))            
      CALL FVIXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL FVOXXX(W(1,6   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL JIOXXX(W(1,20  ),W(1,3   ),GAL ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,22  ),GAL ,AMP(10  ))            
      CALL JIOXXX(W(1,20  ),W(1,3   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,23  ))    
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,23  ),GZL ,AMP(11  ))            
      CALL JIOXXX(W(1,10  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,20  ),W(1,3   ),W(1,24  ),GAL ,AMP(12  ))            
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,25  ))    
      CALL IOVXXX(W(1,20  ),W(1,3   ),W(1,25  ),GZL ,AMP(13  ))            
      CALL FVOXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL JIOXXX(W(1,4   ),W(1,26  ),GWF ,WMASS   ,WWIDTH  ,W(1,27  ))    
      CALL FVIXXX(W(1,5   ),W(1,27  ),GWF ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,28  ),W(1,6   ),W(1,2   ),GWF ,AMP(14  ))            
      CALL JVVXXX(W(1,27  ),W(1,2   ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     29  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,29  ),GAL ,AMP(15  ))            
      CALL JVVXXX(W(1,27  ),W(1,2   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     30  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,30  ),GZL ,AMP(16  ))            
      CALL FVIXXX(W(1,20  ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL IOVXXX(W(1,31  ),W(1,3   ),W(1,14  ),GAL ,AMP(17  ))            
      CALL IOVXXX(W(1,31  ),W(1,3   ),W(1,15  ),GZL ,AMP(18  ))            
      CALL FVOXXX(W(1,26  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,4   ),W(1,32  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,33  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,33  ),GZL ,AMP(19  ))            
      CALL JIOXXX(W(1,20  ),W(1,26  ),GAL ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,34  ),GAL ,AMP(20  ))            
      CALL JIOXXX(W(1,20  ),W(1,26  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,35  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,35  ),GZL ,AMP(21  ))            
      CALL JVVXXX(W(1,36  ),W(1,2   ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     37  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,37  ),GAL ,AMP(22  ))            
      CALL JVVXXX(W(1,36  ),W(1,2   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     38  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,38  ),GZL ,AMP(23  ))            
      CALL IOVXXX(W(1,10  ),W(1,12  ),W(1,36  ),GWF ,AMP(24  ))            
      CALL HVVXXX(W(1,36  ),W(1,2   ),GWWH ,HMASS   ,HWIDTH  ,W(1,         
     &     39  ))                                                          
      CALL VVSXXX(W(1,15  ),W(1,1   ),W(1,39  ),GZZH ,AMP(25  ))           
      CALL VVVXXX(W(1,36  ),W(1,2   ),W(1,24  ),GWWA ,AMP(26  ))           
      CALL VVVXXX(W(1,36  ),W(1,2   ),W(1,25  ),GWWZ ,AMP(27  ))           
      CALL JVVXXX(W(1,1   ),W(1,36  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     40  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,40  ),GWF ,AMP(28  ))            
      CALL VVVXXX(W(1,40  ),W(1,2   ),W(1,14  ),GWWA ,AMP(29  ))           
      CALL VVVXXX(W(1,40  ),W(1,2   ),W(1,15  ),GWWZ ,AMP(30  ))           
      CALL JVVXXX(W(1,2   ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     41  ))                                                          
      CALL FVIXXX(W(1,4   ),W(1,41  ),GWF ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL JIOXXX(W(1,42  ),W(1,3   ),GAL ,ZERO    ,ZERO    ,W(1,43  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,43  ),GAL ,AMP(31  ))            
      CALL JIOXXX(W(1,42  ),W(1,3   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,44  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,44  ),GZL ,AMP(32  ))            
      CALL FVOXXX(W(1,3   ),W(1,41  ),GWF ,ZERO    ,ZERO    ,W(1,45  ))    
      CALL JIOXXX(W(1,4   ),W(1,45  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,46  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,46  ),GZL ,AMP(33  ))            
      CALL FVIXXX(W(1,5   ),W(1,36  ),GWF ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,47  ),W(1,21  ),W(1,2   ),GWF ,AMP(34  ))            
      CALL IOVXXX(W(1,47  ),W(1,12  ),W(1,1   ),GZN ,AMP(35  ))            
      CALL JVVXXX(W(1,36  ),W(1,41  ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     48  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,48  ),GAL ,AMP(36  ))            
      CALL JVVXXX(W(1,36  ),W(1,41  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     49  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,49  ),GZL ,AMP(37  ))            
      CALL IOVXXX(W(1,47  ),W(1,6   ),W(1,41  ),GWF ,AMP(38  ))            
      CALL W3W3XX(W(1,36  ),W(1,1   ),W(1,2   ),W(1,14  ),GWWZ ,GWWA ,     
     &     AMP(39  ))                                                      
      CALL W3W3XX(W(1,36  ),W(1,1   ),W(1,2   ),W(1,15  ),GWWZ ,GWWZ ,     
     &     AMP(40  ))                                                      
c second Higgs
      CALL HVVXXX(W(1,36  ),W(1,2   ),GWWH2,H2MASS  ,H2WIDTH ,W(1,         
     &     50  ))                                                          
      CALL VVSXXX(W(1,15  ),W(1,1   ),W(1,50  ),GZZH2,AMP(41  ))           
             
      zwm(mu,nu) = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)-AMP(  22)-AMP(  23)-AMP(  24)-AMP(  25)
     &             -AMP(  26)-AMP(  27)-AMP(  28)-AMP(  29)-AMP(  30)
     &             -AMP(  31)-AMP(  32)-AMP(  33)-AMP(  34)-AMP(  35)
     &             -AMP(  36)-AMP(  37)-AMP(  38)-AMP(  39)-AMP(  40)
      if (with_secondhiggs) then
        zwm(mu,nu)  = zwm(mu,nu) -AMP(  41)
      endif

	   ENDDO
       ENDDO

     
      END
      
c ------------------------------------------------------------	

      subroutine awtovwm1(q1,q2,P,lsign,awm)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a w- -> e- ve~ mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  31) 
      INTEGER    NWAVEFUNCS     
      PARAMETER (NWAVEFUNCS=  42) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 awm(0:3,0:3)
      integer lsign(3:6)
C  
C LOCAL VARIABLES 
C  
      INTEGER MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
c
C ----------
C BEGIN CODE
C ----------

      CALL OXXXXX(P(0,3   ),ZERO ,+lsign(3   ),+1,W(1,3   ))        
      CALL IXXXXX(P(0,4   ),ZERO ,-lsign(4   ),-1,W(1,4   ))        
      CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5   ),-1,W(1,5   ))        
      CALL OXXXXX(P(0,6   ),ZERO ,+lsign(6   ),+1,W(1,6   ))        

      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),ZERO,zero, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 

      CALL FVOXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,4   ),W(1,7   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    
      CALL FVIXXX(W(1,5   ),W(1,8   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL FVIXXX(W(1,5   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,8   ),GZL ,AMP(2   ))            
      CALL FVIXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL FVOXXX(W(1,6   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,11  ),W(1,3   ),GAL ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,13  ),GAL ,AMP(3   ))            
      CALL JIOXXX(W(1,11  ),W(1,3   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,14  ))    
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,14  ),GZL ,AMP(4   ))            
      CALL JIOXXX(W(1,10  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL IOVXXX(W(1,11  ),W(1,3   ),W(1,15  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,16  ))    
      CALL IOVXXX(W(1,11  ),W(1,3   ),W(1,16  ),GZL ,AMP(6   ))            
      CALL FVOXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,4   ),W(1,17  ),GWF ,WMASS   ,WWIDTH  ,W(1,18  ))    
      CALL FVIXXX(W(1,5   ),W(1,18  ),GWF ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL IOVXXX(W(1,19  ),W(1,6   ),W(1,2   ),GWF ,AMP(7   ))            
      CALL JVVXXX(W(1,18  ),W(1,2   ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     20  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,20  ),GAL ,AMP(8   ))            
      CALL JVVXXX(W(1,18  ),W(1,2   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     21  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,21  ),GZL ,AMP(9   ))            
      CALL JIOXXX(W(1,5   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL FVIXXX(W(1,11  ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,23  ))    
      CALL IOVXXX(W(1,23  ),W(1,3   ),W(1,22  ),GAL ,AMP(10  ))            
      CALL JIOXXX(W(1,5   ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,24  ))    
      CALL IOVXXX(W(1,23  ),W(1,3   ),W(1,24  ),GZL ,AMP(11  ))            
      CALL FVOXXX(W(1,17  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL JIOXXX(W(1,4   ),W(1,25  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,26  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,26  ),GZL ,AMP(12  ))            
      CALL JIOXXX(W(1,11  ),W(1,17  ),GAL ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,27  ),GAL ,AMP(13  ))            
      CALL JIOXXX(W(1,11  ),W(1,17  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,28  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,28  ),GZL ,AMP(14  ))            
      CALL JIOXXX(W(1,4   ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,29  ))    
      CALL JVVXXX(W(1,29  ),W(1,2   ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     30  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,30  ),GAL ,AMP(15  ))            
      CALL JVVXXX(W(1,29  ),W(1,2   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     31  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,31  ),GZL ,AMP(16  ))            
      CALL FVOXXX(W(1,6   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL IOVXXX(W(1,10  ),W(1,32  ),W(1,29  ),GWF ,AMP(17  ))            
      CALL VVVXXX(W(1,29  ),W(1,2   ),W(1,15  ),GWWA ,AMP(18  ))           
      CALL VVVXXX(W(1,29  ),W(1,2   ),W(1,16  ),GWWZ ,AMP(19  ))           
      CALL JVVXXX(W(1,1   ),W(1,29  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     33  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,32  ),W(1,33  ),GWF ,AMP(20  ))            
      CALL VVVXXX(W(1,33  ),W(1,2   ),W(1,22  ),GWWA ,AMP(21  ))           
      CALL VVVXXX(W(1,33  ),W(1,2   ),W(1,24  ),GWWZ ,AMP(22  ))           
      CALL JVVXXX(W(1,2   ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     34  ))                                                          
      CALL FVIXXX(W(1,4   ),W(1,34  ),GWF ,ZERO    ,ZERO    ,W(1,35  ))    
      CALL JIOXXX(W(1,35  ),W(1,3   ),GAL ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,36  ),GAL ,AMP(23  ))            
      CALL JIOXXX(W(1,35  ),W(1,3   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,37  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,37  ),GZL ,AMP(24  ))            
      CALL FVOXXX(W(1,3   ),W(1,34  ),GWF ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL JIOXXX(W(1,4   ),W(1,38  ),GZN ,ZMASS   ,ZWIDTH  ,W(1,39  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,39  ),GZL ,AMP(25  ))            
      CALL FVIXXX(W(1,5   ),W(1,29  ),GWF ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,40  ),W(1,12  ),W(1,2   ),GWF ,AMP(26  ))            
      CALL JVVXXX(W(1,29  ),W(1,34  ),GWWA ,ZERO    ,ZERO    ,W(1,         
     &     41  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,41  ),GAL ,AMP(27  ))            
      CALL JVVXXX(W(1,29  ),W(1,34  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     42  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,42  ),GZL ,AMP(28  ))            
      CALL IOVXXX(W(1,40  ),W(1,6   ),W(1,34  ),GWF ,AMP(29  ))            
      CALL W3W3XX(W(1,29  ),W(1,1   ),W(1,2   ),W(1,22  ),GWWA ,GWWA ,     
     &     AMP(30  ))                                                      
      CALL W3W3XX(W(1,29  ),W(1,24  ),W(1,2   ),W(1,1   ),GWWZ ,GWWA ,     
     &     AMP(31  ))                                                      
      
      awm(mu,nu) = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)-AMP(  22)-AMP(  23)-AMP(  24)-AMP(  25)
     &             -AMP(  26)-AMP(  27)-AMP(  28)-AMP(  29)-AMP(  30)
     &             -AMP(  31)
          ENDDO
      ENDDO
      END
c ------------------------------------------------------------	

      subroutine wwtomm(idb,h,Q,v,wll)

c 	tensor for WW->mu+mu-       
	
      IMPLICIT NONE

        integer idb,h
        real*8 q(0:3), v(0:3,4)
        complex*16 wll(0:3,0:3)
	integer lsign(2,2),ll     

	data (lsign(ll,1),ll=1,2) / -1, -1/
	data (lsign(ll,2),ll=1,2) / +1, +1/
		
	call WWtoMM1(idb,Q,v,lsign(1,h),wll(0,0))
		
	end
		
c ------------------------------------------------------------	
       
      subroutine WWtoMM1(idb,Q,v,lsign,wll)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = W+ momentum
c           idb = 2      Q = q2 = W- momentum
c  OUPTPUT: wll(mu,nu)  lepton tensor for w w--> l+l-  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ w- -> l+ l-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   3) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=   9) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 wll(0:3,0:3)
      integer lsign(3:4)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors 
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu)  = q(mu)
	    q2(mu)  = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu)  = q(mu)
            q1(mu)  = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      endif
	  
      if (lswitch) then
      	do i = 1,6
         w(i,3) = lp(i)
         w(i,4) = lm(i)
   
       	 w(i,8) = au(i)
	 w(i,9) = zu(i)
	enddo
      else	
       CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
       CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
      endif       
	     
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),WMASS ,wwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,2   ),GWF ,AMP(1   ))       
      CALL VVVXXX(W(1,1   ),W(1,2   ),W(1,8   ),GWWA ,AMP(2   ))           
      CALL VVVXXX(W(1,1   ),W(1,2   ),W(1,9   ),GWWZ ,AMP(3   ))                 
      
      wll(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)
         
	 enddo !nu
      enddo !mu

      end
      
c ------------------------------------------------------------	
