
c ------------------------------------------------------------	

      subroutine wpto4l_had(p,h,wp4l)
	
      IMPLICIT NONE

      REAL*8 P(0:3,2:5)
      complex*16 wp4l(0:5)
      integer lsign(2:5,4),h,ll   

	! possible lepton helicities:
	data (lsign(ll,1),ll=2,5) / -1, -1, -1, -1/  !h=1
	data (lsign(ll,2),ll=2,5) / -1, -1,  1,  1/  !h=2

	call wpto4ln_had(P,lsign(2,h),wp4l)
	end
		
c ------------------------------------------------------------	
c ------------------------------------------------------------	
   
      subroutine wpto4LN_had(P,lsign,wp)

C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ -> e+ ve mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   7) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=  12) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5),q1(0:3)
      INTEGER lsign(2:5)
      complex*16 wp(0:5)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors and V polarization vectors
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
c
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------


	do i = 1,6
	   w(i,2) = wl(i)
	   w(i,3) = wn(i)
	   w(i,4) = lp(i)
	   w(i,5) = lm(i)
	   
	   w(i,6) = we(i)
	   w(i,10) = au(i)
	   w(i,11) = zu(i)
	enddo

      do mu = 0,3
         q1(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5) !W+ incoming
      enddo


      do mu = 0,3
      CALL VCARTX(Q1(0),wmass ,wwidth, MU,-1,W(1,1   ))
      CALL wwa_anomal3(W(1,1), W(1,6), W(1,10), AMP(1))
      CALL wwz_anomal3(W(1,1), W(1,6), W(1,11), AMP(2))
      CALL FVIXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,5   ),W(1,6   ),GWF ,AMP(3   ))           
      CALL FVOXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,7  ))    
      CALL IOVXXX(W(1,2   ),W(1,7   ),W(1,10  ),GWP_ADL ,AMP(4   ))
      CALL IOVXXX(W(1,2   ),W(1,7   ),W(1,11  ),GWP_ZDL ,AMP(5   ))  
      CALL FVIXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,8  ))    
      CALL IOVXXX(W(1,8   ),W(1,3   ),W(1,11  ),GWP_ZUN ,AMP(6   ))            
      
      wp(   mu) =  +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)

      if (procid .eq. WPhadZjj) then
        ! new graphs for W+ decay
        CALL IOVXXX(W(1,8   ),W(1,3   ),W(1,10  ),GWP_AUN ,AMP(7   ))            
        wp(   mu) =  wp(mu) + AMP(   7)
      endif

      if (procid.eq.WPZhadjj .and. Ztouu) then
        ! replace graph 3
        CALL FVOXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
        CALL IOVXXX(W(1,4   ),W(1,12  ),W(1,6   ),GWF ,AMP(7   ))           
        wp(   mu) =  wp(mu) - AMP(   3) + AMP(   7)
      endif

      enddo
             
      wp(4) = dcmplx(q1(0),q1(3))
      wp(5) = dcmplx(q1(1),q1(2))

      return
      END


c ------------------------------------------------------------	

      subroutine wmto4l_had(p,h,wm4l)
	
      IMPLICIT NONE

      REAL*8 P(0:3,2:5)
      complex*16 wm4l(0:5)
      integer lsign(2:5,4),h,ll   

	! possible lepton helicities:
	data (lsign(ll,1),ll=2,5) / -1, -1, -1, -1/  !h=1
	data (lsign(ll,2),ll=2,5) / -1, -1,  1,  1/  !h=2

	call wmto4ln_had(P,lsign(2,h),wm4l)
	end
c ------------------------------------------------------------	
       
      subroutine WMTO4LN_had(P,lsign,wm)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- -> e- ve~ mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   7) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=  12) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5),q1(0:3)
      INTEGER lsign(2:5)
      complex*16 wm(0:5)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu

      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C   
c  lepton spinors and V polarization vectors
#include "tensorw.inc"
c 
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
c ----------
C BEGIN CODE
C ----------

	do i = 1,6
	   w(i,2) = wl(i)
	   w(i,3) = wn(i)
	   w(i,4) = lp(i)
	   w(i,5) = lm(i)
	   
	   w(i,6) = we(i)	   
 	   w(i,10) = au(i)	   
	   w(i,11) = zu(i)	   
	 enddo  

      do mu = 0,3
         q1(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5) !W- incoming 
      enddo

      do mu = 0,3
      CALL VCARTX(Q1(0),wmass ,wwidth, MU,-1,W(1,1   ))
      CALL FVIXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))          
      CALL IOVXXX(W(1,7   ),W(1,5   ),W(1,1),GWF  ,amp(1))
      CALL wwa_anomal3(W(1,6),W(1,1),W(1,10),AMP(2))
      CALL wwz_anomal3(W(1,6),W(1,1),W(1,11),AMP(3))
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,8  ))    
      CALL IOVXXX(W(1,8   ),W(1,2   ),W(1,10),GWM_ADL  ,AMP(4))
      CALL IOVXXX(W(1,8   ),W(1,2   ),W(1,11),GWM_ZDL  ,AMP(5))		 
      CALL FVOXXX(W(1,2   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,9 ))    
      CALL IOVXXX(W(1,3   ),W(1,9   ),W(1,11),GWM_ZUN  ,AMP(6))
            
      wm(   mu)  = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)
     
      if (procid .eq. WMhadZjj) then
        ! new graphs for W- decay
      CALL IOVXXX(W(1,3   ),W(1,9   ),W(1,10),GWM_AUN  ,AMP(7))
        wm(   mu) =  wm(mu) - AMP(   7)
      endif

      if (procid.eq.WMZhadjj .and. Ztouu) then
        ! replace graph 1
      CALL FVOXXX(W(1,5   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))          
      CALL IOVXXX(W(1,4   ),W(1,12  ),W(1,1),GWF  ,amp(7))
        wm(   mu) =  wm(mu) + AMP(   1) - AMP(   7)
      endif

      enddo
             
      wm(4) = dcmplx(q1(0),q1(3))
      wm(5) = dcmplx(q1(1),q1(2))

      END
		

c ------------------------------------------------------------	

      subroutine WMVtoln_had(id,Q,v,wmatens,wmztens)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           id = 1      Q = q1 = W- momentum
c           id = 2      Q = q2 = gamma/Z momentum
c  OUPTPUT: wmatens(mu,nu)  lepton tensor for w gamma--> mu- nubar
c           wmztens(mu,nu)  lepton tensor for w Z    --> mu- nubar
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- z -> mu- vm~  
C and           w- a -> mu- vm~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   6) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=   8)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer id
      real*8 q(0:3), v(0:3,4)
      complex*16 wmatens(0:3,0:3), wmztens(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      real*8 q2sq, Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS), denz
c  lepton spinors and W+- polarization vectors
#include "tensorw.inc"

      logical ldebug
      parameter (ldebug=.false.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (id.eq.1) then
         q2(0) = dreal(we(5))
         q2(1) = dreal(we(6))
         q2(2) = dimag(we(6))
         q2(3) = dimag(we(5))
         do mu = 0,3
            q1(mu) = q(mu) !W- incoming
            q2(mu) = q2(mu)-q(mu) !A/Z incoming
         enddo
      elseif (id.eq.2) then
         q1(0) = dreal(we(5))
         q1(1) = dreal(we(6))
         q1(2) = dimag(we(6))
         q1(3) = dimag(we(5))
         do mu = 0,3
            q2(mu) = q(mu) !A/Z incoming
            q1(mu) = q1(mu)-q(mu) !W- incoming
         enddo
      endif

      do i=1,6                  ! read in lepton states from common block
         w(i,3) = wl(i)
         w(i,4) = wn(i)
         w(i,7) = we(i)
      enddo


      q2sq = q2(0)**2-q2(1)**2-q2(2)**2-q2(3)**2
      denz = q2sq/dcmplx(q2sq-zmass**2,zmass*zwidth)
      DO MU = 0,3
         CALL VCARTX(Q1(0),WMASS ,Wwidth, MU,-1,W(1,1))        
         CALL FVOXXX(W(1,3),W(1,1),GWF ,ZERO,ZERO,W(1,6))    
         DO NU = 0,3
          CALL VCARTX(Q2(0),ZERO  ,ZERO  , NU,-1,W(1,2))
          CALL FVOXXX(W(1,3),W(1,2),GWM_ZDL ,ZERO,ZERO,W(1,5))    
          CALL IOVXXX(W(1,4),W(1,5),W(1,1),GWF ,AMP(1))   
	    CALL IOVXXX(W(1,4),W(1,6),W(1,2),GWM_ZUN ,AMP(2)) 
	    CALL wwz_anomal3(W(1,7),W(1,1),W(1,2),AMP(3))
          CALL FVOXXX(W(1,3),W(1,2),GWM_ADL ,ZERO,ZERO,W(1,8))    
          CALL IOVXXX(W(1,4),W(1,8),W(1,1),GWF ,AMP(4))   
	    CALL IOVXXX(W(1,4),W(1,6),W(1,2),GWM_AUN ,AMP(5)) 
	    CALL wwa_anomal3(W(1,7),W(1,1),W(1,2),AMP(6))

          wmztens(mu,nu) = (-AMP(   1)-AMP(   2)-AMP(   3))*denz
          wmatens(mu,nu) = -(amp(4)+amp(6))

         if (procid .eq. WMhadZjj) then
           ! new graph for W- decay
           wmatens(mu,nu) = wmatens(mu,nu) - amp(5)
         endif

         enddo
      enddo

      end

c----------------------------------------------------------------

      subroutine WPVtoln_had(id,Q,v,wpatens,wpztens)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           id = 1      Q = q1 = W+ momentum
c           id = 2      Q = q2 = gamma/Z momentum
c  OUPTPUT: wpatens(mu,nu)  lepton tensor for w gamma--> e+nu
c           wpztens(mu,nu)  lepton tensor for w Z    --> e+nu
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+(q1) z(q2) -> e+ ve  
C FOR PROCESS : w+(q1) a(q2) -> e+ ve  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   6) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=   8) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS
C
      integer id
      real*8 q(0:3), v(0:3,4)
      complex*16 wpatens(0:3,0:3), wpztens(0:3,0:3)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      real*8 q2sq, Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS), denz
c  lepton spinors and W+- polarization vectors
#include "tensorw.inc"

      logical ldebug
      parameter (ldebug=.false.)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      
      if (id.eq.1) then
         q2(0) = dreal(we(5))
         q2(1) = dreal(we(6))
         q2(2) = dimag(we(6))
         q2(3) = dimag(we(5))
         do mu = 0,3
            q1(mu) = q(mu) !W+ incoming
            q2(mu) = q2(mu)-q(mu) !A/Z incoming
         enddo
      elseif (id.eq.2) then
         q1(0) = dreal(we(5))
         q1(1) = dreal(we(6))
         q1(2) = dimag(we(6))
         q1(3) = dimag(we(5))
         do mu = 0,3
            q2(mu) = q(mu) !W+ incoming
            q1(mu) = q1(mu)-q(mu) !A/Z incoming
         enddo
      endif
c
      do i=1,6                  ! read in lepton states from common block
         w(i,3) = wl(i)
         w(i,4) = wn(i)
         w(i,7) = we(i)
      enddo


      q2sq = q2(0)**2-q2(1)**2-q2(2)**2-q2(3)**2
      denz = q2sq/dcmplx(q2sq-zmass**2,zmass*zwidth)
      DO MU = 0,3
         DO NU = 0,3
            CALL VCARTX(Q1(0),WMASS ,Wwidth, MU,-1,W(1,1))        
            CALL VCARTX(Q2(0),ZERO  ,ZERO  , NU,-1,W(1,2))
            CALL FVIXXX(W(1,3),W(1,2),GWP_ZDL ,ZERO,ZERO,W(1,5))    
            CALL IOVXXX(W(1,5),W(1,4),W(1,1),GWF ,AMP(1))            
            CALL FVIXXX(W(1,3),W(1,1),GWF ,ZERO,ZERO,W(1,6))    
            CALL IOVXXX(W(1,6),W(1,4),W(1,2),GWP_ZUN ,AMP(2))
            CALL wwz_anomal3(W(1,1),W(1,7),W(1,2),AMP(3)) 
            CALL FVIXXX(W(1,3),W(1,2),GWP_ADL ,ZERO,ZERO,W(1,8))    
            CALL IOVXXX(W(1,8),W(1,4),W(1,1),GWF ,AMP(4))            
            CALL IOVXXX(W(1,6),W(1,4),W(1,2),GWP_AUN ,AMP(5))
            CALL wwa_anomal3(W(1,1),W(1,7),W(1,2),AMP(6)) 
          
            wpztens(mu,nu) = (-AMP(   1)-AMP(   2)-AMP(   3))*denz
            wpatens(mu,nu) = -(amp(4)+amp(6))

            if (procid .eq. WPhadZjj) then
              ! new graph for W+ decay
              wpatens(mu,nu) = wpatens(mu,nu) - amp(5)
            endif

         enddo
      enddo

      end

c ------------------------------------------------------------	

      subroutine vvtomm_had(idb,h,Q,v,aatens,az,za,zztens)
      
c 	tensor for VV->mu+mu- with V=A,Z      
	
      IMPLICIT NONE

        integer idb,idbb,h
        real*8 q(0:3), v(0:3,4)
        complex*16 aatens(0:3,0:3)
        complex*16 az(0:3,0:3)
        complex*16 za(0:3,0:3)
        complex*16 zztens(0:3,0:3)
	integer lsign(2,2),ll,mu,nu
      	
	data (lsign(ll,1),ll=1,2) / -1, -1/
	data (lsign(ll,2),ll=1,2) / +1, +1/
	
	idbb = -idb+3

	call AAtoMM1_had(idb ,Q,v,lsign(1,h),aatens(0,0))
	call AZtoMM1_had(idb ,Q,v,lsign(1,h),az(0,0))
	call AZtoMM1_had(idbb,Q,v,lsign(1,h),za(0,0)) 
	call ZZtoMM1_had(idb ,Q,v,lsign(1,h),zztens(0,0))
				
	end
		
c ------------------------------------------------------------	
       
      subroutine AAtoMM1_had(idb,Q,v,lsign,aatens)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = A(2) momentum
c  OUPTPUT: aatens(mu,nu)  lepton tensor for a a --> mu+mu-  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a a -> mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS   
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 aatens(0:3,0:3)
      integer lsign(3:4)
C    
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
	    q2(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      endif
	 
	do i = 1,6
	   w(i,3) = lp(i)
	   w(i,4) = lm(i)
	enddo

      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zero ,zero, MU,-1,W(1,1	  ))	    
      CALL VCARTX(Q2(0),zero ,zero, NU,-1,W(1,2	  )) 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZ_AF ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZ_AF ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZ_AF ,AMP(2   ))            
      
      aatens(mu,nu) = +AMP(   1)+AMP(   2)
        
	 enddo !nu
      enddo !mu

      end

c ------------------------------------------------------------	
       
      subroutine AZtoMM1_had(idb,Q,v,lsign,az)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = Z(2) momentum
c  OUPTPUT: az(mu,nu)  lepton tensor for a z --> l+l-  
C  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a z -> mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 az(0:3,0:3)
      integer lsign(3:4)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
	    q2(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      endif
	 

      if (lswitch) then
	do i = 1,6
	   w(i,3) = lp(i)
	   w(i,4) = lm(i)
	enddo
      else
       	CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
       	CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
      endif 
             
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zero  ,zero, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),zMASS ,zwidth, NU,-1,W(1,2   )) 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZ_AF ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZ_ZF ,AMP(2   ))            
      
      az(mu,nu) = +AMP(   1)+AMP(   2)
         
	 enddo !nu
      enddo !mu

      end

c ------------------------------------------------------------	
       
      subroutine ZZtoMM1_had(idb,Q,v,lsign,zztens)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = Z(1) momentum
c           idb = 2      Q = q2 = Z(2) momentum
c  OUPTPUT: zztens(mu,nu)  lepton tensor for z z --> l+l-  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z z -> mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS   
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 zztens(0:3,0:3)
      integer lsign(3:4)
C  
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
	    q2(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = qu(mu)-q(mu)
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      endif 
 
      if (lswitch) then
	do i = 1,6
	   w(i,3) = lp(i)
	   w(i,4) = lm(i)
	enddo
      else
       	CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
       	CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
      endif 
             
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zMASS ,zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),zMASS ,zwidth, NU,-1,W(1,2   )) 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZ_ZF ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZ_ZF ,AMP(2   ))            
      
      zztens(mu,nu) = +AMP(   1)+AMP(   2)
        
	 enddo !nu
      enddo !mu

      end

  
c ------------------------------------------------------------	


      subroutine wwtomm_had(idb,h,Q,v,wll)

c 	tensor for WW->mu+mu-       
	
      IMPLICIT NONE

        integer idb,h
        real*8 q(0:3), v(0:3,4)
        complex*16 wll(0:3,0:3)
	integer lsign(2,2),ll     

	data (lsign(ll,1),ll=1,2) / -1, -1/
	data (lsign(ll,2),ll=1,2) / +1, +1/
		
	call WWtoMM1_had(idb,Q,v,lsign(1,h),wll(0,0))
		
	end
		
c ------------------------------------------------------------	       


      subroutine WWtoMM1_had(idb,Q,v,lsign,wll)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = W+ momentum
c           idb = 2      Q = q2 = W- momentum
c  OUPTPUT: wll(mu,nu)  lepton tensor for w w--> l+l-  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ w- -> l+ l-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   4) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=  10) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 wll(0:3,0:3)
      integer lsign(3:4)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors 
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu)  = q(mu) !W+ incoming
	    q2(mu)  = qu(mu)-q(mu) !W- incoming
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu)  = q(mu) !W- incoming
            q1(mu)  = qu(mu)-q(mu) !W+ incoming
	    p(mu,3) = v(mu,3)
	    p(mu,4) = v(mu,4)
         enddo
      endif


     	do i = 1,6
         w(i,3) = lp(i)
         w(i,4) = lm(i)
   
         w(i,8) = au(i)
         w(i,9) = zu(i)
	enddo
	     
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),WMASS ,wwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,2   ),GWF ,AMP(1   ))  
      CALL wwa_anomal3(W(1,1   ),W(1,2   ),W(1,8   ),AMP(2   )) 
      CALL wwz_anomal3(W(1,1   ),W(1,2   ),W(1,9   ),AMP(3   ))
      
      wll(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)

      if ( (procid.eq.WPZhadjj .or. procid.eq.WMZhadjj) .and. Ztouu) then
        ! replace graph 1
        CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
        CALL IOVXXX(W(1,3   ),W(1,10  ),W(1,2   ),GWF ,AMP(4   ))  
        wll(mu,nu) = wll(mu,nu) - AMP( 1) + AMP( 4)
      endif
         
	 enddo !nu
      enddo !mu

      end
      
c ------------------------------------------------------------	
c ------------------------------------------------------------	

      subroutine vwtovwp_had(q1,q2,P,h,zwp,awp)
	
      IMPLICIT NONE

      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 zwp(0:3,0:3), awp(0:3,0:3)
      integer lsign(3:6,2),ll,h
      

	! possible lepton helicities:
	data (lsign(ll,1),ll=3,6) / -1, -1, -1, -1/  !h=1
	data (lsign(ll,2),ll=3,6) / -1, -1,  1,  1/  !h=2
	
	call zwtovwp1_had(q1,q2,P,lsign(3,h),zwp(0,0))
	call awtovwp1_had(q1,q2,P,lsign(3,h),awp(0,0))
	
	! helicity combi nr.h is selected
	
	end
		
c ------------------------------------------------------------	

      subroutine zwtovwp1_had(q1,q2,P,lsign,zwp)
	
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z w+ -> e+ ve mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=  48) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=  56) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8  Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 zwp(0:3,0:3)
      integer lsign(3:6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors and Z polarization vectors
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C                                                                          
C ----------
C BEGIN CODE
C ----------

!      if (lswitch) then
     	do i = 1,6
        w(i,3) = wl(i)
        w(i,4) = wn(i)
        w(i,5) = lp(i)
        w(i,6) = lm(i)

	  w(i,12) = au(i)
	  w(i,14) = zu(i)
	  w(i,36) = we(i)
      enddo
!      else 
!        CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3   ),-1,W(1,3   ))	    
!        CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4   ),+1,W(1,4   ))	    
!        CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5   ),-1,W(1,5   ))	    
!        CALL OXXXXX(P(0,6   ),ZERO ,+lsign(6   ),+1,W(1,6   ))	    
!     
!        CALL JIOXXX(W(1,5   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,12  ))    
!        CALL JIOXXX(W(1,5   ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,14  ))    
!        CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,36  ))    
!      endif


      DO MU = 0,3
         DO NU = 0,3
       
      CALL VCARTX(Q1(0),ZMASS ,zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 

      CALL FVIXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GWP_ZUN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    ! W+
      CALL FVIXXX(W(1,5   ),W(1,8   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,9   ))    ! Z
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GZ_ZF ,AMP(1   ))            ! Z
      CALL FVIXXX(W(1,5   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,10  ))    ! Z
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,8   ),GZ_ZF ,AMP(2   ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWP_ZUN ,ZERO    ,ZERO    ,W(1,11  ))    ! W+
      CALL JIOXXX(W(1,3   ),W(1,11  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  )) 
      CALL wwa_anomal3(W(1,2   ),W(1,13  ),W(1,12  ),AMP(3   ))  
      CALL wwz_anomal3(W(1,2   ),W(1,13  ),W(1,14  ),AMP(4   ))    
      CALL FVIXXX(W(1,5   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL JIOXXX(W(1,15  ),W(1,6   ),GWF ,WMASS   ,WWIDTH  ,W(1,16  ))    
      CALL IOVXXX(W(1,3   ),W(1,11  ),W(1,16  ),GWF ,AMP(5   ))            
      CALL FVOXXX(W(1,11  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL IOVXXX(W(1,3   ),W(1,17  ),W(1,12  ),GWP_ADL ,AMP(6   ))            ! W+
      CALL IOVXXX(W(1,3   ),W(1,17  ),W(1,14  ),GWP_ZDL ,AMP(7   ))            ! W+
      CALL FVIXXX(W(1,7   ),W(1,1   ),GWP_ZUN ,ZERO    ,ZERO    ,W(1,18  ))    ! W+
      CALL JIOXXX(W(1,18  ),W(1,4   ),GWP_ZUN ,ZMASS   ,ZWIDTH  ,W(1,19  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,19  ),GZ_ZF ,AMP(8   ))            ! Z
      CALL JIOXXX(W(1,7   ),W(1,11  ),GWP_ZUN ,ZMASS   ,ZWIDTH  ,W(1,20  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,20  ),GZ_ZF ,AMP(9   ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL FVOXXX(W(1,6   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,22  ))    ! Z
      CALL JIOXXX(W(1,3   ),W(1,21  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,23  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,22  ),W(1,23  ),GZ_AF ,AMP(10  ))            ! Z
      CALL JIOXXX(W(1,3   ),W(1,21  ),GWP_ZDL ,ZMASS   ,ZWIDTH  ,W(1,24  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,22  ),W(1,24  ),GZ_ZF ,AMP(11  ))            ! Z
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZ_AF ,ZERO    ,ZERO    ,W(1,25  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,21  ),W(1,25  ),GWP_ADL ,AMP(12  ))            ! W+
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,26  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,21  ),W(1,26  ),GWP_ZDL ,AMP(13  ))            ! W+
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWP_ZDL ,ZERO    ,ZERO    ,W(1,27  ))    ! W+
      CALL JIOXXX(W(1,27  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,28  ))  
      CALL jaww_anomal3(W(1,2   ),W(1,28  ),W(1,29  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,29  ),GZ_AF ,AMP(14  ))            ! Z
      CALL jzww_anomal3(W(1,2   ),W(1,28  ),W(1,30  ))  
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,30  ),GZ_ZF ,AMP(15  ))            ! Z
      CALL IOVXXX(W(1,15  ),W(1,6   ),W(1,28  ),GWF ,AMP(16  ))            
      CALL FVOXXX(W(1,21  ),W(1,1   ),GWP_ZDL ,ZERO    ,ZERO    ,W(1,31  ))    ! W+
      CALL IOVXXX(W(1,3   ),W(1,31  ),W(1,12  ),GWP_ADL ,AMP(17  ))            ! W+
      CALL IOVXXX(W(1,3   ),W(1,31  ),W(1,14  ),GWP_ZDL ,AMP(18  ))            ! W+
      CALL FVIXXX(W(1,27  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,32  ),W(1,4   ),GWP_ZUN ,ZMASS   ,ZWIDTH  ,W(1,33  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,33  ),GZ_ZF ,AMP(19  ))            ! Z
      CALL JIOXXX(W(1,27  ),W(1,21  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,34  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,34  ),GZ_AF ,AMP(20  ))            ! Z
      CALL JIOXXX(W(1,27  ),W(1,21  ),GWP_ZDL ,ZMASS   ,ZWIDTH  ,W(1,35  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,35  ),GZ_ZF ,AMP(21  ))            ! Z
      CALL jaww_anomal3(W(1,2   ),W(1,36  ),W(1,37  ))   
      CALL IOVXXX(W(1,5   ),W(1,22  ),W(1,37  ),GZ_AF ,AMP(22  ))            ! Z
      CALL jzww_anomal3(W(1,2   ),W(1,36  ),W(1,38  )) 
      CALL IOVXXX(W(1,5   ),W(1,22  ),W(1,38  ),GZ_ZF ,AMP(23  ))            ! Z
      CALL jhww_anomal3(W(1,2   ),W(1,36  ),W(1,39  ))    
      CALL zzh_anomal3(W(1,14  ),W(1,1   ),W(1,39  ),AMP(24  ))  
      CALL FVOXXX(W(1,6   ),W(1,36  ),GWF ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,10  ),W(1,40  ),W(1,2   ),GWF ,AMP(25  ))   
      CALL wwa_anomal3(W(1,2   ),W(1,36  ),W(1,25  ),AMP(26  ))  
      CALL wwz_anomal3(W(1,2   ),W(1,36  ),W(1,26  ),AMP(27  ))  
      CALL IOVXXX(W(1,15  ),W(1,22  ),W(1,36  ),GWF ,AMP(28  ))  
      CALL jwmwpz_anomal3(W(1,36  ),W(1,1   ),W(1,41  ))     
      CALL wwa_anomal3(W(1,2   ),W(1,41  ),W(1,12  ),AMP(29  )) 
      CALL wwz_anomal3(W(1,2   ),W(1,41  ),W(1,14  ),AMP(30  )) 
      CALL IOVXXX(W(1,15  ),W(1,40  ),W(1,1   ),GZ_ZUN ,AMP(31  ))           ! Z
      CALL wwz_anomal3(W(1,16  ),W(1,36  ),W(1,1   ),AMP(32  ))  
      CALL jwpzwm_anomal3(W(1,1   ),W(1,2   ),W(1,42  ))     
      CALL FVOXXX(W(1,4   ),W(1,42  ),GWF ,ZERO    ,ZERO    ,W(1,43  ))    
      CALL JIOXXX(W(1,3   ),W(1,43  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,44  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,44  ),GZ_AF ,AMP(33  ))            ! Z
      CALL JIOXXX(W(1,3   ),W(1,43  ),GWP_ZDL ,ZMASS   ,ZWIDTH  ,W(1,45  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,45  ),GZ_ZF ,AMP(34  ))            ! Z
      CALL FVIXXX(W(1,3   ),W(1,42  ),GWF ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL JIOXXX(W(1,46  ),W(1,4   ),GWP_ZUN ,ZMASS   ,ZWIDTH  ,W(1,47  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,47  ),GZ_ZF ,AMP(35  ))            ! Z
      CALL jaww_anomal3(W(1,42  ),W(1,36  ),W(1,48  )) 
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,48  ),GZ_AF ,AMP(36  ))            ! Z
      CALL jzww_anomal3(W(1,42  ),W(1,36  ),W(1,49  )) 
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,49  ),GZ_ZF ,AMP(37  ))            ! Z
      CALL FVIXXX(W(1,5   ),W(1,42  ),GWF ,ZERO    ,ZERO    ,W(1,50  ))    
      CALL IOVXXX(W(1,50  ),W(1,6   ),W(1,36  ),GWF ,AMP(38  ))  
      CALL wwza_anomal4(W(1,2   ),W(1,1   ),W(1,36  ),W(1,12  ),AMP(39  ))  
      CALL wwzz_anomal4(W(1,2   ),W(1,1   ),W(1,36  ),W(1,14  ),AMP(40  )) 

c considering anomalous couplings, we get an extra graph with AZH-vertex
      CALL azh_anomal3(W(1,12  ),W(1,1   ),W(1,39  ),AMP(41  ))  

      use_secondhiggs=.true.
      CALL jhww_anomal3(W(1,2   ),W(1,36  ),W(1,51  ))    
      CALL zzh_anomal3(W(1,14  ),W(1,1   ),W(1,51  ),AMP(42  ))  
      CALL azh_anomal3(W(1,12  ),W(1,1   ),W(1,51  ),AMP(43  ))  
      use_secondhiggs=.false.
                                                    
      zwp(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)+AMP(  34)+AMP(  35)
     &             +AMP(  36)+AMP(  37)+AMP(  38)+AMP(  39)+AMP(  40)
     &             +AMP(  41) ! new diagram with Higgs (AZH-coupling)
      if (with_secondhiggs) then
        zwp(MU,NU) = zwp(MU,NU)+AMP(42)+AMP(43)
      endif

      if (procid .eq. WPhadZjj) then
        ! new graphs for W+ decay
        CALL JIOXXX(W(1,7   ),W(1,4   ),GWP_AUN ,ZERO   ,ZERO  ,W(1,51   ))    ! W+
        CALL FVIXXX(W(1,5   ),W(1,51   ),GAL ,ZERO    ,ZERO    ,W(1,52   ))    
        CALL IOVXXX(W(1,52  ),W(1,6   ),W(1,1   ),GZL ,AMP(42  ))            

        CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,51  ),GAL ,AMP(43  ))            

        CALL JIOXXX(W(1,18  ),W(1,4   ),GWP_AUN ,ZERO   ,ZERO  ,W(1,53  ))    ! W+
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,53  ),GAL ,AMP(44  ))            
        CALL JIOXXX(W(1,7   ),W(1,11  ),GWP_AUN ,ZERO   ,ZERO  ,W(1,54  ))    ! W+
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,54  ),GAL ,AMP(45  ))            
        CALL JIOXXX(W(1,32  ),W(1,4   ),GWP_AUN ,ZERO   ,ZERO  ,W(1,55  ))    ! W+
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,55  ),GAL ,AMP(46  ))            
        CALL JIOXXX(W(1,46  ),W(1,4   ),GWP_AUN ,ZERO   ,ZERO  ,W(1,56  ))    ! W+
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,56  ),GAL ,AMP(47  ))     
        zwp(mu,nu) = zwp(mu,nu) +AMP(  42)+AMP(  43)+AMP(  44)+AMP(  45)+AMP(  46)+AMP(  47)
      endif

      if (procid.eq.WPZhadjj .and. Ztouu) then
        ! replace graphs 5, 16, 25, 28, 31, 32, 38
        CALL FVOXXX(W(1,6   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,53  ))    
        CALL JIOXXX(W(1,5   ),W(1,53  ),GWF ,WMASS   ,WWIDTH  ,W(1,51  ))    
        CALL IOVXXX(W(1,3   ),W(1,11  ),W(1,51  ),GWF ,AMP(42  ))            
        CALL IOVXXX(W(1,5   ),W(1,53  ),W(1,28  ),GWF ,AMP(43  ))            
        CALL FVIXXX(W(1,5   ),W(1,36  ),GWF ,ZERO    ,ZERO    ,W(1,54  ))    
        CALL IOVXXX(W(1,54  ),W(1,22  ),W(1,2   ),GWF ,AMP(44  ))   
        CALL IOVXXX(W(1,10  ),W(1,53  ),W(1,36  ),GWF ,AMP(45  ))  
        CALL IOVXXX(W(1,54  ),W(1,53  ),W(1,1   ),GZD ,AMP(46  ))           ! Z
        CALL wwz_anomal3(W(1,51  ),W(1,36  ),W(1,1   ),AMP(47  ))  
        CALL FVOXXX(W(1,6   ),W(1,42  ),GWF ,ZERO    ,ZERO    ,W(1,52  ))    
        CALL IOVXXX(W(1,5   ),W(1,52  ),W(1,36  ),GWF ,AMP(48  ))  
        zwp(mu,nu) = zwp(mu,nu) - AMP( 5) + AMP( 42)
     &                          - AMP(16) + AMP( 43)
     &                          - AMP(25) + AMP( 44)
     &                          - AMP(28) + AMP( 45)
     &                          - AMP(31) + AMP( 46)
     &                          - AMP(32) + AMP( 47)
     &                          - AMP(38) + AMP( 48)
      endif
          
          ENDDO
      ENDDO
 
      END

c ------------------------------------------------------------	

      subroutine awtovwp1_had(q1,q2,P,lsign,awp)
	  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a w+ -> e+ ve mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  46) 
c#include "genps.inc"
      INTEGER    NWAVEFUNCS    
      PARAMETER (NWAVEFUNCS=  49) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 awp(0:3,0:3)
      integer lsign(3:6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors and Z polarization vectors
#include "tensorw.inc"
C  
C GLOBAL VARIABLES
c
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C                                                                          
C ----------
C BEGIN CODE
C ----------

!      if (lswitch) then
      do i = 1,6
         w(i,3) = wl(i)
         w(i,4) = wn(i)
         w(i,5) = lp(i)
         w(i,6) = lm(i)

         w(i,22) = au(i)
         w(i,24) = zu(i)
         w(i,29) = we(i)
      enddo
!      else 
!	CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3   ),-1,W(1,3   ))	    
!      	CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4   ),+1,W(1,4   ))	    
!      	CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5   ),-1,W(1,5   ))	    
!      	CALL OXXXXX(P(0,6   ),ZERO ,+lsign(6   ),+1,W(1,6   ))
!     
!      	CALL JIOXXX(W(1,5   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,22  ))    
!      	CALL JIOXXX(W(1,5   ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,24  ))    
!      	CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,29  ))         
!      endif	    


      DO MU = 0,3
         DO NU = 0,3
       
      CALL VCARTX(Q1(0),ZERO ,zero, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 

      CALL FVIXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GWP_ZUN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    ! W+
      CALL FVIXXX(W(1,5   ),W(1,8   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,9   ))    ! Z
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GZ_AF ,AMP(1   ))            ! Z
      CALL FVIXXX(W(1,5   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,10  ))    ! Z
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,8   ),GZ_ZF ,AMP(2   ))            ! Z
      CALL FVOXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL FVOXXX(W(1,6   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,12  ))    ! Z
      CALL JIOXXX(W(1,3   ),W(1,11  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,13  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,13  ),GZ_AF ,AMP(3   ))            ! Z
      CALL JIOXXX(W(1,3   ),W(1,11  ),GWP_ZDL ,ZMASS   ,ZWIDTH  ,W(1,14  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,14  ),GZ_ZF ,AMP(4   ))            ! Z
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZ_AF ,ZERO    ,ZERO    ,W(1,15  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,11  ),W(1,15  ),GWP_ADL ,AMP(5   ))            ! W+
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,16  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,11  ),W(1,16  ),GWP_ZDL ,AMP(6   ))            ! W+
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWP_ADL ,ZERO    ,ZERO    ,W(1,17  ))    ! W+
      CALL JIOXXX(W(1,17  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,18  ))  
      CALL jaww_anomal3(W(1,2   ),W(1,18  ),W(1,19  ))       
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,19  ),GZ_AF ,AMP(7   ))            ! Z
      CALL jzww_anomal3(W(1,2   ),W(1,18  ),W(1,20  )) 
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,20  ),GZ_ZF ,AMP(8   ))            ! Z
      CALL FVIXXX(W(1,5   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL IOVXXX(W(1,21  ),W(1,6   ),W(1,18  ),GWF ,AMP(9   ))            
      CALL FVOXXX(W(1,11  ),W(1,1   ),GWP_ADL ,ZERO    ,ZERO    ,W(1,23  ))    ! W+
      CALL IOVXXX(W(1,3   ),W(1,23  ),W(1,22  ),GWP_ADL ,AMP(10  ))            ! W+
      CALL IOVXXX(W(1,3   ),W(1,23  ),W(1,24  ),GWP_ZDL ,AMP(11  ))            ! W+
      CALL FVIXXX(W(1,17  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL JIOXXX(W(1,25  ),W(1,4   ),GWP_ZUN ,ZMASS   ,ZWIDTH  ,W(1,26  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,26  ),GZ_ZF ,AMP(12  ))            ! Z
      CALL JIOXXX(W(1,17  ),W(1,11  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,27  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,27  ),GZ_AF ,AMP(13  ))            ! Z
      CALL JIOXXX(W(1,17  ),W(1,11  ),GWP_ZDL ,ZMASS   ,ZWIDTH  ,W(1,28  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,28  ),GZ_ZF ,AMP(14  ))            ! Z
      CALL jaww_anomal3(W(1,2   ),W(1,29  ),W(1,30  ))
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,30  ),GZ_AF ,AMP(15  ))            ! Z
      CALL jzww_anomal3(W(1,2   ),W(1,29  ),W(1,31  )) 
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,31  ),GZ_ZF ,AMP(16  ))            ! Z
      CALL FVOXXX(W(1,6   ),W(1,29  ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL IOVXXX(W(1,10  ),W(1,32  ),W(1,2   ),GWF ,AMP(17  )) 
      CALL wwa_anomal3(W(1,2   ),W(1,29  ),W(1,15  ),AMP(18  ))  
      CALL wwz_anomal3(W(1,2   ),W(1,29  ),W(1,16  ),AMP(19  ))  
      CALL IOVXXX(W(1,21  ),W(1,12  ),W(1,29  ),GWF ,AMP(20  ))   
      CALL jwmwpa_anomal3(W(1,29  ),W(1,1   ),W(1,33  ))   
      CALL wwa_anomal3(W(1,2   ),W(1,33  ),W(1,22  ),AMP(21  )) 
      CALL wwz_anomal3(W(1,2   ),W(1,33  ),W(1,24  ),AMP(22  ))  
      CALL JIOXXX(W(1,21  ),W(1,6   ),GWF ,WMASS   ,WWIDTH  ,W(1,34  )) 
      CALL wwa_anomal3(W(1,34  ),W(1,29  ),W(1,1   ),AMP(23  ))  
      CALL jwpawm_anomal3(W(1,1   ),W(1,2   ),W(1,35  ))     
      CALL FVOXXX(W(1,4   ),W(1,35  ),GWF ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL JIOXXX(W(1,3   ),W(1,36  ),GWP_ADL ,ZERO    ,ZERO    ,W(1,37  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,37  ),GZ_AF ,AMP(24  ))            ! Z
      CALL JIOXXX(W(1,3   ),W(1,36  ),GWP_ZDL ,ZMASS   ,ZWIDTH  ,W(1,38  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,38  ),GZ_ZF ,AMP(25  ))            ! Z
      CALL FVIXXX(W(1,3   ),W(1,35  ),GWF ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL JIOXXX(W(1,39  ),W(1,4   ),GWP_ZUN ,ZMASS   ,ZWIDTH  ,W(1,40  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,40  ),GZ_ZF ,AMP(26  ))            ! Z
      CALL jaww_anomal3(W(1,35  ),W(1,29  ),W(1,41  ))
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,41  ),GZ_AF ,AMP(27  ))            ! Z
      CALL jzww_anomal3(W(1,35  ),W(1,29  ),W(1,42  ))   
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,42  ),GZ_ZF ,AMP(28  ))            ! Z
      CALL FVIXXX(W(1,5   ),W(1,35  ),GWF ,ZERO    ,ZERO    ,W(1,43  ))    
      CALL IOVXXX(W(1,43  ),W(1,6   ),W(1,29  ),GWF ,AMP(29  )) 
      CALL wwaa_anomal4(W(1,2   ),W(1,1   ),W(1,29  ),W(1,22  ),AMP(30  ))   
      CALL wwza_anomal4(W(1,2   ),W(1,24  ),W(1,29  ),W(1,1   ),AMP(31  ))   
            
c considering anomalous couplings, we get two extra graphs with AZH- and AAH-vertex
      CALL jhww_anomal3(W(1,2   ),W(1,29  ),W(1,44  ))    
      CALL azh_anomal3(W(1,1  ),W(1,24   ),W(1,44  ),AMP(32  ))  
      CALL aah_anomal3(W(1,1  ),W(1,22   ),W(1,44  ),AMP(33  ))  

      use_secondhiggs=.true.
      CALL jhww_anomal3(W(1,2   ),W(1,29  ),W(1,45  ))    
      CALL azh_anomal3(W(1,1  ),W(1,24   ),W(1,45  ),AMP(34  ))  
      CALL aah_anomal3(W(1,1  ),W(1,22   ),W(1,45  ),AMP(35  ))  
      use_secondhiggs=.false.
  
      awp(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)
     &             +AMP(  32)+AMP(  33) !new diagrams with Higgs (AZH- and AAH-couplings)
      if (with_secondhiggs) then
        awp(MU,NU) = awp(MU,NU)+AMP(34)+AMP(35)
      endif

      if (procid .eq. WPhadZjj) then
        ! new graphs for W+ decay
      CALL JIOXXX(W(1,7   ),W(1,4   ),GWP_AUN ,ZERO   ,ZERO  ,W(1,45  ))    ! W+
      CALL FVIXXX(W(1,5   ),W(1,45  ),GAL ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL IOVXXX(W(1,46  ),W(1,6   ),W(1,1   ),GAL ,AMP(34  ))            
      CALL FVIXXX(W(1,5   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,47  ),W(1,6   ),W(1,45  ),GAL ,AMP(35  ))            
      CALL JIOXXX(W(1,25  ),W(1,4   ),GWP_AUN ,ZERO   ,ZERO  ,W(1,48  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,48  ),GAL ,AMP(36  ))            
      CALL JIOXXX(W(1,39  ),W(1,4   ),GWP_AUN ,ZERO   ,ZERO  ,W(1,49  ))    ! W+
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,49  ),GAL ,AMP(37  ))  

      CALL FVOXXX(W(1,4   ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GWF ,WMASS   ,WWIDTH  ,W(1,14  ))    
      ! CALL JVVXXX(W(1,2   ),W(1,14  ),GWWA ,ZERO    ,AWIDTH  ,W(1,15  ))    ! anom
      CALL jaww_anomal3(W(1,2   ),W(1,14  ) ,W(1,15  ))    ! anom
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,15  ),GAL ,AMP(38  ))            
      ! CALL JVVXXX(W(1,2   ),W(1,14  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,16  ))    ! anom
      CALL jzww_anomal3(W(1,2   ),W(1,14  ) ,W(1,16  ))    ! anom
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,16  ),GZL ,AMP(39  ))            
      CALL FVIXXX(W(1,5   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL IOVXXX(W(1,17  ),W(1,6   ),W(1,14  ),GWF ,AMP(40  ))            
      CALL FVOXXX(W(1,13  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL JIOXXX(W(1,3   ),W(1,18  ),GAD ,ZERO    ,AWIDTH  ,W(1,19  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,19  ),GAL ,AMP(41  ))            
      CALL JIOXXX(W(1,3   ),W(1,18  ),GZD ,ZMASS   ,ZWIDTH  ,W(1,20  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,20  ),GZL ,AMP(42  ))            
      CALL FVIXXX(W(1,7   ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL JIOXXX(W(1,21  ),W(1,4   ),GAU ,ZERO    ,AWIDTH  ,W(1,26  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,26  ),GAL ,AMP(43  ))            
      CALL JIOXXX(W(1,21  ),W(1,4   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,23  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,23  ),GZL ,AMP(44  ))            
      CALL JIOXXX(W(1,7   ),W(1,13  ),GAU ,ZERO    ,AWIDTH  ,W(1,27  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,27  ),GAL ,AMP(45  ))            
      CALL JIOXXX(W(1,7   ),W(1,13  ),GZU ,ZMASS   ,ZWIDTH  ,W(1,25  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,25  ),GZL ,AMP(46  ))            

      awp(mu,nu) = awp(mu,nu) + AMP(  34)+AMP(  35)+AMP(  36)+AMP(  37)+AMP(  38)
     &             +AMP(  39)+AMP(  40)+AMP(  41)+AMP(  42)+AMP(  43)
     &             +AMP(  44)+AMP(  45)+AMP(  46)

      endif

      if (procid.eq.WPZhadjj .and. Ztodd) then
        ! new graph for Z decay
        CALL FVIXXX(W(1,21  ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,45  ))    
        CALL IOVXXX(W(1,45  ),W(1,6   ),W(1,29  ),GWF ,AMP(34  ))            
        awp(mu,nu) = awp(mu,nu) + AMP(  34)
      endif

      if (procid.eq.WPZhadjj .and. Ztouu) then
        ! new graph for Z decay
        CALL FVIXXX(W(1,5   ),W(1,29  ),GWF ,ZERO    ,ZERO    ,W(1,45  ))    
        CALL FVIXXX(W(1,45  ),W(1,1   ),GAD ,ZERO    ,ZERO    ,W(1,46  ))    
        CALL IOVXXX(W(1,46  ),W(1,6   ),W(1,2   ),GWF ,AMP(34  ))            
        awp(mu,nu) = awp(mu,nu) + AMP(  34)
        ! replace graphs 9, 17, 20, 23, 29
        CALL FVOXXX(W(1,6   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,47  ))    
        CALL IOVXXX(W(1,5   ),W(1,47  ),W(1,18  ),GWF ,AMP(35  ))            
        CALL IOVXXX(W(1,45  ),W(1,12  ),W(1,2   ),GWF ,AMP(36  )) 
        CALL IOVXXX(W(1,10  ),W(1,47  ),W(1,29  ),GWF ,AMP(37  ))   
        CALL JIOXXX(W(1,5   ),W(1,47  ),GWF ,WMASS   ,WWIDTH  ,W(1,48  )) 
        CALL wwa_anomal3(W(1,48  ),W(1,29  ),W(1,1   ),AMP(38  ))  
        CALL FVOXXX(W(1,6   ),W(1,35  ),GWF ,ZERO    ,ZERO    ,W(1,49  ))    
        CALL IOVXXX(W(1,5   ),W(1,49  ),W(1,29  ),GWF ,AMP(39  )) 
        awp(mu,nu) = awp(mu,nu) - AMP( 9) + AMP( 35)
     &                          - AMP(17) + AMP( 36)
     &                          - AMP(20) + AMP( 37)
     &                          - AMP(23) + AMP( 38)
     &                          - AMP(29) + AMP( 39)
      endif
     
          ENDDO
      ENDDO
c
      END
c ------------------------------------------------------------	

      subroutine vwtovwm_had(q1,q2,P,h,zwm,awm)
	
      IMPLICIT NONE

      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 zwm(0:3,0:3), awm(0:3,0:3)
      integer lsign(3:6,2),ll,h
      

	! possible lepton helicities:
	data (lsign(ll,1),ll=3,6) /  -1,  -1, -1, -1/  !h=1
	data (lsign(ll,2),ll=3,6) /  -1,  -1,  1,  1/  !h=2

	! helicity combi nr.h is selected
	
	call zwtovwm1_had(q1,q2,P,lsign(3,h),zwm(0,0))
	call awtovwm1_had(q1,q2,P,lsign(3,h),awm(0,0))
		
	
	end
		
c ------------------------------------------------------------	

      subroutine zwtovwm1_had(q1,q2,P,lsign,zwm)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z w- -> e- ve~ mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  48) 
      INTEGER    NWAVEFUNCS     
      PARAMETER (NWAVEFUNCS=  56) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 zwm(0:3,0:3)
      integer lsign(3:6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
c  lepton spinors and Z polarization vectors
#include "tensorw.inc"
      
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------

      do i = 1,6
         w(i,3) = wl(i)
         w(i,4) = wn(i)
         w(i,5) = lp(i)
         w(i,6) = lm(i)

        w(i,14) = au(i)
        w(i,15) = zu(i)
        w(i,36) = we(i)
      enddo


      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),ZMASS ,zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 
 
      CALL FVOXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,4   ),W(1,7   ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    ! W-
      CALL FVIXXX(W(1,5   ),W(1,8   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,9   ))    ! Z
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GZ_ZF ,AMP(1   ))            ! Z
      CALL FVIXXX(W(1,5   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,10  ))    ! Z
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,8   ),GZ_ZF ,AMP(2   ))            ! Z
      CALL FVIXXX(W(1,4   ),W(1,1   ),GWM_ZUN ,ZERO    ,ZERO    ,W(1,11  ))    ! W-
      CALL FVOXXX(W(1,6   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,11  ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,13  ),GWF ,AMP(3   )) 
      CALL wwa_anomal3(W(1,13  ),W(1,2   ),W(1,14  ),AMP(4   ))  
      CALL wwz_anomal3(W(1,13  ),W(1,2   ),W(1,15  ),AMP(5   ))  
      CALL FVIXXX(W(1,11  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,16  ),W(1,3   ),W(1,14  ),GWM_ADL ,AMP(6   ))            ! W-
      CALL IOVXXX(W(1,16  ),W(1,3   ),W(1,15  ),GWM_ZDL ,AMP(7   ))            ! W-
      CALL FVOXXX(W(1,7   ),W(1,1   ),GWM_ZUN ,ZERO    ,ZERO    ,W(1,17  ))    ! W-
      CALL JIOXXX(W(1,4   ),W(1,17  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,18  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,18  ),GZ_ZF ,AMP(8   ))            ! Z
      CALL JIOXXX(W(1,11  ),W(1,7   ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,19  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,19  ),GZ_ZF ,AMP(9   ))            ! Z
      CALL FVIXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL FVOXXX(W(1,6   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,21  ))    ! Z
      CALL JIOXXX(W(1,20  ),W(1,3   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,22  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,22  ),GZ_AF ,AMP(10  ))            ! Z
      CALL JIOXXX(W(1,20  ),W(1,3   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,23  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,23  ),GZ_ZF ,AMP(11  ))            ! Z
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZ_AF ,ZERO    ,ZERO    ,W(1,24  ))    ! Z
      CALL IOVXXX(W(1,20  ),W(1,3   ),W(1,24  ),GWM_ADL ,AMP(12  ))            ! W-
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,25  ))    ! Z
      CALL IOVXXX(W(1,20  ),W(1,3   ),W(1,25  ),GWM_ZDL ,AMP(13  ))            ! W-
      CALL FVOXXX(W(1,3   ),W(1,1   ),GWM_ZDL ,ZERO    ,ZERO    ,W(1,26  ))    ! W-
      CALL JIOXXX(W(1,4   ),W(1,26  ),GWF ,WMASS   ,WWIDTH  ,W(1,27  ))    
      CALL FVIXXX(W(1,5   ),W(1,27  ),GWF ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,28  ),W(1,6   ),W(1,2   ),GWF ,AMP(14  ))    
      CALL jaww_anomal3(W(1,27  ),W(1,2   ),W(1,29  ))  
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,29  ),GZ_AF ,AMP(15  ))            ! Z
      CALL jzww_anomal3(W(1,27  ),W(1,2   ),W(1,30  )) 
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,30  ),GZ_ZF ,AMP(16  ))            ! Z
      CALL FVIXXX(W(1,20  ),W(1,1   ),GWM_ZDL ,ZERO    ,ZERO    ,W(1,31  ))    ! W-
      CALL IOVXXX(W(1,31  ),W(1,3   ),W(1,14  ),GWM_ADL ,AMP(17  ))            ! W-
      CALL IOVXXX(W(1,31  ),W(1,3   ),W(1,15  ),GWM_ZDL ,AMP(18  ))            ! W-
      CALL FVOXXX(W(1,26  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,4   ),W(1,32  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,33  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,33  ),GZ_ZF ,AMP(19  ))            ! Z
      CALL JIOXXX(W(1,20  ),W(1,26  ),GWM_ADL ,ZERO    ,ZERO    ,W(1,34  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,34  ),GZ_AF ,AMP(20  ))            ! Z
      CALL JIOXXX(W(1,20  ),W(1,26  ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,35  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,35  ),GZ_ZF ,AMP(21  ))            ! Z
      CALL jaww_anomal3(W(1,36  ),W(1,2   ),W(1,37  ))  
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,37  ),GZ_AF ,AMP(22  ))            ! Z
      CALL jzww_anomal3(W(1,36  ),W(1,2   ),W(1,38  )) 
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,38  ),GZ_ZF ,AMP(23  ))            ! Z
      CALL IOVXXX(W(1,10  ),W(1,12  ),W(1,36  ),GWF ,AMP(24  )) 
      CALL jhww_anomal3(W(1,36  ),W(1,2   ),W(1,39  ))  
      CALL zzh_anomal3(W(1,15  ),W(1,1   ),W(1,39  ),AMP(25  )) 
      CALL wwa_anomal3(W(1,36  ),W(1,2   ),W(1,24  ),AMP(26  )) 
      CALL wwz_anomal3(W(1,36  ),W(1,2   ),W(1,25  ),AMP(27  ))  
      CALL jwpzwm_anomal3(W(1,1   ),W(1,36  ),W(1,40  ))  
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,40  ),GWF ,AMP(28  ))        
      CALL wwa_anomal3(W(1,40  ),W(1,2   ),W(1,14  ),AMP(29  ))  
      CALL wwz_anomal3(W(1,40  ),W(1,2   ),W(1,15  ),AMP(30  )) 
      CALL jwmwpz_anomal3(W(1,2   ),W(1,1   ),W(1,41  ))   
      CALL FVIXXX(W(1,4   ),W(1,41  ),GWF ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL JIOXXX(W(1,42  ),W(1,3   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,43  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,43  ),GZ_AF ,AMP(31  ))            ! Z
      CALL JIOXXX(W(1,42  ),W(1,3   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,44  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,44  ),GZ_ZF ,AMP(32  ))            ! Z
      CALL FVOXXX(W(1,3   ),W(1,41  ),GWF ,ZERO    ,ZERO    ,W(1,45  ))    
      CALL JIOXXX(W(1,4   ),W(1,45  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,46  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,46  ),GZ_ZF ,AMP(33  ))            ! Z
      CALL FVIXXX(W(1,5   ),W(1,36  ),GWF ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,47  ),W(1,21  ),W(1,2   ),GWF ,AMP(34  ))            
      CALL IOVXXX(W(1,47  ),W(1,12  ),W(1,1   ),GZ_ZUN ,AMP(35  ))           ! Z
      CALL jaww_anomal3(W(1,36  ),W(1,41  ),W(1,48  ))  
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,48  ),GZ_AF ,AMP(36  ))            ! Z
      CALL jzww_anomal3(W(1,36  ),W(1,41  ),W(1,49  ))
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,49  ),GZ_ZF ,AMP(37  ))            ! Z
      CALL IOVXXX(W(1,47  ),W(1,6   ),W(1,41  ),GWF ,AMP(38  ))  
      CALL wwza_anomal4(W(1,36  ),W(1,1   ),W(1,2   ),W(1,14  ),AMP(39  ))    
      CALL wwzz_anomal4(W(1,36  ),W(1,1   ),W(1,2   ),W(1,15  ),AMP(40  ))   

c considering anomalous couplings, we get an extra graph with AZH-vertex  
      CALL azh_anomal3(W(1,14  ),W(1,1   ),W(1,39  ),AMP(41  ))  
                                                   
      use_secondhiggs=.true.
      CALL jhww_anomal3(W(1,36  ),W(1,2   ),W(1,50  ))  
      CALL zzh_anomal3(W(1,15  ),W(1,1   ),W(1,50  ),AMP(42  )) 
      CALL azh_anomal3(W(1,14  ),W(1,1   ),W(1,50  ),AMP(43  ))  
      use_secondhiggs=.false.
             
      zwm(mu,nu) = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)-AMP(  22)-AMP(  23)-AMP(  24)-AMP(  25)
     &             -AMP(  26)-AMP(  27)-AMP(  28)-AMP(  29)-AMP(  30)
     &             -AMP(  31)-AMP(  32)-AMP(  33)-AMP(  34)-AMP(  35)
     &             -AMP(  36)-AMP(  37)-AMP(  38)-AMP(  39)-AMP(  40)
     &             -AMP(  41) ! new diagram with AZH-coupling
      if (with_secondhiggs) then
        zwm(MU,NU) = zwm(MU,NU)-AMP(42)-AMP(43)
      endif

      if (procid .eq. WMhadZjj) then
        ! new graphs for W- decay
        CALL JIOXXX(W(1,4   ),W(1,7   ),GWM_AUN ,ZERO   ,ZERO  ,W(1,50  ))    ! W-
        CALL FVIXXX(W(1,5   ),W(1,50  ),GAL ,ZERO    ,ZERO    ,W(1,51  ))    
        CALL IOVXXX(W(1,51  ),W(1,6   ),W(1,1   ),GZL ,AMP(42  ))
        CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,50  ),GAL ,AMP(43  ))            
        CALL JIOXXX(W(1,4   ),W(1,17  ),GWM_AUN ,ZERO   ,ZERO  ,W(1,53  ))    ! W-
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,53  ),GAL ,AMP(44  ))            
        CALL JIOXXX(W(1,11  ),W(1,7   ),GWM_AUN ,ZERO   ,ZERO  ,W(1,54  ))    ! W-
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,54  ),GAL ,AMP(45  ))            
        CALL JIOXXX(W(1,4   ),W(1,32  ),GWM_AUN ,ZERO   ,ZERO  ,W(1,55  ))    ! W-
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,55  ),GAL ,AMP(46  ))            
        CALL JIOXXX(W(1,4   ),W(1,45  ),GWM_AUN ,ZERO   ,ZERO  ,W(1,56  ))    ! W-
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,56  ),GAL ,AMP(47  ))            
        zwm(mu,nu) = zwm(mu,nu) -AMP(  42)-AMP(  43)-AMP(  44)-AMP(  45)-AMP(  46)-AMP(  47)
      endif

      if (procid.eq.WMZhadjj .and. Ztouu) then
        ! replace graphs 3, 14, 24, 28, 34, 35, 40
        CALL FVIXXX(W(1,5   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,50  ))    
        CALL IOVXXX(W(1,50  ),W(1,6   ),W(1,13  ),GWF ,AMP(42  )) 
        CALL FVOXXX(W(1,6   ),W(1,27  ),GWF ,ZERO    ,ZERO    ,W(1,51  ))    
        CALL IOVXXX(W(1,5   ),W(1,51  ),W(1,2   ),GWF ,AMP(43  ))    
        CALL IOVXXX(W(1,50  ),W(1,21  ),W(1,36  ),GWF ,AMP(44  )) 
        CALL IOVXXX(W(1,50  ),W(1,6   ),W(1,40  ),GWF ,AMP(45  ))        
        CALL FVOXXX(W(1,6   ),W(1,36  ),GWF ,ZERO    ,ZERO    ,W(1,52  ))    
        CALL IOVXXX(W(1,10  ),W(1,52  ),W(1,2   ),GWF ,AMP(46  ))            
        CALL IOVXXX(W(1,50  ),W(1,52  ),W(1,1   ),GZD ,AMP(47  ))           ! Z
        CALL IOVXXX(W(1,5   ),W(1,52  ),W(1,41  ),GWF ,AMP(48  ))  
        zwm(mu,nu) = zwm(mu,nu) + AMP( 3) - AMP( 42)
     &                          + AMP(14) - AMP( 43)
     &                          + AMP(24) - AMP( 44)
     &                          + AMP(28) - AMP( 45)
     &                          + AMP(34) - AMP( 46)
     &                          + AMP(35) - AMP( 47)
     &                          + AMP(38) - AMP( 48)
      endif

	   ENDDO
       ENDDO

     
      END
      
c ------------------------------------------------------------	

      subroutine awtovwm1_had(q1,q2,P,lsign,awm)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a w- -> e- ve~ mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  46) 
      INTEGER    NWAVEFUNCS     
      PARAMETER (NWAVEFUNCS=  48) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 awm(0:3,0:3)
      integer lsign(3:6)
C  
C LOCAL VARIABLES 
C  
      INTEGER MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
c
C ----------
C BEGIN CODE
C ----------

      CALL OXXXXX(P(0,3   ),ZERO ,+lsign(3   ),+1,W(1,3   ))        
      CALL IXXXXX(P(0,4   ),ZERO ,-lsign(4   ),-1,W(1,4   ))        
      CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5   ),-1,W(1,5   ))        
      CALL OXXXXX(P(0,6   ),ZERO ,+lsign(6   ),+1,W(1,6   ))        


      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),ZERO,zero, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 

      CALL FVOXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,4   ),W(1,7   ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    ! W-
      CALL FVIXXX(W(1,5   ),W(1,8   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,9   ))    ! Z
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GZ_AF ,AMP(1   ))            ! Z
      CALL FVIXXX(W(1,5   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,10  ))    ! Z
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,8   ),GZ_ZF ,AMP(2   ))            ! Z
      CALL FVIXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL FVOXXX(W(1,6   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,12  ))    ! Z
      CALL JIOXXX(W(1,11  ),W(1,3   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,13  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,13  ),GZ_AF ,AMP(3   ))            ! Z
      CALL JIOXXX(W(1,11  ),W(1,3   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,14  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,14  ),GZ_ZF ,AMP(4   ))            ! Z
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZ_AF ,ZERO    ,ZERO    ,W(1,15  ))    ! Z
      CALL IOVXXX(W(1,11  ),W(1,3   ),W(1,15  ),GWM_ADL ,AMP(5   ))            ! W-
      CALL JIOXXX(W(1,10  ),W(1,6   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,16  ))    ! Z
      CALL IOVXXX(W(1,11  ),W(1,3   ),W(1,16  ),GWM_ZDL ,AMP(6   ))            ! W-
      CALL FVOXXX(W(1,3   ),W(1,1   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,17  ))    ! W-
      CALL JIOXXX(W(1,4   ),W(1,17  ),GWF ,WMASS   ,WWIDTH  ,W(1,18  ))    
      CALL FVIXXX(W(1,5   ),W(1,18  ),GWF ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL IOVXXX(W(1,19  ),W(1,6   ),W(1,2   ),GWF ,AMP(7   )) 
      CALL jaww_anomal3(W(1,18  ),W(1,2   ),W(1,20  ))                   
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,20  ),GZ_AF ,AMP(8   ))            ! Z
      CALL jzww_anomal3(W(1,18  ),W(1,2   ),W(1,21  ))     
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,21  ),GZ_ZF ,AMP(9   ))            ! Z
      CALL JIOXXX(W(1,5   ),W(1,6   ),GZ_AF ,ZERO    ,ZERO    ,W(1,22  ))    ! Z
      CALL FVIXXX(W(1,11  ),W(1,1   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,23  ))    ! W-
      CALL IOVXXX(W(1,23  ),W(1,3   ),W(1,22  ),GWM_ADL ,AMP(10  ))            ! W-
      CALL JIOXXX(W(1,5   ),W(1,6   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,24  ))    ! Z
      CALL IOVXXX(W(1,23  ),W(1,3   ),W(1,24  ),GWM_ZDL ,AMP(11  ))            ! W-
      CALL FVOXXX(W(1,17  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL JIOXXX(W(1,4   ),W(1,25  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,26  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,26  ),GZ_ZF ,AMP(12  ))            ! Z
      CALL JIOXXX(W(1,11  ),W(1,17  ),GWM_ADL ,ZERO    ,ZERO    ,W(1,27  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,27  ),GZ_AF ,AMP(13  ))            ! Z
      CALL JIOXXX(W(1,11  ),W(1,17  ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,28  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,28  ),GZ_ZF ,AMP(14  ))            ! Z
      CALL JIOXXX(W(1,4   ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,29  ))  
      CALL jaww_anomal3(W(1,29  ),W(1,2   ),W(1,30  ))                   
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,30  ),GZ_AF ,AMP(15  ))            ! Z
      CALL jzww_anomal3(W(1,29  ),W(1,2   ),W(1,31  ))  
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,31  ),GZ_ZF ,AMP(16  ))            ! Z
      CALL FVOXXX(W(1,6   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL IOVXXX(W(1,10  ),W(1,32  ),W(1,29  ),GWF ,AMP(17  ))  
      CALL wwa_anomal3(W(1,29  ),W(1,2   ),W(1,15  ),AMP(18  ))
      CALL wwz_anomal3(W(1,29  ),W(1,2   ),W(1,16  ),AMP(19  ))
      CALL jwpawm_anomal3(W(1,1   ),W(1,29  ),W(1,33  ))   
      CALL IOVXXX(W(1,5   ),W(1,32  ),W(1,33  ),GWF ,AMP(20  )) 
      CALL wwa_anomal3(W(1,33  ),W(1,2   ),W(1,22  ),AMP(21  )) 
      CALL wwz_anomal3(W(1,33  ),W(1,2   ),W(1,24  ),AMP(22  )) 
      CALL jwmwpa_anomal3(W(1,2   ),W(1,1   ),W(1,34  ))
      CALL FVIXXX(W(1,4   ),W(1,34  ),GWF ,ZERO    ,ZERO    ,W(1,35  ))    
      CALL JIOXXX(W(1,35  ),W(1,3   ),GWM_ADL ,ZERO    ,ZERO    ,W(1,36  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,36  ),GZ_AF ,AMP(23  ))            ! Z
      CALL JIOXXX(W(1,35  ),W(1,3   ),GWM_ZDL ,ZMASS   ,ZWIDTH  ,W(1,37  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,37  ),GZ_ZF ,AMP(24  ))            ! Z
      CALL FVOXXX(W(1,3   ),W(1,34  ),GWF ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL JIOXXX(W(1,4   ),W(1,38  ),GWM_ZUN ,ZMASS   ,ZWIDTH  ,W(1,39  ))    ! W-
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,39  ),GZ_ZF ,AMP(25  ))            ! Z
      CALL FVIXXX(W(1,5   ),W(1,29  ),GWF ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,40  ),W(1,12  ),W(1,2   ),GWF ,AMP(26  )) 
      CALL jaww_anomal3(W(1,29  ),W(1,34  ),W(1,41  ))
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,41  ),GZ_AF ,AMP(27  ))            ! Z
      CALL jzww_anomal3(W(1,29  ),W(1,34  ),W(1,42  )) 
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,42  ),GZ_ZF ,AMP(28  ))            ! Z
      CALL IOVXXX(W(1,40  ),W(1,6   ),W(1,34  ),GWF ,AMP(29  ))  
      CALL wwaa_anomal4(W(1,29  ),W(1,1   ),W(1,2   ),W(1,22  ),AMP(30  ))   
      CALL wwza_anomal4(W(1,29  ),W(1,24  ),W(1,2   ),W(1,1   ),AMP(31  ))  

c considering anomalous couplings, we get two extra graphs with AZH- and AAH-vertex
      CALL jhww_anomal3(W(1,29   ),W(1,2  ),W(1,43  ))    
      CALL azh_anomal3(W(1,1  ),W(1,24   ),W(1,43  ),AMP(32  ))  
      CALL aah_anomal3(W(1,1  ),W(1,22   ),W(1,43  ),AMP(33  ))  
      
      use_secondhiggs=.true.
      CALL jhww_anomal3(W(1,29   ),W(1,2  ),W(1,44  ))    
      CALL azh_anomal3(W(1,1  ),W(1,24   ),W(1,44  ),AMP(34  ))  
      CALL aah_anomal3(W(1,1  ),W(1,22   ),W(1,44  ),AMP(35  ))  
      use_secondhiggs=.false.
      
      awm(mu,nu) = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)-AMP(  22)-AMP(  23)-AMP(  24)-AMP(  25)
     &             -AMP(  26)-AMP(  27)-AMP(  28)-AMP(  29)-AMP(  30)
     &             -AMP(  31)
     &             -AMP(  32)-AMP(  33) ! new diagrams with Higgs (AZH- and AAH-coupling)
      if (with_secondhiggs) then
        awm(MU,NU) = awm(MU,NU)-AMP(34)-AMP(35)
      endif

      if (procid .eq. WMhadZjj) then
        ! new graphs for W- decay
        CALL JIOXXX(W(1,4   ),W(1,7   ),GWM_AUN ,ZERO   ,ZERO  ,W(1,44  ))    ! W-
        CALL FVIXXX(W(1,5   ),W(1,44  ),GAL ,ZERO    ,ZERO    ,W(1,45  ))    
        CALL IOVXXX(W(1,45  ),W(1,6   ),W(1,1   ),GAL ,AMP(34  ))            
        CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,44  ),GAL ,AMP(35  ))            
        CALL JIOXXX(W(1,4   ),W(1,25  ),GWM_AUN ,ZERO   ,ZERO  ,W(1,46  ))    ! W-
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,46  ),GAL ,AMP(36  ))            
        CALL JIOXXX(W(1,4   ),W(1,38  ),GWM_AUN ,ZERO   ,ZERO  ,W(1,47  ))    ! W-
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,47  ),GAL ,AMP(37  ))            

        CALL FVIXXX(W(1,4   ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,13  ))    
        CALL JIOXXX(W(1,13  ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,14  ))    
        CALL FVIXXX(W(1,5   ),W(1,14  ),GWF ,ZERO    ,ZERO    ,W(1,15  ))    
        CALL IOVXXX(W(1,15  ),W(1,6   ),W(1,2   ),GWF ,AMP(38  ))            
        ! CALL JVVXXX(W(1,14  ),W(1,2   ),GWWA ,ZERO    ,AWIDTH  ,W(1,16  ))      ! anom
        CALL jaww_anomal3(W(1,14  ),W(1,2   ) ,W(1,16  ))    ! anom
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,16  ),GAL ,AMP(39  ))            
        ! CALL JVVXXX(W(1,14  ),W(1,2   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,17  ))      ! anom
        CALL jzww_anomal3(W(1,14  ),W(1,2   ) ,W(1,17  ))    ! anom
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,17  ),GZL ,AMP(40  ))            
        CALL FVIXXX(W(1,13  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,18  ))    
        CALL JIOXXX(W(1,18  ),W(1,3   ),GAD ,ZERO    ,AWIDTH  ,W(1,19  ))    
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,19  ),GAL ,AMP(41  ))            
        CALL JIOXXX(W(1,18  ),W(1,3   ),GZD ,ZMASS   ,ZWIDTH  ,W(1,20  ))    
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,20  ),GZL ,AMP(42  ))            
        CALL FVOXXX(W(1,7   ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,21  ))    
        CALL JIOXXX(W(1,4   ),W(1,21  ),GAU ,ZERO    ,AWIDTH  ,W(1,22  ))    
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,22  ),GAL ,AMP(43  ))            
        CALL JIOXXX(W(1,4   ),W(1,21  ),GZU ,ZMASS   ,ZWIDTH  ,W(1,23  ))    
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,23  ),GZL ,AMP(44  ))            
        CALL JIOXXX(W(1,13  ),W(1,7   ),GAU ,ZERO    ,AWIDTH  ,W(1,24  ))    
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,24  ),GAL ,AMP(45  ))            
        CALL JIOXXX(W(1,13  ),W(1,7   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,25  ))    
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,25  ),GZL ,AMP(46  ))            

        awm(mu,nu) = awm(mu,nu) - AMP(  34)-AMP(  35)-AMP(  36)-AMP(  37)-AMP(  38)
     &             -AMP(  39)-AMP(  40)-AMP(  41)-AMP(  42)-AMP(  43)
     &             -AMP(  44)-AMP(  45)-AMP(  46)

      endif

      if (procid.eq.WMZhadjj .and. Ztodd) then
        ! new graph for Z decay
        CALL FVIXXX(W(1,5   ),W(1,29  ),GWF ,ZERO    ,ZERO    ,W(1,45  ))    
        CALL FVIXXX(W(1,45  ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,44  ))    
        CALL IOVXXX(W(1,44  ),W(1,6   ),W(1,2   ),GWF ,AMP(34  ))            
        awm(mu,nu) = awm(mu,nu) - AMP(  34)
      endif

      if (procid.eq.WMZhadjj .and. Ztouu) then
        ! new graph for Z decay
        CALL FVIXXX(W(1,5   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,44  ))    
        CALL FVIXXX(W(1,44  ),W(1,1   ),GAD ,ZERO    ,ZERO    ,W(1,45  ))    
        CALL IOVXXX(W(1,45  ),W(1,6   ),W(1,29  ),GWF ,AMP(34  ))            
        awm(mu,nu) = awm(mu,nu) - AMP(  34)
        ! replace graphs 7, 17, 20, 26, 29
        CALL FVOXXX(W(1,6   ),W(1,18  ),GWF ,ZERO    ,ZERO    ,W(1,46  ))    
        CALL IOVXXX(W(1,5   ),W(1,46  ),W(1,2   ),GWF ,AMP(35  )) 
        CALL FVIXXX(W(1,5   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,47  ))    
        CALL IOVXXX(W(1,47  ),W(1,12  ),W(1,29  ),GWF ,AMP(36  ))  
        CALL IOVXXX(W(1,47  ),W(1,6   ),W(1,33  ),GWF ,AMP(37  )) 
        CALL FVOXXX(W(1,6   ),W(1,29  ),GWF ,ZERO    ,ZERO    ,W(1,48  ))    
        CALL IOVXXX(W(1,10  ),W(1,48  ),W(1,2   ),GWF ,AMP(38  )) 
        CALL IOVXXX(W(1,5   ),W(1,48  ),W(1,34  ),GWF ,AMP(39  ))  
        awm(mu,nu) = awm(mu,nu) + AMP( 7) - AMP( 35)
     &                          + AMP(17) - AMP( 36)
     &                          + AMP(20) - AMP( 37)
     &                          + AMP(26) - AMP( 38)
     &                          + AMP(29) - AMP( 39)
      endif

          ENDDO
      ENDDO
      END
c ------------------------------------------------------------	


