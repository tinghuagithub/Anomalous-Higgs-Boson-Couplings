c
c in this file leptonic tensors with anomalous couplings needed for qq -> qq ZZ, ZZ -> 2l 2v 
c and ZZ -> 4l are computed for specific helicities (h)
c		
c ------------------------------------------------------------			
c ------------------------------------------------------------	

      subroutine wwtozz_had(q1,q2,P,h,ww)
	
      IMPLICIT NONE

      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 ww(0:3,0:3)
      integer lsign(3:6,4),ll,h
      

	! possible lepton helicities:
	data (lsign(ll,1),ll=3,6) / -1, -1, -1, -1/  !h=1
	data (lsign(ll,2),ll=3,6) / -1, -1,  1,  1/  !h=2
	data (lsign(ll,3),ll=3,6) /  1,  1, -1, -1/  !h=3
	data (lsign(ll,4),ll=3,6) /  1,  1,  1,  1/  !h=4
	
	call WWtoZZ1_had(q1,q2,P,lsign(3,h),ww(0,0))
	
	! helicity combi nr.h is selected
	
	end
		
c ------------------------------------------------------------	

      subroutine WWtoZZ1_had(q1,q2,P,lsign,wwtens)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ w- -> e+ e- mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  57) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  52) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 wwtens(0:3,0:3)
      integer lsign(3:6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c
c  lepton spinors and Z polarization vectors
#include "tensorz.inc"
C  
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
  
!      if (lswitch) then
      do i = 1,6
         w(i,3) = lep(i)
         w(i,4) = lem(i)
         w(i,5) = lup(i)
         w(i,6) = lum(i)
      
         w(i,8)  = au(i)
         w(i,10) = zu(i)
         w(i,23) = ze(i)
         w(i,25) = ae(i)
      enddo
!      else 
!        CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3   ),-1,W(1,3   ))	 
!        CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4   ),+1,W(1,4   ))	 
!        CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5   ),-1,W(1,5   ))	 
!        CALL OXXXXX(P(0,6   ),ZERO ,+lsign(6   ),+1,W(1,6   ))	 

!        CALL JIOXXX(W(1,5   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,8   ))	  
!        CALL JIOXXX(W(1,5   ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,10  ))	   
!        CALL JIOXXX(W(1,3   ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,23  ))	   
!        CALL JIOXXX(W(1,3   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,25  ))	   
!      endif

      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),WMASS ,wwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 
 
      CALL FVOXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL JIOXXX(W(1,3   ),W(1,7   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))   
      CALL wwa_anomal3(W(1,1   ),W(1,9   ),W(1,8   ),AMP(1   ))   
      CALL wwz_anomal3(W(1,1   ),W(1,9   ),W(1,10  ),AMP(2   )) 
      CALL FVIXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL JIOXXX(W(1,11  ),W(1,6   ),GWF ,WMASS   ,WWIDTH  ,W(1,12  ))    
      CALL IOVXXX(W(1,3   ),W(1,7   ),W(1,12  ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,13  ))    
      CALL JIOXXX(W(1,13  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,14  ))    
      CALL FVIXXX(W(1,5   ),W(1,14  ),GWF ,ZERO    ,ZERO    ,W(1,15  ))    
      CALL IOVXXX(W(1,15  ),W(1,6   ),W(1,2   ),GWF ,AMP(4   ))  
      CALL jaww_anomal3(W(1,14  ),W(1,2   ),W(1,16  ))   
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,16  ),GAL ,AMP(5   )) 
      CALL jzww_anomal3(W(1,14  ),W(1,2   ),W(1,17  ))   
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,17  ),GZL ,AMP(6   ))            
      CALL FVOXXX(W(1,7   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL IOVXXX(W(1,3   ),W(1,18  ),W(1,8   ),GZ_AF ,AMP(7   ))            ! Z
      CALL IOVXXX(W(1,3   ),W(1,18  ),W(1,10  ),GZ_ZF ,AMP(8   ))            ! Z
      CALL FVIXXX(W(1,13  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL JIOXXX(W(1,19  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,20  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,20  ),GAL ,AMP(9   ))            
      CALL JIOXXX(W(1,19  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,21  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,21  ),GZL ,AMP(10  ))            
      CALL JIOXXX(W(1,13  ),W(1,7   ),GZ_ZUN ,ZMASS   ,ZWIDTH  ,W(1,22  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,22  ),GZL ,AMP(11  ))                  
      CALL FVOXXX(W(1,6   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,11  ),W(1,24  ),W(1,23  ),GZN ,AMP(12  )) 
      CALL jwmwpa_anomal3(W(1,2   ),W(1,25  ),W(1,26  ))  
      CALL wwa_anomal3(W(1,1   ),W(1,26  ),W(1,8   ),AMP(13  ))
      CALL wwz_anomal3(W(1,1   ),W(1,26  ),W(1,10  ),AMP(14  )) 
      CALL jwmwpz_anomal3(W(1,2   ),W(1,23  ),W(1,27  ))    
      CALL wwa_anomal3(W(1,1   ),W(1,27  ),W(1,8   ),AMP(15  )) 
      CALL wwz_anomal3(W(1,1   ),W(1,27  ),W(1,10  ),AMP(16  )) 
      CALL FVOXXX(W(1,6   ),W(1,25  ),GAL ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,11  ),W(1,28  ),W(1,2   ),GWF ,AMP(17  ))            
      CALL FVOXXX(W(1,6   ),W(1,23  ),GZL ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL IOVXXX(W(1,11  ),W(1,29  ),W(1,2   ),GWF ,AMP(18  )) 
      CALL wwa_anomal3(W(1,12  ),W(1,2   ),W(1,25  ),AMP(19  )) 
      CALL wwz_anomal3(W(1,12  ),W(1,2   ),W(1,23  ),AMP(20  )) 
      CALL jwpawm_anomal3(W(1,25  ),W(1,1   ),W(1,30  ))    
      CALL IOVXXX(W(1,5   ),W(1,24  ),W(1,30  ),GWF ,AMP(21  )) 
      CALL jwpzwm_anomal3(W(1,23  ),W(1,1   ),W(1,31  ))  
      CALL IOVXXX(W(1,5   ),W(1,24  ),W(1,31  ),GWF ,AMP(22  ))   
      CALL wwa_anomal3(W(1,30  ),W(1,2   ),W(1,8   ),AMP(23  ))  
      CALL wwz_anomal3(W(1,30  ),W(1,2   ),W(1,10  ),AMP(24  ))  
      CALL wwa_anomal3(W(1,31  ),W(1,2   ),W(1,8   ),AMP(25  ))  
      CALL wwz_anomal3(W(1,31  ),W(1,2   ),W(1,10  ),AMP(26  )) 
      CALL jaww_anomal3(W(1,1   ),W(1,2   ),W(1,32  ))  
      CALL FVOXXX(W(1,4   ),W(1,32  ),GZ_AF ,ZERO    ,ZERO    ,W(1,33  ))    ! Z
      CALL JIOXXX(W(1,3   ),W(1,33  ),GZ_AF ,ZERO    ,ZERO    ,W(1,34  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,34  ),GAL ,AMP(27  ))            
      CALL JIOXXX(W(1,3   ),W(1,33  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,35  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,35  ),GZL ,AMP(28  )) 
      CALL jzww_anomal3(W(1,1   ),W(1,2   ),W(1,36  ))    
      CALL FVOXXX(W(1,4   ),W(1,36  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,37  ))    ! Z
      CALL JIOXXX(W(1,3   ),W(1,37  ),GZ_AF ,ZERO    ,ZERO    ,W(1,38  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,38  ),GAL ,AMP(29  ))            
      CALL JIOXXX(W(1,3   ),W(1,37  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,39  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,39  ),GZL ,AMP(30  ))            
      CALL FVIXXX(W(1,3   ),W(1,32  ),GZ_AF ,ZERO    ,ZERO    ,W(1,40  ))    ! Z
      CALL JIOXXX(W(1,40  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,41  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,41  ),GAL ,AMP(31  ))            
      CALL JIOXXX(W(1,40  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,42  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,42  ),GZL ,AMP(32  ))            
      CALL FVIXXX(W(1,3   ),W(1,36  ),GZ_ZF ,ZERO    ,ZERO    ,W(1,43  ))    ! Z
      CALL JIOXXX(W(1,43  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,44  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,44  ),GAL ,AMP(33  ))            
      CALL JIOXXX(W(1,43  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,45  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,45  ),GZL ,AMP(34  ))            
      CALL FVIXXX(W(1,5   ),W(1,25  ),GAL ,ZERO    ,ZERO    ,W(1,46  ))    
      CALL IOVXXX(W(1,46  ),W(1,24  ),W(1,1   ),GWF ,AMP(35  ))            
      CALL FVIXXX(W(1,5   ),W(1,23  ),GZL ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,47  ),W(1,24  ),W(1,1   ),GWF ,AMP(36  )) 
      CALL jhww_anomal3(W(1,1   ),W(1,2   ),W(1,48  ))
      CALL zzh_anomal3(W(1,23  ),W(1,10  ),W(1,48  ),AMP(37  ))
      CALL FVIXXX(W(1,5   ),W(1,32  ),GAL ,ZERO    ,ZERO    ,W(1,50  ))    
      CALL IOVXXX(W(1,50  ),W(1,6   ),W(1,25  ),GAL ,AMP(38  ))            
      CALL IOVXXX(W(1,50  ),W(1,6   ),W(1,23  ),GZL ,AMP(39  ))            
      CALL FVIXXX(W(1,5   ),W(1,36  ),GZL ,ZERO    ,ZERO    ,W(1,51  ))    
      CALL IOVXXX(W(1,51  ),W(1,6   ),W(1,25  ),GAL ,AMP(40  ))            
      CALL IOVXXX(W(1,51  ),W(1,6   ),W(1,23  ),GZL ,AMP(41  ))            
      CALL IOVXXX(W(1,46  ),W(1,6   ),W(1,32  ),GAL ,AMP(42  ))            
      CALL IOVXXX(W(1,47  ),W(1,6   ),W(1,32  ),GAL ,AMP(43  ))            
      CALL IOVXXX(W(1,46  ),W(1,6   ),W(1,36  ),GZL ,AMP(44  ))            
      CALL IOVXXX(W(1,47  ),W(1,6   ),W(1,36  ),GZL ,AMP(45  )) 
      CALL wwaa_anomal4(W(1,1   ),W(1,25  ),W(1,2   ),W(1,8   ),AMP(46  ))   
      CALL wwza_anomal4(W(1,1   ),W(1,10  ),W(1,2   ),W(1,25  ),AMP(47  ))  
      CALL wwza_anomal4(W(1,1   ),W(1,23  ),W(1,2   ),W(1,8   ),AMP(48  ))  
      CALL wwzz_anomal4(W(1,1   ),W(1,23  ),W(1,2   ),W(1,10  ),AMP(49  ))

c considering anomalous couplings, we get three extra graphs with AZH- and AAH-vertices
      CALL azh_anomal3(W(1,25  ),W(1,10  ),W(1,48  ),AMP(50  ))
      CALL azh_anomal3(W(1,8  ),W(1,23  ),W(1,48  ),AMP(51  ))
      CALL aah_anomal3(W(1,25  ),W(1,8  ),W(1,48  ),AMP(52  ))

      use_secondhiggs=.true.
      CALL jhww_anomal3(W(1,1   ),W(1,2   ),W(1,52  ))
      CALL zzh_anomal3(W(1,23  ),W(1,10  ),W(1,52  ),AMP(54  ))
      CALL azh_anomal3(W(1,25  ),W(1,10  ),W(1,52  ),AMP(55  ))
      CALL azh_anomal3(W(1,8  ),W(1,23  ),W(1,52  ),AMP(56  ))
      CALL aah_anomal3(W(1,25  ),W(1,8  ),W(1,52  ),AMP(57  ))
      use_secondhiggs=.false.
                                                    
      
      wwtens(MU,NU) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)+AMP(  34)+AMP(  35)
     &             +AMP(  36)+AMP(  37)+AMP(  38)+AMP(  39)+AMP(  40)
     &             +AMP(  41)+AMP(  42)+AMP(  43)+AMP(  44)+AMP(  45)
     &             +AMP(  46)+AMP(  47)+AMP(  48)+AMP(  49)
     &             +AMP(  50)+AMP(  51)+AMP( 52) ! new diagrams with Higgs (AZH- and AAH-coupling)
      if (with_secondhiggs) then
        wwtens(MU,NU) = wwtens(MU,NU)+AMP(54)+AMP(55)+AMP(56)+AMP(57)
      endif

      if (procid.eq.ZZhadjj .and. Ztouu) then
        ! new graph for Z decay
        ! replace graphs 1-12
      CALL FVIXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,38   ))    
      ! CALL JVVXXX(W(1,1   ),W(1,38   ),GWWA ,ZERO    ,AWIDTH  ,W(1,9   ))        ! anom
      CALL jaww_anomal3(W(1,1   ),W(1,38   ),W(1,9   ))
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,9   ),GAL ,AMP(1   ))            
      ! CALL JVVXXX(W(1,1   ),W(1,38   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,39  ))        ! anom
      CALL jzww_anomal3(W(1,1   ),W(1,38   ),W(1,39  ))
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,39  ),GZL ,AMP(2   ))            
      CALL FVIXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,38   ),GWF ,AMP(3   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL FVIXXX(W(1,5   ),W(1,13  ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,2   ),GWF ,AMP(4   ))            
      ! CALL JVVXXX(W(1,13  ),W(1,2   ),GWWA ,ZERO    ,AWIDTH  ,W(1,15  ))         ! anom
      CALL jaww_anomal3(W(1,13  ),W(1,2   ),W(1,15  ))
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,15  ),GAL ,AMP(5   ))            
      ! CALL JVVXXX(W(1,13  ),W(1,2   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,16  ))         ! anom
      CALL jzww_anomal3(W(1,13  ),W(1,2   ),W(1,16  ))
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,16  ),GZL ,AMP(6   ))            
      CALL FVOXXX(W(1,12  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,3   ),W(1,17  ),GAU ,ZERO    ,AWIDTH  ,W(1,18  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,18  ),GAL ,AMP(7   ))            
      CALL JIOXXX(W(1,3   ),W(1,17  ),GZU ,ZMASS   ,ZWIDTH  ,W(1,19  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,19  ),GZL ,AMP(8   ))            
      CALL FVIXXX(W(1,7   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL JIOXXX(W(1,20  ),W(1,4   ),GAU ,ZERO    ,AWIDTH  ,W(1,21  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,21  ),GAL ,AMP(9   ))            
      CALL JIOXXX(W(1,20  ),W(1,4   ),GZU ,ZMASS   ,ZWIDTH  ,W(1,22  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,22  ),GZL ,AMP(10  ))            
      CALL JIOXXX(W(1,7   ),W(1,12  ),GAD ,ZERO    ,AWIDTH  ,W(1,27  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,27  ),GAL ,AMP(53  ))            ! New graph
      CALL JIOXXX(W(1,7   ),W(1,12  ),GZD ,ZMASS   ,ZWIDTH  ,W(1,24  ))    
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,24  ),GZL ,AMP(11  ))            
      CALL FVIXXX(W(1,11  ),W(1,23  ),GZN ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,26  ),W(1,6   ),W(1,2   ),GWF ,AMP(12  ))            
      wwtens(MU,NU) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)+AMP(  34)+AMP(  35)
     &             +AMP(  36)+AMP(  37)+AMP(  38)+AMP(  39)+AMP(  40)
     &             +AMP(  41)+AMP(  42)+AMP(  43)+AMP(  44)+AMP(  45)
     &             +AMP(  46)+AMP(  47)+AMP(  48)+AMP(  49)
     &             +AMP(  50)+AMP(  51)+AMP( 52) ! new diagrams with Higgs (AZH- and AAH-coupling)
     &             +AMP(  53)                    ! new due to a-u-cpl
      endif
      if (with_secondhiggs) then
        wwtens(MU,NU) = wwtens(MU,NU)+AMP(54)+AMP(55)+AMP(56)+AMP(57)
      endif

      if (procid.eq.ZZhadjj .and. Ztodd) then
        ! new graph for Z decay
        CALL JIOXXX(W(1,13  ),W(1,7   ),GAU ,ZERO   ,ZERO  ,W(1,52  ))    ! Z
        CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,52  ),GAL ,AMP(53  ))                  
        wwtens(MU,NU) = wwtens(MU,NU) + AMP(53)
      endif
     
            ENDDO
      ENDDO

      END

c ------------------------------------------------------------	

      subroutine wwtoll_had(idb,idl,h,Q,v,wll)
	
      IMPLICIT NONE

        integer idb,idl,h
        real*8 q(0:3), v(0:3,4)
        complex*16 wll(0:3,0:3)
	integer lsign(2,2),i,ll,mu,nu
      

	data (lsign(ll,1),ll=1,2) / -1, -1/
	data (lsign(ll,2),ll=1,2) / +1, +1/
	
	if (idl.eq.1) then ! e+e-
	   if (h.eq.1.or.h.eq.2)  i = 1
	   if (h.eq.3.or.h.eq.4)  i = 2
	elseif (idl.eq.2) then ! mu+mu-
	   if (h.eq.1.or.h.eq.3)  i = 1
	   if (h.eq.2.or.h.eq.4)  i = 2
	endif   

	
	call WWtoLL1_had(idb,idl,Q,v,lsign(1,i),wll(0,0))


	end
		
c ------------------------------------------------------------	
       
      subroutine WWtoLL1_had(idb,idl,Q,v,lsign,wll)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = W+ momentum
c           idb = 2      Q = q2 = W- momentum
c	    idl = 1	 l is e
c	    idl = 2	 l is mu
c  OUPTPUT: wll(mu,nu)  lepton tensor for w w--> l+l-  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ w- -> l+ l-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   3) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=   7) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb,idl
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 wll(0:3,0:3)
      integer lsign(3:4)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, MU, NU
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors 
#include "tensorz.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
	    if (idl.eq.1) then
                q2(mu) = qe(mu)-q(mu)
		p(mu,3) = v(mu,1)
		p(mu,4) = v(mu,2)
	    else
	        q2(mu) = qu(mu)-q(mu)
		p(mu,3) = v(mu,3)
		p(mu,4) = v(mu,4)
	    endif
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
	    if (idl.eq.1) then
            	q1(mu) = qe(mu)-q(mu)
		p(mu,3) = v(mu,1)
		p(mu,4) = v(mu,2)
	    else
            	q1(mu) = qu(mu)-q(mu)
		p(mu,3) = v(mu,3)
		p(mu,4) = v(mu,4)
	    endif
         enddo
      endif

!      if (lswitch) then
        if (idl.eq.1) then
          do i = 1,6
          w(i,3) = lep(i)
          w(i,4) = lem(i)
          enddo
        else
          do i = 1,6
          w(i,3) = lup(i)
          w(i,4) = lum(i)
          enddo
        endif
!      else
!          CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
!          CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   ))              
!      endif    
     
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),WMASS ,wwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 
 
      if (idl.eq.2) then      ! leptonic decay

      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,2   ),GWF ,AMP(1   ))   
      CALL jaww_anomal3(W(1,1   ),W(1,2   ),W(1,6   ))    
      CALL IOVXXX(W(1,3   ),W(1,4   ),W(1,6   ),GAL ,AMP(2   ))  
      CALL jzww_anomal3(W(1,1   ),W(1,2   ),W(1,7   ))  
      CALL IOVXXX(W(1,3   ),W(1,4   ),W(1,7   ),GZL ,AMP(3   ))            
      
      wll(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)

      else                    ! hadronic decay

      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,2   ),GWF ,AMP(1   ))   
      CALL jaww_anomal3(W(1,1   ),W(1,2   ),W(1,6   ))    
      CALL IOVXXX(W(1,3   ),W(1,4   ),W(1,6   ),GZ_AF ,AMP(2   ))  
      CALL jzww_anomal3(W(1,1   ),W(1,2   ),W(1,7   ))  
      CALL IOVXXX(W(1,3   ),W(1,4   ),W(1,7   ),GZ_ZF ,AMP(3   ))            
      
      wll(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)
         
      if (procid.eq.ZZhadjj .and. Ztouu) then
        ! replace graph 1
        CALL FVIXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,5   ))    
        CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GWF ,AMP(1   ))            
        wll(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)
      endif

      endif
     
       enddo !nu
      enddo !mu

      end
      
c ------------------------------------------------------------	

      subroutine vvtozz_had(q1,q2,P,h,aa,az,za,zz)
	
      IMPLICIT NONE

      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 aa(0:3,0:3)
      complex*16 az(0:3,0:3)
      complex*16 za(0:3,0:3)
      complex*16 zz(0:3,0:3)
      integer lsign(3:6,4),h,ll
      

	! possible lepton helicities:
	data (lsign(ll,1),ll=3,6) / -1, -1, -1, -1/
	data (lsign(ll,2),ll=3,6) / -1, -1,  1,  1/
	data (lsign(ll,3),ll=3,6) /  1,  1, -1, -1/
	data (lsign(ll,4),ll=3,6) /  1,  1,  1,  1/
	
	call AAtoZZ1_had(q1,q2,P,lsign(3,h),aa(0,0))
	call AZtoZZ1_had(q1,q2,P,lsign(3,h),az(0,0))
	call AZtoZZ1_had(q2,q1,P,lsign(3,h),za(0,0))
	call ZZtoZZ1_had(q1,q2,P,lsign(3,h),zz(0,0))
		
	end
		
c ------------------------------------------------------------	
       
      subroutine AAtoZZ1_had(q1,q2,P,lsign,AAtens)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a a -> e+ e- mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  68) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  60) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 AAtens(0:3,0:3)
      integer lsign(3:6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I, mu,nu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors and Z polarization vectors
#include "tensorz.inc"
c
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
     
!      if (lswitch) then
       do i = 1,6
         w(i,3) = lep(i)
         w(i,4) = lem(i)
         w(i,5) = lup(i)
         w(i,6) = lum(i)

         w(i,20) = au(i)
         w(i,22) = zu(i)
         w(i,45) = ae(i)
         w(i,46) = ze(i)
      enddo
!      else 
!      	CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3   ),-1,W(1,3   ))	 
!      	CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4   ),+1,W(1,4   ))	 
!     	CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5   ),-1,W(1,5   ))	 
!      	CALL OXXXXX(P(0,6   ),ZERO ,+lsign(6   ),+1,W(1,6   ))	 

!       	CALL JIOXXX(W(1,5   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,20  ))    
!      	CALL JIOXXX(W(1,5   ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,22  ))    
!      	CALL JIOXXX(W(1,3   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,45  ))    
!      	CALL JIOXXX(W(1,3   ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,46  ))    
!      endif

      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zero ,zero, MU,-1,W(1,1  ))    
      CALL VCARTX(Q2(0),zero ,zero, NU,-1,W(1,2  ))      
      
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZ_AF ,ZERO    ,ZERO    ,W(1,7   ))    ! Z
      CALL JIOXXX(W(1,7   ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,8   ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,8   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL JIOXXX(W(1,7   ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,10  ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,10  ),GZL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,1   ),GAL ,AMP(2   ))            
      CALL FVIXXX(W(1,5   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL IOVXXX(W(1,12  ),W(1,6   ),W(1,8   ),GAL ,AMP(3   ))            
      CALL IOVXXX(W(1,12  ),W(1,6   ),W(1,10  ),GZL ,AMP(4   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,13  ))    ! Z
      CALL FVOXXX(W(1,6   ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GZ_AF ,ZERO    ,ZERO    ,W(1,15  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,15  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,3   ),W(1,13  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,16  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,16  ),GZL ,AMP(6   ))            
      CALL FVIXXX(W(1,5   ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,17  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,18  ),GZ_AF ,AMP(7   ))            ! Z
      CALL JIOXXX(W(1,17  ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,19  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,19  ),GZ_ZF ,AMP(8   ))            ! Z
      CALL FVOXXX(W(1,13  ),W(1,2   ),GZ_AF ,ZERO    ,ZERO    ,W(1,21  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,21  ),W(1,20  ),GZ_AF ,AMP(9   ))            ! Z
      CALL IOVXXX(W(1,3   ),W(1,21  ),W(1,22  ),GZ_ZF ,AMP(10  ))            ! Z
      CALL FVIXXX(W(1,7   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,23  ))    ! Z
      CALL JIOXXX(W(1,23  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,24  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,24  ),GAL ,AMP(11  ))            
      CALL JIOXXX(W(1,23  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,25  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,25  ),GZL ,AMP(12  ))            
      CALL JIOXXX(W(1,7   ),W(1,13  ),GZ_AF ,ZERO    ,ZERO    ,W(1,26  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,26  ),GAL ,AMP(13  ))            
      CALL JIOXXX(W(1,7   ),W(1,13  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,27  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,27  ),GZL ,AMP(14  ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GZ_AF ,ZERO    ,ZERO    ,W(1,28  ))    ! Z
      CALL FVOXXX(W(1,6   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL JIOXXX(W(1,3   ),W(1,28  ),GZ_AF ,ZERO    ,ZERO    ,W(1,30  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,29  ),W(1,30  ),GAL ,AMP(15  ))            
      CALL JIOXXX(W(1,3   ),W(1,28  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,31  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,29  ),W(1,31  ),GZL ,AMP(16  ))            
      CALL JIOXXX(W(1,12  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL IOVXXX(W(1,3   ),W(1,28  ),W(1,32  ),GZ_AF ,AMP(17  ))            ! Z
      CALL JIOXXX(W(1,12  ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,33  ))    
      CALL IOVXXX(W(1,3   ),W(1,28  ),W(1,33  ),GZ_ZF ,AMP(18  ))            ! Z
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,34  ))    ! Z
      CALL JIOXXX(W(1,34  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,35  ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,35  ),GAL ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL IOVXXX(W(1,36  ),W(1,6   ),W(1,2   ),GAL ,AMP(19  ))            
      CALL JIOXXX(W(1,34  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,37  ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,37  ),GZL ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL IOVXXX(W(1,38  ),W(1,6   ),W(1,2   ),GAL ,AMP(20  ))            
      CALL IOVXXX(W(1,17  ),W(1,6   ),W(1,35  ),GAL ,AMP(21  ))            
      CALL IOVXXX(W(1,17  ),W(1,6   ),W(1,37  ),GZL ,AMP(22  ))            
      CALL FVOXXX(W(1,28  ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,39  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,20  ),GZ_AF ,AMP(23  ))            ! Z
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,22  ),GZ_ZF ,AMP(24  ))            ! Z
      CALL FVIXXX(W(1,34  ),W(1,2   ),GZ_AF ,ZERO    ,ZERO    ,W(1,40  ))    ! Z
      CALL JIOXXX(W(1,40  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,41  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,41  ),GAL ,AMP(25  ))            
      CALL JIOXXX(W(1,40  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,42  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,42  ),GZL ,AMP(26  ))            
      CALL JIOXXX(W(1,34  ),W(1,28  ),GZ_AF ,ZERO    ,ZERO    ,W(1,43  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,43  ),GAL ,AMP(27  ))            
      CALL JIOXXX(W(1,34  ),W(1,28  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,44  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,44  ),GZL ,AMP(28  ))                  
      CALL IOVXXX(W(1,12  ),W(1,14  ),W(1,45  ),GAL ,AMP(29  ))            
      CALL IOVXXX(W(1,12  ),W(1,14  ),W(1,46  ),GZL ,AMP(30  ))            
      CALL FVOXXX(W(1,6   ),W(1,45  ),GAL ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,12  ),W(1,47  ),W(1,2   ),GAL ,AMP(31  ))            
      CALL FVOXXX(W(1,6   ),W(1,46  ),GZL ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL IOVXXX(W(1,12  ),W(1,48  ),W(1,2   ),GAL ,AMP(32  ))            
      CALL IOVXXX(W(1,17  ),W(1,29  ),W(1,45  ),GAL ,AMP(33  ))            
      CALL IOVXXX(W(1,17  ),W(1,29  ),W(1,46  ),GZL ,AMP(34  ))            
      CALL IOVXXX(W(1,17  ),W(1,47  ),W(1,1   ),GAL ,AMP(35  ))            
      CALL IOVXXX(W(1,17  ),W(1,48  ),W(1,1   ),GAL ,AMP(36  ))            
      CALL FVIXXX(W(1,5   ),W(1,45  ),GAL ,ZERO    ,ZERO    ,W(1,49  ))    
      CALL IOVXXX(W(1,49  ),W(1,29  ),W(1,2   ),GAL ,AMP(37  ))            
      CALL FVIXXX(W(1,5   ),W(1,46  ),GZL ,ZERO    ,ZERO    ,W(1,50  ))    
      CALL IOVXXX(W(1,50  ),W(1,29  ),W(1,2   ),GAL ,AMP(38  ))            
      CALL IOVXXX(W(1,49  ),W(1,14  ),W(1,1   ),GAL ,AMP(39  ))            
      CALL IOVXXX(W(1,50  ),W(1,14  ),W(1,1   ),GAL ,AMP(40  ))    

c considering anomalous couplings, we get four extra graphs with Higgs boson in the s-channel (ZZH-, AZH- and AAH-vertices)
      CALL jhaa_anomal3(W(1,1   ),W(1,2   ),W(1,51  ))
      CALL aah_anomal3(W(1,20  ),W(1,45  ),W(1,51  ),AMP(41  ))
      CALL azh_anomal3(W(1,20  ),W(1,46  ),W(1,51  ),AMP(42  ))
      CALL azh_anomal3(W(1,45  ),W(1,22  ),W(1,51  ),AMP(43  ))
      CALL zzh_anomal3(W(1,22  ),W(1,46  ),W(1,51  ),AMP(44  ))

c considering anomalous couplings, we get 8 extra graphs with Higgs boson in the t-channel (AZH- and AAH-vertices)
      CALL jhaz_anomal3(W(1,1   ),W(1,22  ),W(1,52  ))
      CALL azh_anomal3(W(1,2  ),W(1,46  ),W(1,52  ),AMP(45  ))
      CALL aah_anomal3(W(1,2  ),W(1,45  ),W(1,52  ),AMP(46  ))

      CALL jhaz_anomal3(W(1,1   ),W(1,46  ),W(1,53  ))
      CALL azh_anomal3(W(1,2  ),W(1,22  ),W(1,53  ),AMP(47  ))
      CALL aah_anomal3(W(1,2  ),W(1,20  ),W(1,53  ),AMP(48  ))

      CALL jhaa_anomal3(W(1,1   ),W(1,20  ),W(1,54  ))
      CALL azh_anomal3(W(1,2  ),W(1,46  ),W(1,54  ),AMP(49  ))
      CALL aah_anomal3(W(1,2  ),W(1,45  ),W(1,54  ),AMP(50  ))

      CALL jhaa_anomal3(W(1,1   ),W(1,45  ),W(1,55  ))
      CALL azh_anomal3(W(1,2  ),W(1,22  ),W(1,55  ),AMP(51  ))
      CALL aah_anomal3(W(1,2  ),W(1,20  ),W(1,55  ),AMP(52  ))

c considering anomalous couplings, we get 4 extra graphs with neutral quartic-vector-boson couplings (AAAA- , AAAZ and AAZZ-vertices)
      CALL aaaa_anomal4(W(1,1   ),W(1,2   ),W(1,20  ),W(1,45  ),AMP(53  ))
      CALL aaaz_anomal4(W(1,1   ),W(1,2   ),W(1,20  ),W(1,46  ),AMP(54  ))
      CALL aaaz_anomal4(W(1,1   ),W(1,2   ),W(1,45  ),W(1,22  ),AMP(55  ))
      CALL aazz_anomal4(W(1,1   ),W(1,2   ),W(1,22  ),W(1,46  ),AMP(56  ))

      use_secondhiggs=.true.
      CALL jhaa_anomal3(W(1,1   ),W(1,2   ),W(1,56  ))
      CALL aah_anomal3(W(1,20  ),W(1,45  ),W(1,56  ),AMP(57  ))
      CALL azh_anomal3(W(1,20  ),W(1,46  ),W(1,56  ),AMP(58  ))
      CALL azh_anomal3(W(1,45  ),W(1,22  ),W(1,56  ),AMP(59  ))
      CALL zzh_anomal3(W(1,22  ),W(1,46  ),W(1,56  ),AMP(60  ))

      CALL jhaz_anomal3(W(1,1   ),W(1,22  ),W(1,57  ))
      CALL azh_anomal3(W(1,2  ),W(1,46  ),W(1,57  ),AMP(61  ))
      CALL aah_anomal3(W(1,2  ),W(1,45  ),W(1,57  ),AMP(62  ))

      CALL jhaz_anomal3(W(1,1   ),W(1,46  ),W(1,58  ))
      CALL azh_anomal3(W(1,2  ),W(1,22  ),W(1,58  ),AMP(63  ))
      CALL aah_anomal3(W(1,2  ),W(1,20  ),W(1,58  ),AMP(64  ))

      CALL jhaa_anomal3(W(1,1   ),W(1,20  ),W(1,59  ))
      CALL azh_anomal3(W(1,2  ),W(1,46  ),W(1,59  ),AMP(65  ))
      CALL aah_anomal3(W(1,2  ),W(1,45  ),W(1,59  ),AMP(66  ))

      CALL jhaa_anomal3(W(1,1   ),W(1,45  ),W(1,60  ))
      CALL azh_anomal3(W(1,2  ),W(1,22  ),W(1,60  ),AMP(67  ))
      CALL aah_anomal3(W(1,2  ),W(1,20  ),W(1,60  ),AMP(68  ))
      use_secondhiggs=.false.

      AAtens(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)+AMP(  34)+AMP(  35)
     &             +AMP(  36)+AMP(  37)+AMP(  38)+AMP(  39)+AMP(  40)
     &             +AMP(  41)+AMP(  42)+AMP(  43)+AMP(  44) ! new diagrams with Higgs in the s-channel
     &             +AMP(  45)+AMP(  46)+AMP(  47)+AMP(  48) ! new diagrams with Higgs in the t-channel
     &             +AMP(  49)+AMP(  50)+AMP(  51)+AMP(  52) ! new diagrams with Higgs in the t-channel
     &             +AMP(  53)+AMP(  54)+AMP(  55)+AMP(  56) ! new diagrams with neutral quartic-vector-boson couplings
      if (with_secondhiggs) then
        aatens(MU,NU) = aatens(MU,NU)
     &             +AMP(  57)+AMP(  58)+AMP(  59)+AMP(  60) 
     &             +AMP(  61)+AMP(  62)+AMP(  63)+AMP(  64) 
     &             +AMP(  65)+AMP(  66)+AMP(  67)+AMP(  68) 
      endif
     
         enddo
        enddo
	
	end
	
				
c ------------------------------------------------------------
	
       
      subroutine AZtoZZ1_had(q1,q2,P,lsign,az)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a z -> e+ e- mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  68) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  60) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 az(0:3,0:3)
      integer lsign(3:6)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors and Z polarization vectors
#include "tensorz.inc"
c
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------

!      if (lswitch) then
       do i = 1,6
         w(i,3) = lep(i)
         w(i,4) = lem(i)
         w(i,5) = lup(i)
         w(i,6) = lum(i)
      
         w(i,20) = au(i)
         w(i,22) = zu(i)
         w(i,45) = ae(i)
         w(i,46) = ze(i)
       enddo
!      else 
!      	CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3   ),-1,W(1,3   ))	 
!      	CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4   ),+1,W(1,4   ))	 
!     	CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5   ),-1,W(1,5   ))	 
!      	CALL OXXXXX(P(0,6   ),ZERO ,+lsign(6   ),+1,W(1,6   ))	 
!   
!      	CALL JIOXXX(W(1,5   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,20  ))    
!      	CALL JIOXXX(W(1,5   ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,22  ))    
!      	CALL JIOXXX(W(1,3   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,45  ))    
!      	CALL JIOXXX(W(1,3   ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,46  ))    
!      endif

      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zero  ,zero, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),zMASS ,zwidth, NU,-1,W(1,2   )) 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,7   ))    ! Z
      CALL JIOXXX(W(1,7   ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,8   ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,8   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL JIOXXX(W(1,7   ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,10  ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,10  ),GZL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,1   ),GAL ,AMP(2   ))            
      CALL FVIXXX(W(1,5   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL IOVXXX(W(1,12  ),W(1,6   ),W(1,8   ),GAL ,AMP(3   ))            
      CALL IOVXXX(W(1,12  ),W(1,6   ),W(1,10  ),GZL ,AMP(4   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,13  ))    ! Z
      CALL FVOXXX(W(1,6   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GZ_AF ,ZERO    ,ZERO    ,W(1,15  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,15  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,3   ),W(1,13  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,16  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,16  ),GZL ,AMP(6   ))            
      CALL FVIXXX(W(1,5   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,17  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,18  ),GZ_AF ,AMP(7   ))            ! Z
      CALL JIOXXX(W(1,17  ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,19  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,19  ),GZ_ZF ,AMP(8   ))            ! Z
      CALL FVOXXX(W(1,13  ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,21  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,21  ),W(1,20  ),GZ_AF ,AMP(9   ))            ! Z
      CALL IOVXXX(W(1,3   ),W(1,21  ),W(1,22  ),GZ_ZF ,AMP(10  ))            ! Z
      CALL FVIXXX(W(1,7   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,23  ))    ! Z
      CALL JIOXXX(W(1,23  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,24  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,24  ),GAL ,AMP(11  ))            
      CALL JIOXXX(W(1,23  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,25  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,25  ),GZL ,AMP(12  ))            
      CALL JIOXXX(W(1,7   ),W(1,13  ),GZ_AF ,ZERO    ,ZERO    ,W(1,26  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,26  ),GAL ,AMP(13  ))            
      CALL JIOXXX(W(1,7   ),W(1,13  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,27  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,27  ),GZL ,AMP(14  ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,28  ))    ! Z
      CALL FVOXXX(W(1,6   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL JIOXXX(W(1,3   ),W(1,28  ),GZ_AF ,ZERO    ,ZERO    ,W(1,30  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,29  ),W(1,30  ),GAL ,AMP(15  ))            
      CALL JIOXXX(W(1,3   ),W(1,28  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,31  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,29  ),W(1,31  ),GZL ,AMP(16  ))            
      CALL JIOXXX(W(1,12  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL IOVXXX(W(1,3   ),W(1,28  ),W(1,32  ),GZ_AF ,AMP(17  ))            ! Z
      CALL JIOXXX(W(1,12  ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,33  ))    
      CALL IOVXXX(W(1,3   ),W(1,28  ),W(1,33  ),GZ_ZF ,AMP(18  ))            ! Z
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,34  ))    ! Z
      CALL JIOXXX(W(1,34  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,35  ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,35  ),GAL ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL IOVXXX(W(1,36  ),W(1,6   ),W(1,2   ),GZL ,AMP(19  ))            
      CALL JIOXXX(W(1,34  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,37  ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,37  ),GZL ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL IOVXXX(W(1,38  ),W(1,6   ),W(1,2   ),GZL ,AMP(20  ))            
      CALL IOVXXX(W(1,17  ),W(1,6   ),W(1,35  ),GAL ,AMP(21  ))            
      CALL IOVXXX(W(1,17  ),W(1,6   ),W(1,37  ),GZL ,AMP(22  ))            
      CALL FVOXXX(W(1,28  ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,39  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,20  ),GZ_AF ,AMP(23  ))            ! Z
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,22  ),GZ_ZF ,AMP(24  ))            ! Z
      CALL FVIXXX(W(1,34  ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,40  ))    ! Z
      CALL JIOXXX(W(1,40  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,41  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,41  ),GAL ,AMP(25  ))            
      CALL JIOXXX(W(1,40  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,42  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,42  ),GZL ,AMP(26  ))            
      CALL JIOXXX(W(1,34  ),W(1,28  ),GZ_AF ,ZERO    ,ZERO    ,W(1,43  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,43  ),GAL ,AMP(27  ))            
      CALL JIOXXX(W(1,34  ),W(1,28  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,44  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,44  ),GZL ,AMP(28  ))            
      CALL IOVXXX(W(1,12  ),W(1,14  ),W(1,45  ),GAL ,AMP(29  ))            
      CALL IOVXXX(W(1,12  ),W(1,14  ),W(1,46  ),GZL ,AMP(30  ))            
      CALL FVOXXX(W(1,6   ),W(1,45  ),GAL ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL IOVXXX(W(1,12  ),W(1,47  ),W(1,2   ),GZL ,AMP(31  ))            
      CALL FVOXXX(W(1,6   ),W(1,46  ),GZL ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL IOVXXX(W(1,12  ),W(1,48  ),W(1,2   ),GZL ,AMP(32  ))            
      CALL IOVXXX(W(1,17  ),W(1,29  ),W(1,45  ),GAL ,AMP(33  ))            
      CALL IOVXXX(W(1,17  ),W(1,29  ),W(1,46  ),GZL ,AMP(34  ))            
      CALL IOVXXX(W(1,17  ),W(1,47  ),W(1,1   ),GAL ,AMP(35  ))            
      CALL IOVXXX(W(1,17  ),W(1,48  ),W(1,1   ),GAL ,AMP(36  ))            
      CALL FVIXXX(W(1,5   ),W(1,45  ),GAL ,ZERO    ,ZERO    ,W(1,49  ))    
      CALL IOVXXX(W(1,49  ),W(1,29  ),W(1,2   ),GZL ,AMP(37  ))            
      CALL FVIXXX(W(1,5   ),W(1,46  ),GZL ,ZERO    ,ZERO    ,W(1,50  ))    
      CALL IOVXXX(W(1,50  ),W(1,29  ),W(1,2   ),GZL ,AMP(38  ))            
      CALL IOVXXX(W(1,49  ),W(1,14  ),W(1,1   ),GAL ,AMP(39  ))            
      CALL IOVXXX(W(1,50  ),W(1,14  ),W(1,1   ),GAL ,AMP(40  ))            
      

c considering anomalous couplings, we get four extra graphs with Higgs boson in the s-channel (ZZH-, AZH- and AAH-vertices)
      CALL jhaz_anomal3(W(1,1   ),W(1,2   ),W(1,51  ))
      CALL aah_anomal3(W(1,20  ),W(1,45  ),W(1,51  ),AMP(41  ))
      CALL azh_anomal3(W(1,20  ),W(1,46  ),W(1,51  ),AMP(42  ))
      CALL azh_anomal3(W(1,45  ),W(1,22  ),W(1,51  ),AMP(43  ))
      CALL zzh_anomal3(W(1,22  ),W(1,46  ),W(1,51  ),AMP(44  ))

c considering anomalous couplings, we get 8 extra graphs with Higgs boson in the t-channel (AAH-, AZH- and ZZH-vertices)
      CALL jhaz_anomal3(W(1,1   ),W(1,22  ),W(1,52  ))
      CALL zzh_anomal3(W(1,2  ),W(1,46  ),W(1,52  ),AMP(45  ))
      CALL azh_anomal3(W(1,45  ),W(1,2  ),W(1,52  ),AMP(46  ))

      CALL jhaz_anomal3(W(1,1   ),W(1,46  ),W(1,53  ))
      CALL zzh_anomal3(W(1,2  ),W(1,22  ),W(1,53  ),AMP(47  ))
      CALL azh_anomal3(W(1,20  ),W(1,2  ),W(1,53  ),AMP(48  ))

      CALL jhaa_anomal3(W(1,1   ),W(1,20  ),W(1,54  ))
      CALL zzh_anomal3(W(1,2  ),W(1,46  ),W(1,54  ),AMP(49  ))
      CALL azh_anomal3(W(1,45  ),W(1,2  ),W(1,54  ),AMP(50  ))

      CALL jhaa_anomal3(W(1,1   ),W(1,45  ),W(1,55  ))
      CALL zzh_anomal3(W(1,2  ),W(1,22  ),W(1,55  ),AMP(51  ))
      CALL azh_anomal3(W(1,20  ),W(1,2  ),W(1,55  ),AMP(52  ))

c considering anomalous couplings, we get 4 extra graphs with neutral quartic-vector-boson couplings (AAAZ- , AAZZ and AZZZ-vertices)
      CALL aaaz_anomal4(W(1,1   ),W(1,20  ),W(1,45  ),W(1,2   ),AMP(53  ))
      CALL aazz_anomal4(W(1,1   ),W(1,20  ),W(1,46  ),W(1,2   ),AMP(54  ))
      CALL aazz_anomal4(W(1,1   ),W(1,45  ),W(1,22  ),W(1,2   ),AMP(55  ))
      CALL azzz_anomal4(W(1,1   ),W(1,22  ),W(1,46  ),W(1,2   ),AMP(56  ))

      use_secondhiggs=.true.
      CALL jhaz_anomal3(W(1,1   ),W(1,2   ),W(1,56  ))
      CALL aah_anomal3(W(1,20  ),W(1,45  ),W(1,56  ),AMP(57  ))
      CALL azh_anomal3(W(1,20  ),W(1,46  ),W(1,56  ),AMP(58  ))
      CALL azh_anomal3(W(1,45  ),W(1,22  ),W(1,56  ),AMP(59  ))
      CALL zzh_anomal3(W(1,22  ),W(1,46  ),W(1,56  ),AMP(60  ))

      CALL jhaz_anomal3(W(1,1   ),W(1,22  ),W(1,57  ))
      CALL zzh_anomal3(W(1,2  ),W(1,46  ),W(1,57  ),AMP(61  ))
      CALL azh_anomal3(W(1,45  ),W(1,2  ),W(1,57  ),AMP(62  ))

      CALL jhaz_anomal3(W(1,1   ),W(1,46  ),W(1,58  ))
      CALL zzh_anomal3(W(1,2  ),W(1,22  ),W(1,58  ),AMP(63  ))
      CALL azh_anomal3(W(1,20  ),W(1,2  ),W(1,58  ),AMP(64  ))

      CALL jhaa_anomal3(W(1,1   ),W(1,20  ),W(1,59  ))
      CALL zzh_anomal3(W(1,2  ),W(1,46  ),W(1,59  ),AMP(65  ))
      CALL azh_anomal3(W(1,45  ),W(1,2  ),W(1,59  ),AMP(66  ))

      CALL jhaa_anomal3(W(1,1   ),W(1,45  ),W(1,60  ))
      CALL zzh_anomal3(W(1,2  ),W(1,22  ),W(1,60  ),AMP(67  ))
      CALL azh_anomal3(W(1,20  ),W(1,2  ),W(1,60  ),AMP(68  ))
      use_secondhiggs=.false.


      az(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)+AMP(  34)+AMP(  35)
     &             +AMP(  36)+AMP(  37)+AMP(  38)+AMP(  39)+AMP(  40)
     &             +AMP(  41)+AMP(  42)+AMP(  43)+AMP(  44) ! new diagrams with Higgs in the s-channel
     &             +AMP(  45)+AMP(  46)+AMP(  47)+AMP(  48) ! new diagrams with Higgs in the t-channel
     &             +AMP(  49)+AMP(  50)+AMP(  51)+AMP(  52) ! new diagrams with Higgs in the t-channel
     &             +AMP(  53)+AMP(  54)+AMP(  55)+AMP(  56) ! new diagrams with neutral quartic-vector-boson couplings
      if (with_secondhiggs) then
        az(MU,NU) = az(MU,NU)
     &             +AMP(  57)+AMP(  58)+AMP(  59)+AMP(  60) 
     &             +AMP(  61)+AMP(  62)+AMP(  63)+AMP(  64) 
     &             +AMP(  65)+AMP(  66)+AMP(  67)+AMP(  68) 
      endif

        enddo
       enddo

      END

c ------------------------------------------------------------	
c       
      subroutine ZZtoZZ1_had(q1,q2,P,lsign,ZZtens)
C 
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z z -> e+ e- mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=  68) 
      INTEGER    NWAVEFUNCS   
      PARAMETER (NWAVEFUNCS=  61) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 ZZtens(0:3,0:3)
      integer lsign(3:6)
C  
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors and Z polarization vectors
#include "tensorz.inc"
C  
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
C   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------

!      if (lswitch) then
       do i = 1,6
         w(i,3) = lep(i)
         w(i,4) = lem(i)
         w(i,5) = lup(i)
         w(i,6) = lum(i)

         w(i,20) = au(i)
         w(i,22) = zu(i)
         w(i,45) = ae(i)
         w(i,46) = ze(i)
       enddo
!      else 
!      	CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3   ),-1,W(1,3   ))	 
!      	CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4   ),+1,W(1,4   ))	 
!     	CALL IXXXXX(P(0,5   ),ZERO ,-lsign(5   ),-1,W(1,5   ))	 
!      	CALL OXXXXX(P(0,6   ),ZERO ,+lsign(6   ),+1,W(1,6   ))	 

!      	CALL JIOXXX(W(1,5   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,20  ))    
!      	CALL JIOXXX(W(1,5   ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,22  ))    
!      	CALL JIOXXX(W(1,3   ),W(1,4   ),GAL ,ZERO    ,ZERO    ,W(1,45  ))    
!      	CALL JIOXXX(W(1,3   ),W(1,4   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,46  ))    
!      endif

      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),ZMASS ,zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),ZMASS ,zwidth, NU,-1,W(1,2   )) 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,7   ))    ! Z
      CALL JIOXXX(W(1,7   ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,8   ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,8   ),GAL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,1   ),GZL ,AMP(1   ))            
      CALL JIOXXX(W(1,7   ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,10  ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,10  ),GZL ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,11  ),W(1,6   ),W(1,1   ),GZL ,AMP(2   ))            
      CALL FVIXXX(W(1,5   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL IOVXXX(W(1,12  ),W(1,6   ),W(1,8   ),GAL ,AMP(3   ))            
      CALL IOVXXX(W(1,12  ),W(1,6   ),W(1,10  ),GZL ,AMP(4   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,13  ))    ! Z
      CALL FVOXXX(W(1,6   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL JIOXXX(W(1,3   ),W(1,13  ),GZ_AF ,ZERO    ,ZERO    ,W(1,15  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,15  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,3   ),W(1,13  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,16  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,16  ),GZL ,AMP(6   ))            
      CALL FVIXXX(W(1,5   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,17  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,18  ),GZ_AF ,AMP(7   ))            ! Z
      CALL JIOXXX(W(1,17  ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,19  ))    
      CALL IOVXXX(W(1,3   ),W(1,13  ),W(1,19  ),GZ_ZF ,AMP(8   ))            ! Z
      CALL FVOXXX(W(1,13  ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,21  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,21  ),W(1,20  ),GZ_AF ,AMP(9   ))            ! Z
      CALL IOVXXX(W(1,3   ),W(1,21  ),W(1,22  ),GZ_ZF ,AMP(10  ))            ! Z
      CALL FVIXXX(W(1,7   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,23  ))    ! Z
      CALL JIOXXX(W(1,23  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,24  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,24  ),GAL ,AMP(11  ))            
      CALL JIOXXX(W(1,23  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,25  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,25  ),GZL ,AMP(12  ))            
      CALL JIOXXX(W(1,7   ),W(1,13  ),GZ_AF ,ZERO    ,ZERO    ,W(1,26  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,26  ),GAL ,AMP(13  ))            
      CALL JIOXXX(W(1,7   ),W(1,13  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,27  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,27  ),GZL ,AMP(14  ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,28  ))    ! Z
      CALL FVOXXX(W(1,6   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL JIOXXX(W(1,3   ),W(1,28  ),GZ_AF ,ZERO    ,ZERO    ,W(1,30  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,29  ),W(1,30  ),GAL ,AMP(15  ))            
      CALL JIOXXX(W(1,3   ),W(1,28  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,31  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,29  ),W(1,31  ),GZL ,AMP(16  ))            
      CALL JIOXXX(W(1,12  ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL IOVXXX(W(1,3   ),W(1,28  ),W(1,32  ),GZ_AF ,AMP(17  ))            ! Z
      CALL JIOXXX(W(1,12  ),W(1,6   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,33  ))    
      CALL IOVXXX(W(1,3   ),W(1,28  ),W(1,33  ),GZ_ZF ,AMP(18  ))            ! Z
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,34  ))    ! Z
      CALL JIOXXX(W(1,34  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,35  ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,35  ),GAL ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL IOVXXX(W(1,36  ),W(1,6   ),W(1,2   ),GZL ,AMP(19  ))            
      CALL JIOXXX(W(1,34  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,37  ))    ! Z
      CALL FVIXXX(W(1,5   ),W(1,37  ),GZL ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL IOVXXX(W(1,38  ),W(1,6   ),W(1,2   ),GZL ,AMP(20  ))            
      CALL IOVXXX(W(1,17  ),W(1,6   ),W(1,35  ),GAL ,AMP(21  ))            
      CALL IOVXXX(W(1,17  ),W(1,6   ),W(1,37  ),GZL ,AMP(22  ))            
      CALL FVOXXX(W(1,28  ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,39  ))    ! Z
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,20  ),GZ_AF ,AMP(23  ))            ! Z
      CALL IOVXXX(W(1,3   ),W(1,39  ),W(1,22  ),GZ_ZF ,AMP(24  ))            ! Z
      CALL FVIXXX(W(1,34  ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,40  ))    ! Z
      CALL JIOXXX(W(1,40  ),W(1,4   ),GZ_AF ,ZERO    ,ZERO    ,W(1,41  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,41  ),GAL ,AMP(25  ))            
      CALL JIOXXX(W(1,40  ),W(1,4   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,42  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,42  ),GZL ,AMP(26  ))            
      CALL JIOXXX(W(1,34  ),W(1,28  ),GZ_AF ,ZERO    ,ZERO    ,W(1,43  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,43  ),GAL ,AMP(27  ))            
      CALL JIOXXX(W(1,34  ),W(1,28  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,44  ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,6   ),W(1,44  ),GZL ,AMP(28  ))            
      CALL IOVXXX(W(1,12  ),W(1,14  ),W(1,45  ),GAL ,AMP(29  ))            
      CALL IOVXXX(W(1,12  ),W(1,14  ),W(1,46  ),GZL ,AMP(30  ))   
      CALL jhzz_anomal3(W(1,46  ),W(1,2   ),W(1,47  ))                                                          
      CALL zzh_anomal3(W(1,22  ),W(1,1   ),W(1,47  ),AMP(31  ))  
      CALL FVOXXX(W(1,6   ),W(1,45  ),GAL ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL IOVXXX(W(1,12  ),W(1,48  ),W(1,2   ),GZL ,AMP(32  ))            
      CALL FVOXXX(W(1,6   ),W(1,46  ),GZL ,ZERO    ,ZERO    ,W(1,49  ))    
      CALL IOVXXX(W(1,12  ),W(1,49  ),W(1,2   ),GZL ,AMP(33  ))            
      CALL IOVXXX(W(1,17  ),W(1,29  ),W(1,45  ),GAL ,AMP(34  ))            
      CALL IOVXXX(W(1,17  ),W(1,29  ),W(1,46  ),GZL ,AMP(35  ))  
      CALL jhzz_anomal3(W(1,1   ),W(1,46  ),W(1,50  ))                                                          
      CALL zzh_anomal3(W(1,22  ),W(1,2   ),W(1,50  ),AMP(36  )) 
      CALL IOVXXX(W(1,17  ),W(1,48  ),W(1,1   ),GZL ,AMP(37  ))            
      CALL IOVXXX(W(1,17  ),W(1,49  ),W(1,1   ),GZL ,AMP(38  ))            
      CALL FVIXXX(W(1,5   ),W(1,45  ),GAL ,ZERO    ,ZERO    ,W(1,51  ))    
      CALL IOVXXX(W(1,51  ),W(1,29  ),W(1,2   ),GZL ,AMP(39  ))            
      CALL FVIXXX(W(1,5   ),W(1,46  ),GZL ,ZERO    ,ZERO    ,W(1,52  ))    
      CALL IOVXXX(W(1,52  ),W(1,29  ),W(1,2   ),GZL ,AMP(40  ))            
      CALL IOVXXX(W(1,51  ),W(1,14  ),W(1,1   ),GZL ,AMP(41  ))            
      CALL IOVXXX(W(1,52  ),W(1,14  ),W(1,1   ),GZL ,AMP(42  )) 
      CALL jhzz_anomal3(W(1,1   ),W(1,2   ),W(1,53  ))                                                          
      CALL zzh_anomal3(W(1,22  ),W(1,46  ),W(1,53  ),AMP(43  ))     

c considering anomalous couplings, we get three extra graphs with Higgs boson in the s-channel (ZZH-, AZH- and AAH-vertices)
      CALL aah_anomal3(W(1,20  ),W(1,45  ),W(1,53  ),AMP(44  ))
      CALL azh_anomal3(W(1,20  ),W(1,46  ),W(1,53  ),AMP(45  ))
      CALL azh_anomal3(W(1,45  ),W(1,22  ),W(1,53  ),AMP(46  ))

c considering anomalous couplings, we get 6 extra graphs with Higgs boson in the t-channel (AZH- and ZZH-vertices)
      CALL azh_anomal3(W(1,20  ),W(1,1  ),W(1,47  ),AMP(47  ))

      CALL azh_anomal3(W(1,20  ),W(1,2  ),W(1,50  ),AMP(48  ))

      CALL jhaz_anomal3(W(1,45  ),W(1,1   ),W(1,55  ))
      CALL zzh_anomal3(W(1,22  ),W(1,2  ),W(1,55  ),AMP(49  ))
      CALL azh_anomal3(W(1,20  ),W(1,2  ),W(1,55  ),AMP(50  ))

      CALL jhaz_anomal3(W(1,45  ),W(1,2   ),W(1,56  ))
      CALL zzh_anomal3(W(1,22  ),W(1,1  ),W(1,56  ),AMP(51  ))
      CALL azh_anomal3(W(1,20  ),W(1,1  ),W(1,56  ),AMP(52  ))

c considering anomalous couplings, we get 4 extra graphs with neutral quartic-vector-boson couplings (ZZZZ- , AZZZ and AAZZ-vertices)
      CALL zzzz_anomal4(W(1,22  ),W(1,46  ),W(1,1   ),W(1,2   ),AMP(53  ))
      CALL azzz_anomal4(W(1,20  ),W(1,46  ),W(1,1   ),W(1,2   ),AMP(54  ))
      CALL azzz_anomal4(W(1,45  ),W(1,22  ),W(1,1   ),W(1,2   ),AMP(55  ))
      CALL aazz_anomal4(W(1,20  ),W(1,45  ),W(1,1   ),W(1,2   ),AMP(56  ))

      use_secondhiggs=.true.
      CALL jhzz_anomal3(W(1,46  ),W(1,2   ),W(1,57  ))          
      CALL zzh_anomal3(W(1,22  ),W(1,1   ),W(1,57  ),AMP(57  ))  
      CALL jhzz_anomal3(W(1,1   ),W(1,46  ),W(1,58  ))          
      CALL zzh_anomal3(W(1,22  ),W(1,2   ),W(1,58  ),AMP(58  )) 
      CALL jhzz_anomal3(W(1,1   ),W(1,2   ),W(1,59  ))           
      CALL zzh_anomal3(W(1,22  ),W(1,46  ),W(1,59  ),AMP(59  ))     

      CALL aah_anomal3(W(1,20  ),W(1,45  ),W(1,59  ),AMP(60  ))
      CALL azh_anomal3(W(1,20  ),W(1,46  ),W(1,59  ),AMP(61  ))
      CALL azh_anomal3(W(1,45  ),W(1,22  ),W(1,59  ),AMP(62  ))

      CALL azh_anomal3(W(1,20  ),W(1,1  ),W(1,57  ),AMP(63  ))

      CALL azh_anomal3(W(1,20  ),W(1,2  ),W(1,58  ),AMP(64  ))

      CALL jhaz_anomal3(W(1,45  ),W(1,1   ),W(1,60  ))
      CALL zzh_anomal3(W(1,22  ),W(1,2  ),W(1,60  ),AMP(65  ))
      CALL azh_anomal3(W(1,20  ),W(1,2  ),W(1,60  ),AMP(66  ))

      CALL jhaz_anomal3(W(1,45  ),W(1,2   ),W(1,61  ))
      CALL zzh_anomal3(W(1,22  ),W(1,1  ),W(1,61  ),AMP(67  ))
      CALL azh_anomal3(W(1,20  ),W(1,1  ),W(1,61  ),AMP(68  ))
      use_secondhiggs=.false.

      ZZtens(mu,nu)  = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)+AMP(   9)+AMP(  10)
     &             +AMP(  11)+AMP(  12)+AMP(  13)+AMP(  14)+AMP(  15)
     &             +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  19)+AMP(  20)
     &             +AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)+AMP(  25)
     &             +AMP(  26)+AMP(  27)+AMP(  28)+AMP(  29)+AMP(  30)
     &             +AMP(  31)+AMP(  32)+AMP(  33)+AMP(  34)+AMP(  35)
     &             +AMP(  36)+AMP(  37)+AMP(  38)+AMP(  39)+AMP(  40)
     &             +AMP(  41)+AMP(  42)+AMP(  43)           
     &             +AMP(  44)+AMP(  45)+AMP(  46)           ! new diagrams with Higgs in the s-channel
     &             +AMP(  47)+AMP(  48)+AMP(  49)+AMP(  50) ! new diagrams with Higgs in the t-channel
     &             +AMP(  51)+AMP(  52)                     ! new diagrams with Higgs in the t-channel
     &             +AMP(  53)+AMP(  54)+AMP(  55)+AMP(  56) ! new diagrams with neutral quartic-vector-boson couplings
      if (with_secondhiggs) then
        zztens(MU,NU) = zztens(MU,NU)
     &             +AMP(  57)+AMP(  58)+AMP(  59)+AMP(  60) 
     &             +AMP(  61)+AMP(  62)+AMP(  63)+AMP(  64) 
     &             +AMP(  65)+AMP(  66)+AMP(  67)+AMP(  68) 
      endif
 
        enddo
       enddo

      END

c ------------------------------------------------------------	

      subroutine vvtoll_had(idb,idl,h,Q,v,aa,az,za,zz)
	
      IMPLICIT NONE

        integer idb,idbb,idl,h
        real*8 q(0:3), v(0:3,4)
        complex*16 aa(0:3,0:3)
        complex*16 az(0:3,0:3)
        complex*16 za(0:3,0:3)
c        complex*16 zan(0:3,0:3)
        complex*16 zz(0:3,0:3)
	integer lsign(2,2),i,ll,mu
      
c	data (lsign(ll,1),ll=1,2) /  1,  1/
c	data (lsign(ll,2),ll=1,2) / -1, -1/
	
	data (lsign(ll,1),ll=1,2) / -1, -1/
	data (lsign(ll,2),ll=1,2) / +1, +1/
	
	idbb = -idb+3
	
	if (idl.eq.1) then ! e+e-
	   if (h.eq.1.or.h.eq.2)  i = 1
	   if (h.eq.3.or.h.eq.4)  i = 2
	elseif (idl.eq.2) then ! mu+mu-
	   if (h.eq.1.or.h.eq.3)  i = 1
	   if (h.eq.2.or.h.eq.4)  i = 2
	endif   

	        call AAtoLL1_had(idb ,idl,Q,v,lsign(1,i),aa(0,0))
	        call AZtoLL1_had(idb ,idl,Q,v,lsign(1,i),az(0,0))
	        call ZAtoLL1_had(idb,idl,Q,v,lsign(1,i),za(0,0)) 
	        call ZZtoLL1_had(idb ,idl,Q,v,lsign(1,i),zz(0,0))
			
	end
		
c ------------------------------------------------------------	
       
      subroutine AAtoLL1_had(idb,idl,Q,v,lsign,AAtens)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = A(2) momentum
c	    idl = 1	 l is e
c	    idl = 2	 l is mu
c  OUPTPUT: AAtens(mu,nu)  lepton tensor for a a --> l+l-  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a a -> e+ e-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS   
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb,idl
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 AAtens(0:3,0:3)
      integer lsign(3:4)
C    
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
#include "tensorz.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
	    if (idl.eq.1) then
                q2(mu) = qe(mu)-q(mu)
		p(mu,3) = v(mu,1)
		p(mu,4) = v(mu,2)
	    else
	        q2(mu) = qu(mu)-q(mu)
		p(mu,3) = v(mu,3)
		p(mu,4) = v(mu,4)
	    endif
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
	    if (idl.eq.1) then
            	q1(mu) = qe(mu)-q(mu)
		p(mu,3) = v(mu,1)
		p(mu,4) = v(mu,2)
	    else
            	q1(mu) = qu(mu)-q(mu)
		p(mu,3) = v(mu,3)
		p(mu,4) = v(mu,4)
	    endif
         enddo
      endif

!      if (lswitch) then
        if (idl.eq.1) then
          do i = 1,6
          w(i,3) = lep(i)
          w(i,4) = lem(i)
          enddo
        else
          do i = 1,6
          w(i,3) = lup(i)
          w(i,4) = lum(i)
          enddo
        endif
!      else	 
!             	  CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))	     
!             	  CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
!      endif
             
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zero ,zero, MU,-1,W(1,1	  ))	    
      CALL VCARTX(Q2(0),zero ,zero, NU,-1,W(1,2	  )) 
 
      if (idl.eq.2) then      ! leptonic decay

      CALL FVIXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GAL ,AMP(2   ))            
      
      AAtens(mu,nu) = +AMP(   1)+AMP(   2)

      else                    ! hadronic decay
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZ_AF ,ZERO    ,ZERO    ,W(1,5   ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZ_AF ,AMP(1   ))            ! Z
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,6   ))    ! Z
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZ_AF ,AMP(2   ))            ! Z
      
      AAtens(mu,nu) = +AMP(   1)+AMP(   2)

      endif
     
       enddo !nu
      enddo !mu

      end

c ------------------------------------------------------------	
       
      subroutine AZtoLL1_had(idb,idl,Q,v,lsign,az)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = A(2) momentum
c	    idl = 1	 l is e
c	    idl = 2	 l is mu
c  OUPTPUT: aa(mu,nu)  lepton tensor for a z --> l+l-  
C  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a z -> e+ e-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb,idl
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 az(0:3,0:3)
      integer lsign(3:4)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
#include "tensorz.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
	    if (idl.eq.1) then
                q2(mu) = qe(mu)-q(mu)
		p(mu,3) = v(mu,1)
		p(mu,4) = v(mu,2)
	    else
	        q2(mu) = qu(mu)-q(mu)
		p(mu,3) = v(mu,3)
		p(mu,4) = v(mu,4)
	    endif
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
	    if (idl.eq.1) then
            	q1(mu) = qe(mu)-q(mu)
		p(mu,3) = v(mu,1)
		p(mu,4) = v(mu,2)
	    else
            	q1(mu) = qu(mu)-q(mu)
		p(mu,3) = v(mu,3)
		p(mu,4) = v(mu,4)
	    endif
         enddo
      endif
	 
!        if (lswitch) then
        if (idl.eq.1) then
          do i = 1,6
          w(i,3) = lep(i)
          w(i,4) = lem(i)
          enddo
        else
          do i = 1,6
          w(i,3) = lup(i)
          w(i,4) = lum(i)
          enddo
        endif
!      else	 
!             CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
!             CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
!      endif
             
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zero  ,zero, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),zMASS ,zwidth, NU,-1,W(1,2   )) 

      if (idl.eq.2) then      ! leptonic decay

      CALL FVIXXX(W(1,3   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZL ,AMP(2   ))            
      
      az(mu,nu) = +AMP(   1)+AMP(   2)

      else                    ! hadronic decay
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,5   ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZ_AF ,AMP(1   ))            ! Z
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,6   ))    ! Z
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZ_ZF ,AMP(2   ))            ! Z
      
      az(mu,nu) = +AMP(   1)+AMP(   2)

      endif
     
       enddo !nu
      enddo !mu

      end

c ------------------------------------------------------------	
       
      subroutine ZAtoLL1_had(idb,idl,Q,v,lsign,ZAtens)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = A(2) momentum
c	    idl = 1	 l is e
c	    idl = 2	 l is mu
c  OUPTPUT: aa(mu,nu)  lepton tensor for a z --> l+l-  
C  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z a -> e+ e-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb,idl
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 ZAtens(0:3,0:3)
      integer lsign(3:4)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
#include "tensorz.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
	    if (idl.eq.1) then
                q2(mu) = qe(mu)-q(mu)
		p(mu,3) = v(mu,1)
		p(mu,4) = v(mu,2)
	    else
	        q2(mu) = qu(mu)-q(mu)
		p(mu,3) = v(mu,3)
		p(mu,4) = v(mu,4)
	    endif
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
	    if (idl.eq.1) then
            	q1(mu) = qe(mu)-q(mu)
		p(mu,3) = v(mu,1)
		p(mu,4) = v(mu,2)
	    else
            	q1(mu) = qu(mu)-q(mu)
		p(mu,3) = v(mu,3)
		p(mu,4) = v(mu,4)
	    endif
         enddo
      endif

!      if (lswitch) then
        if (idl.eq.1) then
          do i = 1,6
          w(i,3) = lep(i)
          w(i,4) = lem(i)
          enddo
        else
          do i = 1,6
          w(i,3) = lup(i)
          w(i,4) = lum(i)
          enddo
        endif
!      else 
!          CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
!          CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
!      endif  
     
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zmass ,zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),zero  ,zero , NU,-1,W(1,2   )) 

      if (idl.eq.2) then      ! leptonic decay

      CALL FVIXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZL ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GAL ,AMP(2   ))            
      
      ZAtens(mu,nu) = +AMP(   1)+AMP(   2)

      else                    ! hadronic decay

      CALL FVIXXX(W(1,3   ),W(1,2   ),GZ_AF ,ZERO    ,ZERO    ,W(1,5   ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZ_ZF ,AMP(1   ))            ! Z
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,6   ))    ! Z
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZ_AF ,AMP(2   ))            ! Z
      
      ZAtens(mu,nu) = +AMP(   1)+AMP(   2)
 
      endif
     
        enddo !nu
      enddo !mu

      end


c ------------------------------------------------------------	
       
      subroutine ZZtoLL1_had(idb,idl,Q,v,lsign,ZZtens)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = A(2) momentum
c	    idl = 1	 l is e
c	    idl = 2	 l is mu
c  OUPTPUT: aa(mu,nu)  lepton tensor for z z --> l+l-  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z z -> e+ e-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS   
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb,idl
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 ZZtens(0:3,0:3)
      integer lsign(3:4)
C  
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
#include "tensorz.inc"
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
	    if (idl.eq.1) then
                q2(mu) = qe(mu)-q(mu)
		p(mu,3) = v(mu,1)
		p(mu,4) = v(mu,2)
	    else
	        q2(mu) = qu(mu)-q(mu)
		p(mu,3) = v(mu,3)
		p(mu,4) = v(mu,4)
	    endif
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
	    if (idl.eq.1) then
            	q1(mu) = qe(mu)-q(mu)
		p(mu,3) = v(mu,1)
		p(mu,4) = v(mu,2)
	    else
            	q1(mu) = qu(mu)-q(mu)
		p(mu,3) = v(mu,3)
		p(mu,4) = v(mu,4)
	    endif
         enddo
      endif

!      if (lswitch) then
        if (idl.eq.1) then
          do i = 1,6
          w(i,3) = lep(i)
          w(i,4) = lem(i)
          enddo
        else
          do i = 1,6
          w(i,3) = lup(i)
          w(i,4) = lum(i)
          enddo
        endif
!      else
!          CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
!          CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
!      endif
	  
	     
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zMASS ,zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),zMASS ,zwidth, NU,-1,W(1,2   )) 

      if (idl.eq.2) then      ! leptonic decay
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZL ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZL ,AMP(2   ))            
      
      ZZtens(mu,nu) = +AMP(   1)+AMP(   2)

      else                    ! hadronic decay
        
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,5   ))    ! Z
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZ_ZF ,AMP(1   ))            ! Z
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,6   ))    ! Z
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZ_ZF ,AMP(2   ))            ! Z
      
      ZZtens(mu,nu) = +AMP(   1)+AMP(   2)

      endif
     
       enddo !nu
      enddo !mu

      end

c ------------------------------------------------------------	

      subroutine vto4l_had(p,h,a4l,z4l)
	
      IMPLICIT NONE

      REAL*8 P(0:3,2:5)
      complex*16 a4l(0:5),z4l(0:5)
      integer lsign(2:5,4),h,ll   

	! possible lepton helicities:
	data (lsign(ll,1),ll=2,5) / -1, -1, -1, -1/  !h=1
	data (lsign(ll,2),ll=2,5) / -1, -1,  1,  1/  !h=2
	data (lsign(ll,3),ll=2,5) /  1,  1, -1, -1/  !h=3
	data (lsign(ll,4),ll=2,5) /  1,  1,  1,  1/  !h=4

	call Zto4l_had(P,lsign(2,h),z4l)
	call Ato4l_had(P,lsign(2,h),a4l)
		
			
	end
		
c ------------------------------------------------------------	
c ------------------------------------------------------------	
   
      subroutine Zto4L_had(P,lsign,z)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z -> e+ e- mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   8) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=  16) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5),q(0:3)
      INTEGER lsign(2:5)
      complex*16 z(0:5)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors and Z polarization vectors
#include "tensorz.inc"

C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------

!      if (lswitch) then
         do i = 1,6
             w(i,2) = lep(i)
             w(i,3) = lem(i)
             w(i,4) = lup(i)
             w(i,5) = lum(i)
         enddo
!      else 
!        CALL IXXXXX(P(0,2   ),ZERO ,-lsign(2),-1,W(1,2   ))       
!        CALL OXXXXX(P(0,3   ),ZERO ,+lsign(3),+1,W(1,3   ))       
!        CALL IXXXXX(P(0,4   ),ZERO ,-lsign(4),-1,W(1,4   ))       
!        CALL OXXXXX(P(0,5   ),ZERO ,+lsign(5),+1,W(1,5   )) 
!      endif
             
      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo
c
      do mu = 0,3
      CALL VCARTX(Q(0),zmass ,zwidth, MU,-1,W(1,1   ))
      CALL JIOXXX(W(1,2   ),W(1,3   ),GZ_AF ,ZERO    ,ZERO    ,W(1,6   ))    ! Z
      CALL FVIXXX(W(1,4   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,7   ),W(1,5   ),W(1,1   ),GZL ,AMP(1   ))            
      CALL JIOXXX(W(1,2   ),W(1,3   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,8   ))    ! Z
      CALL FVIXXX(W(1,4   ),W(1,8   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,5   ),W(1,1   ),GZL ,AMP(2   ))            
      CALL FVIXXX(W(1,4   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,10  ),W(1,5   ),W(1,6   ),GAL ,AMP(3   ))            
      CALL IOVXXX(W(1,10  ),W(1,5   ),W(1,8   ),GZL ,AMP(4   ))            
      CALL FVOXXX(W(1,3   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,11  ))    ! Z
      CALL JIOXXX(W(1,2   ),W(1,11  ),GZ_AF ,ZERO    ,ZERO    ,W(1,12  ))    ! Z
      CALL IOVXXX(W(1,4   ),W(1,5   ),W(1,12  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,2   ),W(1,11  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,13  ))    ! Z
      CALL IOVXXX(W(1,4   ),W(1,5   ),W(1,13  ),GZL ,AMP(6   ))            
      CALL FVIXXX(W(1,2   ),W(1,1   ),GZ_ZF ,ZERO    ,ZERO    ,W(1,14  ))    ! Z
      CALL JIOXXX(W(1,14  ),W(1,3   ),GZ_AF ,ZERO    ,ZERO    ,W(1,15  ))    ! Z
      CALL IOVXXX(W(1,4   ),W(1,5   ),W(1,15  ),GAL ,AMP(7   ))            
      CALL JIOXXX(W(1,14  ),W(1,3   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,16  ))    ! Z
      CALL IOVXXX(W(1,4   ),W(1,5   ),W(1,16  ),GZL ,AMP(8   ))            
      z(mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)
     
      enddo
             
      z(4) = dcmplx(q(0),q(3))
      z(5) = dcmplx(q(1),q(2))

      return
      END
      
c------------------------------------------------------------------------      
          
      subroutine Ato4L_had(P,lsign,a)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a -> e+ e- mu+ mu-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   8) 
      INTEGER    NWAVEFUNCS    
      PARAMETER (NWAVEFUNCS=  16) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,2:5),q(0:3)
      INTEGER lsign(2:5)
      complex*16 a(0:5)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
#include "VBFNLO/utilities/coupl.inc"
#include "VBFNLO/utilities/global.inc"
#include "VBFNLO/utilities/coupl_haddecay.inc"
#include "VBFNLO/utilities/process.inc"
C  
c  lepton spinors and Z polarization vectors
#include "tensorz.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------

!      if (lswitch) then
         do i = 1,6
             w(i,2) = lep(i)
             w(i,3) = lem(i)
             w(i,4) = lup(i)
             w(i,5) = lum(i)
             
             w(i,6) = ae(i)
             w(i,8) = ze(i)
         enddo
!      else   
!        CALL IXXXXX(P(0,2   ),ZERO ,-lsign(2   ),-1,W(1,2   ))	   
!        CALL OXXXXX(P(0,3   ),ZERO ,+lsign(3   ),+1,W(1,3   ))	   
!        CALL IXXXXX(P(0,4   ),ZERO ,-lsign(4   ),-1,W(1,4   ))	   
!        CALL OXXXXX(P(0,5   ),ZERO ,+lsign(5   ),+1,W(1,5   ))	   
!        CALL JIOXXX(W(1,2   ),W(1,3   ),GAL ,ZERO    ,ZERO    ,W(1,6   ))    
!        CALL JIOXXX(W(1,2   ),W(1,3   ),GZL ,ZMASS   ,ZWIDTH  ,W(1,8   ))    
!      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo

c
      do mu = 0,3
      CALL VCARTX(Q(0),zero ,zero, MU,-1,W(1,1   ))
      CALL FVIXXX(W(1,4   ),W(1,6   ),GAL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,7   ),W(1,5   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL FVIXXX(W(1,4   ),W(1,8   ),GZL ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,5   ),W(1,1   ),GAL ,AMP(2   ))            
      CALL FVIXXX(W(1,4   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,10  ),W(1,5   ),W(1,6   ),GAL ,AMP(3   ))            
      CALL IOVXXX(W(1,10  ),W(1,5   ),W(1,8   ),GZL ,AMP(4   ))            
      CALL FVOXXX(W(1,3   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,11  ))    ! Z
      CALL JIOXXX(W(1,2   ),W(1,11  ),GZ_AF ,ZERO    ,ZERO    ,W(1,12  ))    ! Z
      CALL IOVXXX(W(1,4   ),W(1,5   ),W(1,12  ),GAL ,AMP(5   ))            
      CALL JIOXXX(W(1,2   ),W(1,11  ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,13  ))    ! Z
      CALL IOVXXX(W(1,4   ),W(1,5   ),W(1,13  ),GZL ,AMP(6   ))            
      CALL FVIXXX(W(1,2   ),W(1,1   ),GZ_AF ,ZERO    ,ZERO    ,W(1,14  ))    ! Z
      CALL JIOXXX(W(1,14  ),W(1,3   ),GZ_AF ,ZERO    ,ZERO    ,W(1,15  ))    ! Z
      CALL IOVXXX(W(1,4   ),W(1,5   ),W(1,15  ),GAL ,AMP(7   ))            
      CALL JIOXXX(W(1,14  ),W(1,3   ),GZ_ZF ,ZMASS   ,ZWIDTH  ,W(1,16  ))    ! Z
      CALL IOVXXX(W(1,4   ),W(1,5   ),W(1,16  ),GZL ,AMP(8   ))            
      a(mu) = +AMP(   1)+AMP(   2)+AMP(   3)+AMP(   4)+AMP(   5)
     &             +AMP(   6)+AMP(   7)+AMP(   8)
     
      enddo   
     
      a(4) = dcmplx(q(0),q(3))
      a(5) = dcmplx(q(1),q(2))

      return
      END
      
c ------------------------------------------------------------	

