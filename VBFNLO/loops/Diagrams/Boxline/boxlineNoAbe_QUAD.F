       subroutine boxlineNoAbemm_QUAD(p1t,p2t,p3t,p4t,barpsi_p3,psi_p1,mup2,mup
     -   4,alpha,musqIn,gaugetest,comp,resultgauge,result)
c ************************************************************************************
c ************************************************************************************
c Author: Francisco Campanario
c E-mail: francam@particle.uni-karlsruhe.de
c Date: 28/7/2008
c Modified:4/8/2008
c ************************************************************************************
c determine the non-abelian finite QCD virtual corrections along the quark line i.e 
c The sum of all virtual corrections with color factor CA of the sort showed
c below.Attention!!!!This class of virtual corrections correspond to two 
c different type of born diagram.The p4 leg can be attached before or after 
c position p2:(p2,p4),(p4,p2). So,
c to get the full result you should call this subroutine plus
c the two abelian boxline subroutines for this combination of momenta(pay
c attention that the conventions for the names are different for this one
c and boxlineABEmm).(Pay attention to the position of the gluon)  
c                        mu_p4                       
c                          p4                      
c                          $                     
c                          $                     
c                          $                     
c                          V                      
c                   $$$$$$$$$$$$$$$$$              
c                   $               $              
c                   $               $               
c                   $               $               
c psi(p1)    ---->------->------->------->---   bar_psi(p3)
c                          $                            
c                          $                            
c                          $                           
c                          V                           
c                          $                           
c                          $                           
c                          p2                         
c                        mu_p2                  
c Note: The vertices are just Gamma^(mu_p2)..terms. So the correct
c factor should be added by hand for each boson. i.e, Without adding
c anything it represents pp->gluon+2 photons up to the electromagnetic charge 
c (for uu->g+2 photons is missing (2/3)) from the coupling. For W and Z,
c we have to account for the Diracgamma_5 that are missing in the vertex
c Note: To make it shorter in the promgram: mu_p2,...->mup2,... 
c Notation of External momenta: p1+p2+p3+p4=0 
c mu_p2,mu_p4, should be think as external current 
c alpha is the helicity of the initial spinor 
c musq is the renormalization scale energy  
c gaugetest,integer value.Different gauge test: 
c gaugetest=1 give the result after replacing mu_p2 with p2 
c gaugetest=2 give the result after replacing mu_p4 with p4 
c gaugetest=3 calculates the three different gaugue tests 
c gaugetest>4 no calculation of gauge test in case you
c have already done it before(it safes times)
c comp: integer value.The first time called with p1...p4, comp=1
c ATTENTION: ONLY!!!If you have to call the subroutine consecutively with the same arguments
c(p1,p2,p3,p4). Then, comp=-1 (it safes 4000 lines of code) 
c This applies when you have for examples the same diagram for an off-shell photon
c and a Z boson. The differences are in the coupling and  the part that depends on the
c polarization vector that are calculated at the end of this program.
c resultgauge  are arrays of dimension 2 . 
c In case you use gaugetest=(1,2). The result is given in the first argument:
c resultgauge(1) and resultgaugeb(1).The argument 2,and 3 is set to zero 
c In case you use gaugetest=3. resultgauge(1) is the result of gaugetest=1,
c resultgauge(2) of gaugetest=2
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c    Declaration of variables 
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       IMPLICIT NONE
      Real*8   p1(0:3),p2(0:3),p3(0:3),p4(0:3)
      Real*8   p1t(0:3),p2t(0:3),p3t(0:3),p4t(0:3)
       Complex*16 barpsi_p3(2),psi_p1(2),mup2(0:3),mup4(0:3)
       Real*8   p1sq, p1p2, p1p3, p2sq, p2p3, p2p4, p3sq, 
     -          p3p4, p4sq
       Real*8   s12, s23
       Complex*16   p1mup2, p1mup4, p2mup2, p2mup4, p3mup2, p3mup4, 
     -          p4mup2, p4mup4
       Complex*16 mup2mup4
       Real*8 dotrr
       Complex*16 B0fin,C0fin,D0fin
       EXTERNAL dotrr,B0fin,C0fin,D0fin

      Real*8 B012R,B013R,B014R,B023R,B024R,B034R
      Real*8 B012I,B013I,B014I,B023I,B024I,B034I

       Real*8 C0123R,C0124R,C0134R,C0234R
       Real*8 C0123I,C0124I,C0134I,C0234I
       Real*8 Cij123R(4,2),Cij124R(4,2),Cij134R(4,2),Cij234R(4,2)
       Real*8 Cij123I(4,2),Cij124I(4,2),Cij134I(4,2),Cij234I(4,2)

        Real*8 D01234R
        Real*8 D01234I
        Real*8 Dij1234R(13,3)
        Real*8 Dij1234I(13,3)
       Complex*16 SMB(4),SMG(4) ,Fa(3),F(17)
      Real*8 FI(17),FR(17)
      Complex*16 SC1r,SC1c,SC3rcc,dotrc,dotcc,result
       Complex*16 resultgauge(2) 
       Real*8 musq,Is12,Is23,Is12s23,P(35) 
       EXTERNAL   dotrc,dotcc,SC1c,SC1r,SC3rcc
       Integer alpha,comp,gaugetest
       common/FfunctionsNoAbemm/F
       common/PfunctionsNoAbemm/P
       SAVE/FfunctionsNoAbemm/
       SAVE/PfunctionsNoAbemm/
       Real*8 musqIn
       Common/musqInv/musq
ccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c
c      End QUAD precision
c
ccccccccccccccccccccccccccccccccccccccccccccccccccccccc

       COMMON/DVALFunctionsD/ D01234R,DIJ1234R,D01234I,DIJ1234I

       COMMON/CVALFunctionsD/ C0123R,CIJ123R,C0123I,CIJ123I, 
     &    C0124R,CIJ124R,C0124I,CIJ124I,
     &    C0134R,CIJ134R,C0134I,CIJ134I,
     &    C0234R,CIJ234R,C0234I,CIJ234I
  
       COMMON/BVALFunctionsD/ B012R,B012I, B013R,B013I, B014R,B014I, 
     &      B023R,B023I,  B024R,B024I,
     &    B034R,B034I
       COMMON/InvariantsD/p1sq,p2sq,p3sq,p4sq,s12,s23

       common/invariantsrest/p1p2
       integer jtemp
ccccccccccccccccc


       musq=musqIn

c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c       Definition of the scalar products. Not inlcueded the contraction of the
c       moments with the external currents  
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
        If(comp.gt.0) then

       do jtemp=0,3
         p1(jtemp)=p1t(jtemp)
         p2(jtemp)=p2t(jtemp)
         p3(jtemp)=p3t(jtemp)
         p4(jtemp)=p4t(jtemp)
      enddo
         call  PrintIntBoxMassless_QUAD(p1,p2,p3,p4,musq)
         p1p2=dotrr(p1,p2)
         p1p3=dotrr(p1,p3)
         p2p3=dotrr(p2,p3)
         p2p4=dotrr(p2,p4)
         p3p4=dotrr(p3,p4)
         Is12=1d0/s12
         Is12s23=1d0/(s12*s23)
         Is23=1d0/s23

c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c       Definition of the F,P functions:Independent of the currents    
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       P(1) = -2*p4sq+s23
       P(2) = p2sq-2*s12
       P(3) = p4sq-s12
       P(4) = -p2sq+s12
       P(5) = p2sq-s12
       P(6) = p2sq-s23
       P(7) = p4sq-s12+2*P(6)
       FR(1) = Is23*(-2*B024R-4*Cij124R(4,2)+s23*(D01234R*s12+Cij124R(
     -   2,1)-2*(C0234R+Cij124R(2,2)-Cij124R(3,2))-Cij234R(1,1)+4*(Di
     -   j1234R(7,2)-Dij1234R(11,3)+Dij1234R(12,3)))+(C0124R+Cij124R(
     -   1,1))*P(1)+s23*((-Dij1234R(1,1)+Dij1234R(2,1))*P(2)+Dij1234R
     -   (3,1)*P(3)+Dij1234R(1,2)*P(4)+Dij1234R(2,2)*P(5)+(Dij1234R(5
     -   ,2)-Dij1234R(6,2))*P(7)))
       FI(1) = Is23*(-2*B024I-4*Cij124I(4,2)+s23*(D01234I*s12+Cij124I(
     -   2,1)-2*(C0234I+Cij124I(2,2)-Cij124I(3,2))-Cij234I(1,1)+4*(Di
     -   j1234I(7,2)-Dij1234I(11,3)+Dij1234I(12,3)))+(C0124I+Cij124I(
     -   1,1))*P(1)+s23*((-Dij1234I(1,1)+Dij1234I(2,1))*P(2)+Dij1234I
     -   (3,1)*P(3)+Dij1234I(1,2)*P(4)+Dij1234I(2,2)*P(5)+(Dij1234I(5
     -   ,2)-Dij1234I(6,2))*P(7)))
       F(1)=DCMPLX(FR(1),FI(1))
       P(8) = 2*p4sq+s12
       P(9) = 2*p4sq-s23
       P(10) = 2*p4sq+5*s12
       P(11) = p4sq-s23
       P(12) = s12-2*P(11)
       P(13) = p4sq-s12-s23
       P(14) = p2sq+2*P(13)
       P(15) = p2sq-2*s12-s23
       P(16) = p2sq+p4sq-s12-s23
       P(17) = 4*p2sq+p4sq-3*s12-2*s23
       P(18) = 2*p2sq+s12-s23
       FR(2) = -Cij124R(2,1)+3*(C0234R-Cij134R(2,1))+2*(Cij124R(2,2)-C
     -   ij124R(3,2)+Cij134R(1,2)-Cij134R(3,2))+Cij234R(2,1)+Is12*(2*
     -   B012R+4*Cij134R(4,2)+C0134R*P(8)+Cij134R(1,1)*P(10)+Is23*s12
     -   *(2*B024R+4*Cij124R(4,2)+s23*(s12*Dij1234R(2,1)-2*p2sq*Dij12
     -   34R(2,2)-8*Dij1234R(7,2)+4*(Dij1234R(11,3)-Dij1234R(13,3)))+
     -   (C0124R+Cij124R(1,1))*P(9)+s23*((Dij1234R(1,2)+2*Dij1234R(4,
     -   2))*P(5)-D01234R*P(12)+Dij1234R(1,1)*P(14)-Dij1234R(3,1)*P(1
     -   5)+Dij1234R(3,2)*P(16)-Dij1234R(5,2)*P(17)+Dij1234R(6,2)*P(1
     -   8))))
       FI(2) = -Cij124I(2,1)+3*(C0234I-Cij134I(2,1))+2*(Cij124I(2,2)-C
     -   ij124I(3,2)+Cij134I(1,2)-Cij134I(3,2))+Cij234I(2,1)+Is12*(2*
     -   B012I+4*Cij134I(4,2)+C0134I*P(8)+Cij134I(1,1)*P(10)+Is23*s12
     -   *(2*B024I+4*Cij124I(4,2)+s23*(s12*Dij1234I(2,1)-2*p2sq*Dij12
     -   34I(2,2)-8*Dij1234I(7,2)+4*(Dij1234I(11,3)-Dij1234I(13,3)))+
     -   (C0124I+Cij124I(1,1))*P(9)+s23*((Dij1234I(1,2)+2*Dij1234I(4,
     -   2))*P(5)-D01234I*P(12)+Dij1234I(1,1)*P(14)-Dij1234I(3,1)*P(1
     -   5)+Dij1234I(3,2)*P(16)-Dij1234I(5,2)*P(17)+Dij1234I(6,2)*P(1
     -   8))))
       F(2)=DCMPLX(FR(2),FI(2))
       P(19) = p4sq+2*s12
       P(20) = p2sq+p4sq-s23
       P(21) = -3*s12+2*P(20)
       FR(3) = 2*(2*C0234R-Cij124R(2,1)-Cij124R(3,2)+Cij134R(1,2))+Is1
     -   2*(2*(B012R+C0134R*p4sq+2*Cij134R(4,2)+Cij134R(1,1)*P(19))+I
     -   s23*s12*(2*(B024R+2*Cij124R(4,2)+s23*(s12*Dij1234R(2,1)-p2sq
     -   *Dij1234R(2,2)-5*Dij1234R(7,2)+2*Dij1234R(11,3)))+(C0124R+Ci
     -   j124R(1,1))*P(9)+s23*(Dij1234R(3,1)*P(3)+(Dij1234R(1,2)+2*Di
     -   j1234R(4,2))*P(5)+Dij1234R(6,2)*P(6)-Dij1234R(5,2)*P(7)+D012
     -   34R*P(14)+Dij1234R(1,1)*P(21))))
       FI(3) = 2*(2*C0234I-Cij124I(2,1)-Cij124I(3,2)+Cij134I(1,2))+Is1
     -   2*(2*(B012I+C0134I*p4sq+2*Cij134I(4,2)+Cij134I(1,1)*P(19))+I
     -   s23*s12*(2*(B024I+2*Cij124I(4,2)+s23*(s12*Dij1234I(2,1)-p2sq
     -   *Dij1234I(2,2)-5*Dij1234I(7,2)+2*Dij1234I(11,3)))+(C0124I+Ci
     -   j124I(1,1))*P(9)+s23*(Dij1234I(3,1)*P(3)+(Dij1234I(1,2)+2*Di
     -   j1234I(4,2))*P(5)+Dij1234I(6,2)*P(6)-Dij1234I(5,2)*P(7)+D012
     -   34I*P(14)+Dij1234I(1,1)*P(21))))
       F(3)=DCMPLX(FR(3),FI(3))
       P(22) = p2sq+s12-2*s23
       P(23) = p2sq+2*p4sq+s12-4*s23
       P(24) = p2sq-p4sq+s12-s23
       FR(4) = C0234R+Cij234R(1,1)-6*Dij1234R(7,2)-4*(Dij1234R(11,3)-D
     -   ij1234R(12,3))-2*(Dij1234R(1,1)+Dij1234R(1,2)-Dij1234R(2,1))
     -   *P(11)-Dij1234R(2,2)*P(22)+Dij1234R(4,2)*P(23)+(-Dij1234R(5,
     -   2)+Dij1234R(6,2))*P(24)
       FI(4) = C0234I+Cij234I(1,1)-6*Dij1234I(7,2)-4*(Dij1234I(11,3)-D
     -   ij1234I(12,3))-2*(Dij1234I(1,1)+Dij1234I(1,2)-Dij1234I(2,1))
     -   *P(11)-Dij1234I(2,2)*P(22)+Dij1234I(4,2)*P(23)+(-Dij1234I(5,
     -   2)+Dij1234I(6,2))*P(24)
       F(4)=DCMPLX(FR(4),FI(4))
       P(25) = s12-2*s23
       P(26) = 2*p4sq-s12
       P(27) = 2*p2sq-3*p4sq+s23
       P(28) = 2*p2sq-s12+s23
       FR(5) = -C0234R-Cij234R(2,1)+12*Dij1234R(7,2)+4*(Dij1234R(11,3)
     -   -Dij1234R(13,3))+Dij1234R(3,2)*P(3)+2*(p2sq*Dij1234R(2,2)-Di
     -   j1234R(4,2)*P(6)+(Dij1234R(1,1)+Dij1234R(1,2))*P(11))-Dij123
     -   4R(2,1)*P(25)-Dij1234R(3,1)*P(26)+Dij1234R(5,2)*P(27)-Dij123
     -   4R(6,2)*P(28)
       FI(5) = -C0234I-Cij234I(2,1)+12*Dij1234I(7,2)+4*(Dij1234I(11,3)
     -   -Dij1234I(13,3))+Dij1234I(3,2)*P(3)+2*(p2sq*Dij1234I(2,2)-Di
     -   j1234I(4,2)*P(6)+(Dij1234I(1,1)+Dij1234I(1,2))*P(11))-Dij123
     -   4I(2,1)*P(25)-Dij1234I(3,1)*P(26)+Dij1234I(5,2)*P(27)-Dij123
     -   4I(6,2)*P(28)
       F(5)=DCMPLX(FR(5),FI(5))
       P(29) = P(11)/s23
       P(30) = 3*s12-2*s23
       FR(6) = Is23*(-2*B024R-4*Cij124R(4,2)+s23*(-3*C0234R-Cij124R(2,
     -   1)+2*p2sq*Dij1234R(2,2)+16*Dij1234R(7,2)+4*Dij1234R(11,3))-s
     -   23*((2*Dij1234R(4,2)+Dij1234R(6,2))*P(6)-Dij1234R(5,2)*P(24)
     -   +2*(Dij1234R(3,1)*P(3)-(Dij1234R(1,1)+Dij1234R(1,2))*P(11)+(
     -   C0124R+Cij124R(1,1))*P(29))+Dij1234R(2,1)*P(30)))
       FI(6) = Is23*(-2*B024I-4*Cij124I(4,2)+s23*(-3*C0234I-Cij124I(2,
     -   1)+2*p2sq*Dij1234I(2,2)+16*Dij1234I(7,2)+4*Dij1234I(11,3))-s
     -   23*((2*Dij1234I(4,2)+Dij1234I(6,2))*P(6)-Dij1234I(5,2)*P(24)
     -   +2*(Dij1234I(3,1)*P(3)-(Dij1234I(1,1)+Dij1234I(1,2))*P(11)+(
     -   C0124I+Cij124I(1,1))*P(29))+Dij1234I(2,1)*P(30)))
       F(6)=DCMPLX(FR(6),FI(6))
       FR(7) = 4*(-Dij1234R(2,2)+Dij1234R(2,3)+Dij1234R(4,2)+Dij1234R(
     -   4,3)-2*Dij1234R(6,3))
       FI(7) = 4*(-Dij1234I(2,2)+Dij1234I(2,3)+Dij1234I(4,2)+Dij1234I(
     -   4,3)-2*Dij1234I(6,3))
       F(7)=DCMPLX(FR(7),FI(7))
       P(31) = P(26)/s12
       P(32) = p2sq-3*s12
       P(33) = -p2sq+s23-3*P(3)
       FR(8) = Is12*(-2*B012R-3*C0234R*s12-s12*Cij234R(1,1)+8*s12*Dij1
     -   234R(7,2)-4*(Cij134R(4,2)-s12*Dij1234R(12,3))-Cij134R(1,1)*P
     -   (8)+s12*(Dij1234R(2,2)*P(5)-2*(D01234R+Dij1234R(1,1))*P(11)-
     -   Dij1234R(6,2)*P(16)-C0134R*P(31)+Dij1234R(2,1)*P(32)+Dij1234
     -   R(3,1)*P(33)))
       FI(8) = Is12*(-2*B012I-3*C0234I*s12-s12*Cij234I(1,1)+8*s12*Dij1
     -   234I(7,2)-4*(Cij134I(4,2)-s12*Dij1234I(12,3))-Cij134I(1,1)*P
     -   (8)+s12*(Dij1234I(2,2)*P(5)-2*(D01234I+Dij1234I(1,1))*P(11)-
     -   Dij1234I(6,2)*P(16)-C0134I*P(31)+Dij1234I(2,1)*P(32)+Dij1234
     -   I(3,1)*P(33)))
       F(8)=DCMPLX(FR(8),FI(8))
       FR(9) = -4*(Dij1234R(2,2)-Dij1234R(4,2)-Dij1234R(4,3)+Dij1234R(
     -   6,3))
       FI(9) = -4*(Dij1234I(2,2)-Dij1234I(4,2)-Dij1234I(4,3)+Dij1234I(
     -   6,3))
       F(9)=DCMPLX(FR(9),FI(9))
       FR(10) = 2*(D01234R+Dij1234R(1,1)-3*Dij1234R(2,2)+5*Dij1234R(4,
     -   2)+2*(Dij1234R(2,1)+Dij1234R(4,3)-Dij1234R(6,3)))
       FI(10) = 2*(D01234I+Dij1234I(1,1)-3*Dij1234I(2,2)+5*Dij1234I(4,
     -   2)+2*(Dij1234I(2,1)+Dij1234I(4,3)-Dij1234I(6,3)))
       F(10)=DCMPLX(FR(10),FI(10))
       FR(11) = -4*(Dij1234R(2,2)-Dij1234R(4,2)-Dij1234R(4,3)-Dij1234R
     -   (5,2)+Dij1234R(6,2)+Dij1234R(6,3)-Dij1234R(8,3)+Dij1234R(10,
     -   3))
       FI(11) = -4*(Dij1234I(2,2)-Dij1234I(4,2)-Dij1234I(4,3)-Dij1234I
     -   (5,2)+Dij1234I(6,2)+Dij1234I(6,3)-Dij1234I(8,3)+Dij1234I(10,
     -   3))
       F(11)=DCMPLX(FR(11),FI(11))
       FR(12) = 4*(Dij1234R(2,1)-Dij1234R(3,1)+3*Dij1234R(4,2)+Dij1234
     -   R(4,3)-2*(Dij1234R(2,2)+Dij1234R(5,2))+Dij1234R(6,2)-Dij1234
     -   R(6,3)+Dij1234R(8,3)-Dij1234R(10,3))
       FI(12) = 4*(Dij1234I(2,1)-Dij1234I(3,1)+3*Dij1234I(4,2)+Dij1234
     -   I(4,3)-2*(Dij1234I(2,2)+Dij1234I(5,2))+Dij1234I(6,2)-Dij1234
     -   I(6,3)+Dij1234I(8,3)-Dij1234I(10,3))
       F(12)=DCMPLX(FR(12),FI(12))
       FR(13) = 4*(3*Dij1234R(4,2)+Dij1234R(4,3)+2*(Dij1234R(2,1)-Dij1
     -   234R(3,1)-Dij1234R(5,2))-Dij1234R(6,2)-Dij1234R(10,3))
       FI(13) = 4*(3*Dij1234I(4,2)+Dij1234I(4,3)+2*(Dij1234I(2,1)-Dij1
     -   234I(3,1)-Dij1234I(5,2))-Dij1234I(6,2)-Dij1234I(10,3))
       F(13)=DCMPLX(FR(13),FI(13))
       FR(14) = 4*(Dij1234R(3,2)+Dij1234R(4,3)-Dij1234R(5,2)+3*(Dij123
     -   4R(4,2)-Dij1234R(6,2))+Dij1234R(9,3)+2*(Dij1234R(2,1)-Dij123
     -   4R(3,1)-Dij1234R(10,3)))
       FI(14) = 4*(Dij1234I(3,2)+Dij1234I(4,3)-Dij1234I(5,2)+3*(Dij123
     -   4I(4,2)-Dij1234I(6,2))+Dij1234I(9,3)+2*(Dij1234I(2,1)-Dij123
     -   4I(3,1)-Dij1234I(10,3)))
       F(14)=DCMPLX(FR(14),FI(14))
       FR(15) = 2*(D01234R+Dij1234R(1,1)+5*Dij1234R(4,2)+3*(Dij1234R(2
     -   ,1)-Dij1234R(6,2))+2*(Dij1234R(4,3)+Dij1234R(5,2)-Dij1234R(1
     -   0,3)))
       FI(15) = 2*(D01234I+Dij1234I(1,1)+5*Dij1234I(4,2)+3*(Dij1234I(2
     -   ,1)-Dij1234I(6,2))+2*(Dij1234I(4,3)+Dij1234I(5,2)-Dij1234I(1
     -   0,3)))
       F(15)=DCMPLX(FR(15),FI(15))
       FR(16) = 2*(D01234R+Dij1234R(1,1)+3*Dij1234R(2,1)+5*Dij1234R(4,
     -   2)+2*Dij1234R(4,3))
       FI(16) = 2*(D01234I+Dij1234I(1,1)+3*Dij1234I(2,1)+5*Dij1234I(4,
     -   2)+2*Dij1234I(4,3))
       F(16)=DCMPLX(FR(16),FI(16))
       P(34) = p2sq-4*s12
       P(35) = p2sq-s23+3*P(3)
       FR(17) = (Is12s23*(5*C0234R*s12*s23+s12*s23*Cij124R(2,1)+4*(s12
     -   *Cij124R(4,2)+s23*Cij134R(4,2))+2*(B024R*s12+B012R*s23-p2sq*
     -   s12*s23*Dij1234R(2,2))-14*s12*s23*Dij1234R(7,2)+s23*(Cij134R
     -   (1,1)*P(8)+C0134R*P(26)+s12*(Dij1234R(4,2)*P(5)+Dij1234R(6,2
     -   )*P(6)+2*((D01234R+Dij1234R(1,1))*P(11)+(C0124R+Cij124R(1,1)
     -   )*P(29))-Dij1234R(2,1)*P(34)+Dij1234R(3,1)*P(35)))))/2.d0
       FI(17) = (Is12s23*(5*C0234I*s12*s23+s12*s23*Cij124I(2,1)+4*(s12
     -   *Cij124I(4,2)+s23*Cij134I(4,2))+2*(B024I*s12+B012I*s23-p2sq*
     -   s12*s23*Dij1234I(2,2))-14*s12*s23*Dij1234I(7,2)+s23*(Cij134I
     -   (1,1)*P(8)+C0134I*P(26)+s12*(Dij1234I(4,2)*P(5)+Dij1234I(6,2
     -   )*P(6)+2*((D01234I+Dij1234I(1,1))*P(11)+(C0124I+Cij124I(1,1)
     -   )*P(29))-Dij1234I(2,1)*P(34)+Dij1234I(3,1)*P(35)))))/2.d0
       F(17)=DCMPLX(FR(17),FI(17))
       else
         p1p2=dotrr(p1,p2)
         p1p3=dotrr(p1,p3)
         p2p3=dotrr(p2,p3)
         p2p4=dotrr(p2,p4)
         p3p4=dotrr(p3,p4)

         Is12=1d0/s12
         Is12s23=1d0/(s12*s23)
         Is23=1d0/s23
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       endif  
c               PART THAT DEPENDS ON THE EXTERNAL CURRENT
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c Computation of Fa fucntions. Depends on the external currents, through
c the contraction of the moments with the currents
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       p1mup2 = dotrc(p1,mup2)
       p1mup4 = dotrc(p1,mup4)
       p2mup2 = dotrc(p2,mup2)
       p2mup4 = dotrc(p2,mup4)
       p3mup2 = dotrc(p3,mup2)
       p3mup4 = dotrc(p3,mup4)
       p4mup2 = dotrc(p4,mup2)
       p4mup4 = dotrc(p4,mup4)
       mup2mup4=dotcc(mup2,mup4)
c      Print*," p1mup2 ",  p1mup2 
c      Print*," p1mup4 ",  p1mup4 
c      Print*," p2mup2 ",  p2mup2 
c      Print*," p2mup4 ",  p2mup4 
c      Print*," p3mup2 ",  p3mup2 
c      Print*," p3mup4 ",  p3mup4 
c      Print*," p4mup2 ",  p4mup2 
c      Print*," p4mup4 ",  p4mup4 
c       Print*," mup2mup4", mup2mup4  
c************** Calling the Fa functions**********************************************************************
c************************************************************************************
c************************************************************************************
       call FaFunctionNoAbemm(p1mup2, p1mup4, p2mup2, p2mup4,p3mup2, p
     -   3mup4,p4mup2, p4mup4,mup2mup4,Fa)


c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c       Definition of the Matrix Element  
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       SMB(1) = SC1c(barpsi_p3,mup2,psi_p1,alpha)
       SMB(2) = SC1c(barpsi_p3,mup4,psi_p1,alpha)
       SMB(3) = SC1r(barpsi_p3,p4,psi_p1,alpha)
       SMB(4) = SC3rcc(barpsi_p3,p4,mup2,mup4,psi_p1,alpha)

c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c       Amplitude                         
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************


       result = Fa(1)*SMB(1)+Fa(2)*SMB(2)+Fa(3)*SMB(3)+F(17)*SMB(4)
c The Finite virtual piece should be multiplied for (-1)  since 
c I have multiplied by (-I) to get the F's and k's without (I) factor
c . The factorization from the B_ij is Fact=(I/(4\[Pi])^2 (4 \[Pi])^Eps Gamma[1+Eps] (musq)^(-Eps))
c  c So, I*I=(-1)!!!

       result =-result
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
      If(gaugetest.eq.1) then 
cc      The mu_p2 is replaced for the incoming moment 
c      mup2->p2 SO:
c     I define the different contraction of the external
c      momenta with the currents making those replacements
       p1mup2=dotrr(p1,p2)
       p2mup2=dotrr(p2,p2)
       p3mup2=dotrr(p3,p2)
       p4mup2=dotrr(p4,p2)
       mup2mup4=dotrc(p2,mup4)
c************************************************************************************
c************************************************************************************
c************** Calling the Fa functions**********************************************************************
       call FaFunctionNoAbemm(p1mup2, p1mup4, p2mup2, p2mup4,p3mup2, p
     -   3mup4,p4mup2, p4mup4,mup2mup4,Fa)
c************************************************************************************
c************************************************************************************
c    Here, the matrix element with the replacement mu_p_j->pj,(j:2)
c************************************************************************************
c************************************************************************************

c       mup2(0)=p2(0)
c       mup2(1)=p2(1)
c       mup2(2)=p2(2)
c       mup2(3)=p2(3)
       
c       SMG(1) = SC1c(barpsi_p3,mup2,psi_p1,alpha)
c       SMG(2) = SC1c(barpsi_p3,mup4,psi_p1,alpha)
c       SMG(3) = SC1r(barpsi_p3,p4,psi_p1,alpha)
c       SMG(4) = SC3rcc(barpsi_p3,p4,mup2,mup4,psi_p1,alpha)
c$$$c$$$
c$$$c$$$c       write(*,'(a7,E26.18,E26.18)') "SMG(1)=", SMG(1)
c$$$c$$$c       write(*,'(a7,E26.18,E26.18)') "SMG(2)=", SMG(2)
c$$$c$$$c       write(*,'(a7,E26.18,E26.18)') "SMG(3)=", SMG(3)
c$$$c$$$       write(*,'(a7,E26.18,E26.18)') "SMG(4)=", SMG(4)


       SMG(1) = -SMB(3)
       SMG(2) = SMB(2)
       SMG(3) = SMB(3)
       SMG(4) = -(s12*SMB(2))-2*p1mup4*SMB(3)
       
c       write(*,'(a7,E26.18,E26.18)') "SMG(1)=", SMG(1)
c       write(*,'(a7,E26.18,E26.18)') "SMG(2)=", SMG(2)
c       write(*,'(a7,E26.18,E26.18)') "SMG(3)=", SMG(3)
c       write(*,'(a7,E26.18,E26.18)') "SMG(4)=" ,SMG(4)


c************************************************************************************
c************************************************************************************
c    This should be equal to the boxline with momenta p1,p2+p3,p4,p5:
c************************************************************************************
c************************************************************************************
       resultgauge(1) = Fa(1)*SMG(1)+Fa(2)*SMG(2)+Fa(3)*SMG(3)+F(17)*S
     -   MG(4)
c The Finite virtual piece should be multiplied for (-1)  since 
c I have multiplied by (-I) to get the F's and k's without (I) factor
c . The factorization from the B_ij is Fact=(I/(4\[Pi])^2 (4 \[Pi])^Eps Gamma[1+Eps] (musq)^(-Eps))
c  c So, I*I=(-1)!!!

       resultgauge(1) =-resultgauge(1)
           resultgauge(2)=(0d0,0d0)      
           return      
           endif      
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
      If(gaugetest.eq.2) then 
cc      The mu_p4 is replaced for the incoming moment 
c      mup4->p4 SO:
c     I define the different contraction of the external
c      momenta with the currents making those replacements
       p1mup4=dotrr(p1,p4)
       p2mup4=dotrr(p2,p4)
       p3mup4=dotrr(p3,p4)
       p4mup4=dotrr(p4,p4)
       mup2mup4=dotrc(p4,mup2)
c************************************************************************************
c************************************************************************************
c************** Calling the Fa functions**********************************************************************
       call FaFunctionNoAbemm(p1mup2, p1mup4, p2mup2, p2mup4,p3mup2, p
     -   3mup4,p4mup2, p4mup4,mup2mup4,Fa)
c************************************************************************************
c************************************************************************************
c    Here, the matrix element with the replacement mu_p_j->pj,(j:2)
c************************************************************************************
c************************************************************************************
       SMG(1) = SMB(1)
       SMG(2) = SMB(3)
       SMG(3) = SMB(3)
       SMG(4) = -(p4sq*SMB(1))+2*p4mup2*SMB(3)
c************************************************************************************
c************************************************************************************
c    This should be equal to the boxline with momenta p1,p2+p3,p4,p5:
c************************************************************************************
c************************************************************************************
       resultgauge(1) = Fa(1)*SMG(1)+Fa(2)*SMG(2)+Fa(3)*SMG(3)+F(17)*S
     -   MG(4)
c The Finite virtual piece should be multiplied for (-1)  since 
c I have multiplied by (-I) to get the F's and k's without (I) factor
c . The factorization from the B_ij is Fact=(I/(4\[Pi])^2 (4 \[Pi])^Eps Gamma[1+Eps] (musq)^(-Eps))
c  c So, I*I=(-1)!!!
       resultgauge(1) =-resultgauge(1)
           resultgauge(2)=(0d0,0d0)      
           return      
           endif      
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
      If(gaugetest.eq.3) then 
cc      The mu_p2 is replaced for the incoming moment 
c      mup2->p2 SO:
c     I define the different contraction of the external
c      momenta with the currents making those replacements
       p1mup2=dotrr(p1,p2)
       p2mup2=dotrr(p2,p2)
       p3mup2=dotrr(p3,p2)
       p4mup2=dotrr(p4,p2)
       mup2mup4=dotrc(p2,mup4)
c************************************************************************************
c************************************************************************************
c************** Calling the Fa functions**********************************************************************
       call FaFunctionNoAbemm(p1mup2, p1mup4, p2mup2, p2mup4,p3mup2, p
     -   3mup4,p4mup2, p4mup4,mup2mup4,Fa)
c************************************************************************************
c************************************************************************************
c    Here, the matrix element with the replacement mu_p_j->pj,(j:2)
c************************************************************************************
c************************************************************************************
       SMG(1) = -SMB(3)
       SMG(2) = SMB(2)
       SMG(3) = SMB(3)
       SMG(4) = -(s12*SMB(2))-2*p1mup4*SMB(3)
c************************************************************************************
c************************************************************************************
c    This should be equal to the boxline with momenta p1,p2+p3,p4,p5:
c************************************************************************************
c************************************************************************************
       resultgauge(1) = Fa(1)*SMG(1)+Fa(2)*SMG(2)+Fa(3)*SMG(3)+F(17)*S
     -   MG(4)
c The Finite virtual piece should be multiplied for (-1)  since 
c I have multiplied by (-I) to get the F's and k's without (I) factor
c . The factorization from the B_ij is Fact=(I/(4\[Pi])^2 (4 \[Pi])^Eps Gamma[1+Eps] (musq)^(-Eps))
c  c So, I*I=(-1)!!!
       resultgauge(1) =-resultgauge(1)
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c      The mu_p4 is replaced for the incoming moment 
c      mup4->p4 SO:
c     I define the different contraction of the external
c      momenta with the currents making those replacements
       p1mup2 = dotrc(p1,mup2)
       p1mup4 = dotrr(p1,p4)
       p2mup2 = dotrc(p2,mup2)
       p2mup4 = dotrr(p2,p4)
       p3mup2 = dotrc(p3,mup2)
       p3mup4 = dotrr(p3,p4)
       p4mup2 = dotrc(p4,mup2)
       p4mup4 = dotrr(p4,p4)
       mup2mup4=dotrc(p4,mup2)
c************************************************************************************
c************************************************************************************
c************** Calling the Fa functions**********************************************************************
       call FaFunctionNoAbemm(p1mup2, p1mup4, p2mup2, p2mup4,p3mup2, p
     -   3mup4,p4mup2, p4mup4,mup2mup4,Fa)
c************************************************************************************
c************************************************************************************
c    Here, the matrix element with the replacement mu_p_j->pj,(j:3)
c************************************************************************************
c************************************************************************************
       SMG(1) = SMB(1)
       SMG(2) = SMB(3)
       SMG(3) = SMB(3)
       SMG(4) = -(p4sq*SMB(1))+2*p4mup2*SMB(3)
c************************************************************************************
c************************************************************************************
c    This should be equal to the subsctraction of boxline with momenta -(p1,p2,p3+p4,p5) :
c************************************************************************************
c************************************************************************************
       resultgauge(2) = Fa(1)*SMG(1)+Fa(2)*SMG(2)+Fa(3)*SMG(3)+F(17)*S
     -   MG(4)
c The Finite virtual piece should be multiplied for (-1)  since 
c I have multiplied by (-I) to get the F's and k's without (I) factor
c . The factorization from the B_ij is Fact=(I/(4\[Pi])^2 (4 \[Pi])^Eps Gamma[1+Eps] (musq)^(-Eps))
c  c So, I*I=(-1)!!!
       resultgauge(2) =-resultgauge(2)
           endif      
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       Return
       End
