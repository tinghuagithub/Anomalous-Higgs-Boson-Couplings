       subroutine FermionVertEvenCouplings_Div(za1,za2,za3,zb1,zb2,zb3,m,p
     -   1,p2,p3,mup1,mup2,mup3,musq,comp,result,resultn,Div)
c ************************************************************************************
c determine the fermion looop
c Note: No couplings are assigned
c Note: To make it shorter in the promgram: mu_p2,...->mup2,... 
c Notation of External momenta: p1+p2+p3+p4=0 
c mu_p1,mu_p2,mu_p3,mu_p4 should be think as external current 
c Note:
c Following the Peskin-S convention this contribution should get a factor i from the Feyman rules
c (including the factor -1 for closed fermion loop)
c and a factor i coming from the scalar integrals.
c -> i*i = -1, add this facor inside of the amplitude !!!!
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c    Declaration of variables 
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       IMPLICIT NONE
      Real*8   p1(0:3),p2(0:3),p3(0:3)
       Real*8   p1sq, p1p2, p1p3, p2sq, p2p3, p3sq
       Real*8   s12, s13, s23
       Complex*16   p1mup1, p1mup2, p1mup3, p2mup1, p2mup2, p2mup3, 
     -          p3mup1, p3mup2, p3mup3
       Complex*16   mup1mup2, mup1mup3, mup2mup3
       Real*8 dotrr
       Complex*16 B0finDiv,C0finDiv
       Complex*16 A0finDiv,B0tMDiv
       EXTERNAL dotrr,A0finDiv,B0tMDiv,B0finDiv,C0finDiv
       Complex*16 A0,B012,B013,B023
      Real*8 A0R,A0I,B012R,B013R,B023R
      Real*8 B012I,B013I,B023I
      Real*8 B12R(2,2),B13R(2,2),B23R(2,2)
      Real*8 B12I(2,2),B13I(2,2),B23I(2,2)
       Complex*16 C0123
       Real*8 C0123R
       Real*8 C0123I
       Real*8 C123R(6,3)
       Real*8 C123I(6,3)
      Complex*16 F(29)
      Real*8 FI(29),FR(29),P(36)
      Real*8 za1,za2,za3,zb1,zb2,zb3
      Complex*16 mup1(0:3),mup2(0:3),mup3(0:3)
      Complex*16 dotrc,dotcc,result,resultn(4)
       Real*8 musq,m,msq
      EXTERNAL   dotrc,dotcc
      Integer comp,Div
       common/FerVertEvenFunctions/F
       common/PFerVertEvenFunctions/P
      Save/FerVertEvenFunctions/ 
      Save/PFerVertEvenFunctions/ 
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c       Definition of the scalar products. Not inlcueded the contraction of the
c       moments with the external currents  
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       msq=m*m
       p1sq = dotrr(p1,p1)
       p1p2 = dotrr(p1,p2)
       p1p3 = dotrr(p1,p3)
       p2sq = dotrr(p2,p2)
       p2p3 = dotrr(p2,p3)
       p3sq = dotrr(p3,p3)
       s12 = (p1sq +p2sq+ 2*p1p2) 
       s13 = (p1sq +p3sq+ 2*p1p3) 
       s23 = (p2sq +p3sq+ 2*p2p3) 

c       Write(*,'(a5,F20.10)')," p1sq ", p1sq 
c       Write(*,'(a5,F20.10)')," p1p2 ", p1p2
c       Write(*,'(a5,F20.10)')," p1p3 ", p1p3
c       Write(*,'(a5,F20.10)')," p1p4 ", p1p4
c       Write(*,'(a5,F20.10)')," p2sq ", p2sq 
c       Write(*,'(a5,F20.10)')," p2p3 ", p2p3
c       Write(*,'(a5,F20.10)')," p2p4 ", p2p4
c       Write(*,'(a5,F20.10)')," p3sq ", p3sq 
c       Write(*,'(a5,F20.10)')," p3p4 ", p3p4
c       Write(*,'(a5,F20.10)')," p4sq ", p4sq 
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
        if (comp.gt.0) then    


        if(m.gt.1d-6) then
c    Calling C_ij,D_ij Functions    
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       A0=A0finDiv(m,Div)  
       A0R=Dble(A0) 
       A0I=DImag(A0) 
       B012=B0tMDiv(m,p1sq,Div)  
       B013=B0tMDiv(m,s12,Div)   
       B023=B0tMDiv(m,p2sq,Div)  
c************************************************************************************
       call tens_red2_Re_1MDiv(m,p1sq,A0R,A0I,B012,B012R,B012I,B12R,B12I) 
       call tens_red2_Re_1MDiv(m,p2sq,A0R,A0I,B023,B023R,B023I,B23R,B23I) 
       call tens_red2_Re_1MDiv(m,s12, A0R,A0I,B013,B013R,B013I,B13R,B13I) 
c************************************************************************************
      C0123=0d0
c************************************************************************************
c************************************************************************************
c************************************************************************************
       call tens_red3_new_Re_Com_1MRank3Div(m,p1sq,p2sq,s12,B023R,B013R,B
     -   012R,B23R,B13R,B12R,B023I,B013I,B012I,B23I,B13I,B12I,C0123,C
     -   0123R,C0123I,C123R,C123I) 
c************************************************************************************
c************************************************************************************
      elseif(m.lt.1d-6) then
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c    Calling C_ij,D_ij Functions    
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       B012=B0finDiv(p1sq,musq,Div)   
       B013=B0finDiv(s12,musq,Div)   
       B023=B0finDiv(p2sq,musq,Div)  
c************************************************************************************
       call tens_red2_ReDiv(p1sq,B012,B012R,B012I,B12R,B12I) 
       call tens_red2_ReDiv(p2sq,B023,B023R,B023I,B23R,B23I) 
       call tens_red2_ReDiv(s12, B013,B013R,B013I,B13R,B13I) 
c************************************************************************************
c************************************************************************************
      C0123=C0finDiv(p1sq,p2sq,s12,musq,Div) 
c************************************************************************************
c************************************************************************************
       call tens_red3_new_Re_ComRank3Div(p1sq,p2sq,s12,B023R,B013R,B012R,
     -   B23R,B13R,B12R,B023I,B013I,B012I,B23I,B13I,B12I,C0123,C0123R
     -   ,C0123I,C123R,C123I) 
         endif

c       Definition of the F,P functions:Independent of the currents    
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       P(1) = p1sq*za1*za2-p2sq*za1*za2+s12*za2*zb1-s12*za1*zb2-p1sq*z
     -   b1*zb2+p2sq*zb1*zb2
       P(2) = za3-zb3
       P(3) = za1-zb1
       P(4) = za2-zb2
       P(5) = za3+zb3
       P(6) = za1*za2*za3+zb1*zb2*zb3
       P(7) = M**2*P(3)*P(4)*P(5)-p1sq*P(6)
       P(8) = -(M**2*P(3)*P(4)*P(5))+p2sq*P(6)
       P(9) = za1*za2-zb1*zb2
       P(10) = za1+zb1
       P(11) = za2+zb2
       P(12) = p1sq*za1*za3-s12*za1*za3+p2sq*za3*zb1-p2sq*za1*zb3-p1sq
     -   *zb1*zb3+s12*zb1*zb3
       P(13) = p1sq*P(6)-M**2*P(2)*P(3)*P(11)
       P(14) = -(s12*P(6))+M**2*P(2)*P(3)*P(11)
       P(15) = za3*zb1-za1*zb3
       P(16) = za1*za3-zb1*zb3
       P(17) = p2sq*za2*za3-s12*za2*za3+p1sq*za3*zb2-p1sq*za2*zb3-p2sq
     -   *zb2*zb3+s12*zb2*zb3
       P(18) = s12*P(6)-M**2*P(2)*P(4)*P(10)
       P(19) = -(p2sq*P(6))+M**2*P(2)*P(4)*P(10)
       P(20) = za2*za3-zb2*zb3
       P(21) = p1sq*P(6)-s12*P(6)+2*M**2*P(4)*P(15)
       P(22) = p1sq+p2sq-s12
       P(23) = -2*M**2*P(3)*P(4)*P(5)+P(6)*P(22)
       P(24) = -(za1*za2*za3)-zb1*zb2*zb3
       FR(1) = (B012R-2*B13R(1,1)+4*C123R(4,2)+8*C123R(5,3))*P(6)+C012
     -   3R*P(21)+C123R(1,1)*P(23)+B013R*P(24)
       FI(1) = (B012I-2*B13I(1,1)+4*C123I(4,2)+8*C123I(5,3))*P(6)+C012
     -   3I*P(21)+C123I(1,1)*P(23)+B013I*P(24)
       F(1)=DCMPLX(FR(1),FI(1))
       P(25) = p1sq+s12
       P(26) = za2*za3+za3*zb2-2*zb2*zb3
       P(27) = -2*za2*za3+za2*zb3+zb2*zb3
       P(28) = zb1*P(26)+za1*P(27)
       P(29) = P(6)*P(25)+2*M**2*P(28)
       P(30) = p1sq-p2sq+s12
       P(31) = -2*M**2*P(2)*P(3)*P(11)+P(6)*P(30)
       FR(2) = 8*(C123R(4,2)+C123R(5,3))*P(6)+(B012R+B013R)*P(24)+C012
     -   3R*P(29)+C123R(1,1)*P(31)
       FI(2) = 8*(C123I(4,2)+C123I(5,3))*P(6)+(B012I+B013I)*P(24)+C012
     -   3I*P(29)+C123I(1,1)*P(31)
       F(2)=DCMPLX(FR(2),FI(2))
       P(32) = -(p1sq*P(6))+s12*P(6)-2*M**2*P(4)*P(15)
       P(33) = p1sq-p2sq-s12
       P(34) = -2*M**2*P(2)*P(4)*P(10)-P(6)*P(33)
       FR(3) = (B013R-2*B12R(1,1)+4*C123R(4,2)+8*C123R(5,3))*P(6)+B012
     -   R*P(24)+C0123R*P(32)+C123R(1,1)*P(34)
       FI(3) = (B013I-2*B12I(1,1)+4*C123I(4,2)+8*C123I(5,3))*P(6)+B012
     -   I*P(24)+C0123I*P(32)+C123I(1,1)*P(34)
       F(3)=DCMPLX(FR(3),FI(3))
       P(35) = p1sq*P(6)-2*M**2*P(3)*P(20)
       FR(4) = -2*(B13R(1,1)-2*(C123R(4,2)+2*C123R(6,3)))*P(6)+C123R(2
     -   ,1)*P(23)+(B013R+B023R)*P(24)+C0123R*P(35)
       FI(4) = -2*(B13I(1,1)-2*(C123I(4,2)+2*C123I(6,3)))*P(6)+C123I(2
     -   ,1)*P(23)+(B013I+B023I)*P(24)+C0123I*P(35)
       F(4)=DCMPLX(FR(4),FI(4))
       FR(5) = -2*(B23R(1,1)-2*(C123R(4,2)+2*C123R(6,3)))*P(6)+(B013R+
     -   B023R)*P(24)+C123R(2,1)*P(31)+C0123R*P(35)
       FI(5) = -2*(B23I(1,1)-2*(C123I(4,2)+2*C123I(6,3)))*P(6)+(B013I+
     -   B023I)*P(24)+C123I(2,1)*P(31)+C0123I*P(35)
       F(5)=DCMPLX(FR(5),FI(5))
       P(36) = -(p1sq*P(6))+2*M**2*P(3)*P(20)
       FR(6) = (B013R+B023R+8*C123R(6,3))*P(6)+C123R(2,1)*P(34)+C0123R
     -   *P(36)
       FI(6) = (B013I+B023I+8*C123I(6,3))*P(6)+C123I(2,1)*P(34)+C0123I
     -   *P(36)
       F(6)=DCMPLX(FR(6),FI(6))
       FR(7) = 8*(C123R(1,1)+2*C123R(1,2)+C123R(1,3))*P(6)
       FI(7) = 8*(C123I(1,1)+2*C123I(1,2)+C123I(1,3))*P(6)
       F(7)=DCMPLX(FR(7),FI(7))
       FR(8) = 4*(C123R(1,1)+C123R(1,2)+2*(C123R(3,2)+C123R(3,3)))*P(6
     -   )
       FI(8) = 4*(C123I(1,1)+C123I(1,2)+2*(C123I(3,2)+C123I(3,3)))*P(6
     -   )
       F(8)=DCMPLX(FR(8),FI(8))
       FR(9) = 4*(C123R(2,1)+3*C123R(3,2)+2*C123R(3,3))*P(6)
       FI(9) = 4*(C123I(2,1)+3*C123I(3,2)+2*C123I(3,3))*P(6)
       F(9)=DCMPLX(FR(9),FI(9))
       FR(10) = 4*(C123R(1,1)+C123R(1,2)+C123R(2,1)+3*C123R(3,2)+2*C12
     -   3R(3,3))*P(6)
       FI(10) = 4*(C123I(1,1)+C123I(1,2)+C123I(2,1)+3*C123I(3,2)+2*C12
     -   3I(3,3))*P(6)
       F(10)=DCMPLX(FR(10),FI(10))
       FR(11) = 4*(C123R(2,2)+C123R(3,2)+2*C123R(4,3))*P(6)
       FI(11) = 4*(C123I(2,2)+C123I(3,2)+2*C123I(4,3))*P(6)
       F(11)=DCMPLX(FR(11),FI(11))
       FR(12) = 4*(C123R(2,1)+C123R(2,2)+2*(C123R(3,2)+C123R(4,3)))*P(
     -   6)
       FI(12) = 4*(C123I(2,1)+C123I(2,2)+2*(C123I(3,2)+C123I(4,3)))*P(
     -   6)
       F(12)=DCMPLX(FR(12),FI(12))
       FR(13) = 4*(C123R(2,1)+C123R(3,2)+2*(C123R(2,2)+C123R(4,3)))*P(
     -   6)
       FI(13) = 4*(C123I(2,1)+C123I(3,2)+2*(C123I(2,2)+C123I(4,3)))*P(
     -   6)
       F(13)=DCMPLX(FR(13),FI(13))
       FR(14) = 8*(C123R(2,2)+C123R(2,3))*P(6)
       FI(14) = 8*(C123I(2,2)+C123I(2,3))*P(6)
       F(14)=DCMPLX(FR(14),FI(14))
       FR(15) = 4*(B13R(2,2)-B23R(2,2))*P(6)-C0123R*M**2*P(3)*P(17)+B0
     -   13R*P(18)+B023R*P(19)
       FI(15) = 4*(B13I(2,2)-B23I(2,2))*P(6)-C0123I*M**2*P(3)*P(17)+B0
     -   13I*P(18)+B023I*P(19)
       F(15)=DCMPLX(FR(15),FI(15))
       FR(16) = 4*((B13R(1,1)+B13R(1,2))*P(6)-M**2*(C0123R+C123R(1,1))
     -   *P(3)*P(20))
       FI(16) = 4*((B13I(1,1)+B13I(1,2))*P(6)-M**2*(C0123I+C123I(1,1))
     -   *P(3)*P(20))
       F(16)=DCMPLX(FR(16),FI(16))
       FR(17) = 2*(2*(B13R(1,1)+B13R(1,2))*P(6)-M**2*P(3)*(C123R(2,1)*
     -   P(2)*P(11)+C0123R*P(20)))
       FI(17) = 2*(2*(B13I(1,1)+B13I(1,2))*P(6)-M**2*P(3)*(C123I(2,1)*
     -   P(2)*P(11)+C0123I*P(20)))
       F(17)=DCMPLX(FR(17),FI(17))
       FR(18) = 4*(B13R(1,1)+B13R(1,2))*P(6)-2*M**2*P(3)*(C123R(2,1)*P
     -   (4)*P(5)+C0123R*P(20))
       FI(18) = 4*(B13I(1,1)+B13I(1,2))*P(6)-2*M**2*P(3)*(C123I(2,1)*P
     -   (4)*P(5)+C0123I*P(20))
       F(18)=DCMPLX(FR(18),FI(18))
       FR(19) = 4*(B13R(1,1)+B13R(1,2)-B23R(1,1)-B23R(1,2))*P(6)
       FI(19) = 4*(B13I(1,1)+B13I(1,2)-B23I(1,1)-B23I(1,2))*P(6)
       F(19)=DCMPLX(FR(19),FI(19))
       FR(20) = 4*(B12R(2,2)-B13R(2,2))*P(6)+C0123R*M**2*P(4)*P(12)+B0
     -   12R*P(13)+B013R*P(14)
       FI(20) = 4*(B12I(2,2)-B13I(2,2))*P(6)+C0123I*M**2*P(4)*P(12)+B0
     -   12I*P(13)+B013I*P(14)
       F(20)=DCMPLX(FR(20),FI(20))
       FR(21) = -2*(2*(B13R(1,1)+B13R(1,2))*P(6)+M**2*P(4)*(C123R(1,1)
     -   *P(2)*P(10)+C0123R*P(15)))
       FI(21) = -2*(2*(B13I(1,1)+B13I(1,2))*P(6)+M**2*P(4)*(C123I(1,1)
     -   *P(2)*P(10)+C0123I*P(15)))
       F(21)=DCMPLX(FR(21),FI(21))
       FR(22) = -2*(2*(B13R(1,1)+B13R(1,2))*P(6)+M**2*P(4)*(C123R(1,1)
     -   *P(3)*P(5)-C0123R*P(15)))
       FI(22) = -2*(2*(B13I(1,1)+B13I(1,2))*P(6)+M**2*P(4)*(C123I(1,1)
     -   *P(3)*P(5)-C0123I*P(15)))
       F(22)=DCMPLX(FR(22),FI(22))
       FR(23) = -4*((B13R(1,1)+B13R(1,2))*P(6)+M**2*C123R(2,1)*P(4)*P(
     -   16))
       FI(23) = -4*((B13I(1,1)+B13I(1,2))*P(6)+M**2*C123I(2,1)*P(4)*P(
     -   16))
       F(23)=DCMPLX(FR(23),FI(23))
       FR(24) = 4*(B12R(1,1)+B12R(1,2)-B13R(1,1)-B13R(1,2))*P(6)
       FI(24) = 4*(B12I(1,1)+B12I(1,2)-B13I(1,1)-B13I(1,2))*P(6)
       F(24)=DCMPLX(FR(24),FI(24))
       FR(25) = -(C0123R*M**2*P(1)*P(2))+4*(-B12R(2,2)+B23R(2,2))*P(6)
     -   +B012R*P(7)+B023R*P(8)
       FI(25) = -(C0123I*M**2*P(1)*P(2))+4*(-B12I(2,2)+B23I(2,2))*P(6)
     -   +B012I*P(7)+B023I*P(8)
       F(25)=DCMPLX(FR(25),FI(25))
       FR(26) = 2*M**2*P(2)*(C0123R*P(9)+C123R(1,1)*P(4)*P(10)+C123R(2
     -   ,1)*P(3)*P(11))
       FI(26) = 2*M**2*P(2)*(C0123I*P(9)+C123I(1,1)*P(4)*P(10)+C123I(2
     -   ,1)*P(3)*P(11))
       F(26)=DCMPLX(FR(26),FI(26))
       FR(27) = 2*M**2*P(2)*(C0123R*P(9)+C123R(2,1)*P(4)*P(10)+C123R(1
     -   ,1)*P(3)*P(11))
       FI(27) = 2*M**2*P(2)*(C0123I*P(9)+C123I(2,1)*P(4)*P(10)+C123I(1
     -   ,1)*P(3)*P(11))
       F(27)=DCMPLX(FR(27),FI(27))
       FR(28) = -4*((B12R(1,1)+B12R(1,2))*P(6)-M**2*(C0123R+C123R(1,1)
     -   )*P(2)*P(9))
       FI(28) = -4*((B12I(1,1)+B12I(1,2))*P(6)-M**2*(C0123I+C123I(1,1)
     -   )*P(2)*P(9))
       F(28)=DCMPLX(FR(28),FI(28))
       FR(29) = 4*((B23R(1,1)+B23R(1,2))*P(6)+M**2*C123R(2,1)*P(2)*P(9
     -   ))
       FI(29) = 4*((B23I(1,1)+B23I(1,2))*P(6)+M**2*C123I(2,1)*P(2)*P(9
     -   ))
       F(29)=DCMPLX(FR(29),FI(29))
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       endif  
c               PART THAT DEPENDS ON THE EXTERNAL CURRENT
c************************************************************************************
c************************************************************************************
c************************************************************************************
       p1mup1 = dotrc(p1,mup1)
       p1mup2 = dotrc(p1,mup2)
       p1mup3 = dotrc(p1,mup3)
       p2mup1 = dotrc(p2,mup1)
       p2mup2 = dotrc(p2,mup2)
       p2mup3 = dotrc(p2,mup3)
       p3mup1 = dotrc(p3,mup1)
       p3mup2 = dotrc(p3,mup2)
       p3mup3 = dotrc(p3,mup3)
       mup1mup2 = dotcc(mup1,mup2)
       mup1mup3 = dotcc(mup1,mup3)
       mup2mup3 = dotcc(mup2,mup3)
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c       Amplitude                         
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************


       resultn(1) = mup1mup2*p1mup3*F(1)+mup1mup3*p1mup2*F(2)+mup2mup3
     -   *p1mup1*F(3)+mup1mup2*p2mup3*F(4)+mup1mup3*p2mup2*F(5)+mup2m
     -   up3*p2mup1*F(6)+p1mup1*p1mup2*p1mup3*F(7)+p1mup1*p1mup3*p2mu
     -   p2*F(8)+p1mup2*p1mup3*p2mup1*F(9)+p1mup1*p1mup2*p2mup3*F(10)
     -   +p1mup3*p2mup1*p2mup2*F(11)+p1mup1*p2mup2*p2mup3*F(12)+p1mup
     -   2*p2mup1*p2mup3*F(13)+p2mup1*p2mup2*p2mup3*F(14)

        if (comp.gt.0) then    

       resultn(2) = mup2mup3*F(15)+p1mup2*p1mup3*F(16)+p1mup3*p2mup2*F
     -   (17)+p1mup2*p2mup3*F(18)+p2mup2*p2mup3*F(19)
       resultn(3) = mup1mup3*F(20)+p1mup1*p2mup3*F(21)+p1mup3*p2mup1*F
     -   (22)+p2mup1*p2mup3*F(23)+p1mup1*p1mup3*F(24)
       resultn(4) = mup1mup2*F(25)+p1mup1*p2mup2*F(26)+p1mup2*p2mup1*F
     -   (27)+p1mup1*p1mup2*F(28)+p2mup1*p2mup2*F(29)

 
        endif    


c************************************************************************************


c !!! Following the Peskin-S convention this contribution should get a factor i from the Feyman rules
c !!! (including the factor -1 for closed fermion loop)
c !!! and a factor i coming from the scalar integrals.
c !!! -> i*i = -1, add this facor inside of the amplitude !!!!
       result=resultn(1)
c************************************************************************************
c************************************************************************************
       Return
       End
