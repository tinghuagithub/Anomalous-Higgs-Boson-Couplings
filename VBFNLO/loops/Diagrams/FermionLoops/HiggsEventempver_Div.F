       subroutine gluonverHiggsEven_Div(m,p1,p2,p3,mup1,mup2,musq,comp,result,Div)
c ************************************************************************************
c Author: Francisco Campanario
c E-mail: francam@particle.uni-karlsruhe.de
c Date: 14/8/2009
c Modified:14/8/2009
c ************************************************************************************
c determine the vertex diagram for of
c p1(gluon)    ---->------->--------->--------->---   p3(B) p3^2=M_h
c                                  $              
c                                  $              
c                                  $              
c                                  V              
c                                  $              
c                                  $              
c                                 p2             
c                                mu_p2           
c                               p2^2<=>0          
c Note: No couplings are assigned
c Note: To make it shorter in the promgram: mu_p2,...->mup2,... 
c Notation of External momenta: p1+p2+p3=0 
c mu_p1,mu_p2 should be think as external current 
c************************************************************************************
c************************************************************************************
c************************************************************************************
c    Declaration of variables 
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       IMPLICIT NONE
      Real*8   p1(0:3),p2(0:3),p3(0:3)
       Real*8   p1sq, p1p2, p1p3, p2sq, p2p3, p3sq
       Real*8   s12,s23,s13
       Complex*16   p1mup1, p1mup2, p2mup1, p2mup2, p3mup1, p3mup2
       Complex*16   mup1mup2
       Real*8 dotrr
       Complex*16 B0tMDiv
       EXTERNAL dotrr,B0tMDiv
       Complex*16 B012,B013,B023
      Real*8 B012R,B013R,B023R
      Real*8 B012I,B013I,B023I
       Complex*16 C0123
       Real*8 C0123R
       Real*8 C0123I
       Real*8 C123R(4,2)
       Real*8 C123I(4,2)
      Complex*16 F(5)
      Real*8 FI(5),FR(5),P(1)
      Complex*16 mup1(0:3),mup2(0:3)
      Complex*16 dotrc,dotcc,result
       Real*8 m,msq,musq
      EXTERNAL   dotrc,dotcc
      Integer comp,Div
      Save F
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c       Definition of the scalar products. Not inlcueded the contraction of the
c       moments with the external currents  
c************************************************************************************
c************************************************************************************
       msq=m*m
       p1sq = dotrr(p1,p1)
       p1p2 = dotrr(p1,p2)
       p1p3 = dotrr(p1,p3)
       p2sq = dotrr(p2,p2)
       p2p3 = dotrr(p2,p3)
       p3sq = dotrr(p3,p3)
       s12 = (p1sq +p2sq+ 2*p1p2) 
       s13 = (p1sq +p3sq+ 2*p1p3) 
       s23 = (p2sq +p3sq+ 2*p2p3) 
c       Write(*,'(a5,F20.10)')," p1sq ", p1sq 
c       Write(*,'(a5,F20.10)')," p1p2 ", p1p2
c       Write(*,'(a5,F20.10)')," p1p3 ", p1p3
c       Write(*,'(a5,F20.10)')," p2sq ", p2sq 
c       Write(*,'(a5,F20.10)')," p2p3 ", p2p3
c       Write(*,'(a5,F20.10)')," p3sq ", p3sq 
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c    Calling C_ij,D_ij Functions    
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************

*********
        if (comp.gt.0) then    
        if(m.gt.1d-6) then

       B012=B0tMDiv(m,p1sq,Div)  
       B013=B0tMDiv(m,s12,Div)   
       B023=B0tMDiv(m,p2sq,Div)  
       B012R=Dble(B012)          
       B013R=Dble(B013) 
       B023R=Dble(B023 ) 
       B012I=DIMAG(B012)          
       B013I=DIMAG(B013) 
       B023I=DIMAG(B023) 
c************************************************************************************
c************************************************************************************
      C0123=0d0
c************************************************************************************
c************************************************************************************
c************************************************************************************
       call tens_red3_new_Re_Com_1MDiv(m,p1sq,p2sq,s12,B023,B013,B012,C01
     -   23,C0123R,C0123I,C123R,C123I) 
       
       elseif(m.lt.1d-6) then
         result=0d0
       return
       endif


c       Definition of the F,P functions:Independent of the currents    
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       P(1) = p1sq+p2sq-s12
       FR(1) = -B013R+4*C123R(4,2)+(C0123R*P(1))/2.
       FI(1) = -B013I+4*C123I(4,2)+(C0123I*P(1))/2.
       F(1)=DCMPLX(FR(1),FI(1))
       FR(2) = 2*(C0123R+3*C123R(1,1)+2*C123R(1,2))
       FI(2) = 2*(C0123I+3*C123I(1,1)+2*C123I(1,2))
       F(2)=DCMPLX(FR(2),FI(2))
       FR(3) = C0123R+2*(C123R(1,1)+C123R(2,1)+2*C123R(3,2))
       FI(3) = C0123I+2*(C123I(1,1)+C123I(2,1)+2*C123I(3,2))
       F(3)=DCMPLX(FR(3),FI(3))
       FR(4) = C0123R+4*(C123R(2,1)+C123R(3,2))
       FI(4) = C0123I+4*(C123I(2,1)+C123I(3,2))
       F(4)=DCMPLX(FR(4),FI(4))
       FR(5) = 2*(C123R(2,1)+2*C123R(2,2))
       FI(5) = 2*(C123I(2,1)+2*C123I(2,2))
       F(5)=DCMPLX(FR(5),FI(5))
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
c               PART THAT DEPENDS ON THE EXTERNAL CURRENT
c************************************************************************************
c************************************************************************************
c************************************************************************************
       else
       if(m.lt.1d-6) then
         result=0d0
       return
       endif
       endif

       p1mup1 = dotrc(p1,mup1)
       p1mup2 = dotrc(p1,mup2)
       p2mup1 = dotrc(p2,mup1)
       p2mup2 = dotrc(p2,mup2)
       p3mup1 = dotrc(p3,mup1)
       p3mup2 = dotrc(p3,mup2)
       mup1mup2 = dotcc(mup1,mup2)
c************************************************************************************
c************************************************************************************
c************************************************************************************
c       Amplitude                         
c************************************************************************************
c************************************************************************************
c************************************************************************************
c************************************************************************************
       result = mup1mup2*F(1)+p1mup1*p1mup2*F(2)+p1mup1*p2mup2*F(3)+p1
     -   mup2*p2mup1*F(4)+p2mup1*p2mup2*F(5)
       result =-4d0*M*(result)
c************************************************************************************
c************************************************************************************
c************************************************************************************
       Return
       End
