# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@WITH_QUAD_TRUE@am__append_1 = libFFquad.la
@WITH_QUAD_TRUE@am__append_2 = $(nodist_libFFquad_la_SOURCES)
subdir = loops/Integrals/FF
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/dependencies.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/vbfnlo.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_FF_DATA) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/utilities/VBFNLOConfig.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libFF_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
dist_libFF_la_OBJECTS = ff/libFF_la-ff2dl2.lo ff/libFF_la-ffabcd.lo \
	ff/libFF_la-ffca0.lo ff/libFF_la-ffcb0.lo ff/libFF_la-ffcb1.lo \
	ff/libFF_la-ffcb2p.lo ff/libFF_la-ffcdb0.lo \
	ff/libFF_la-ffcc0.lo ff/libFF_la-ffcc0p.lo \
	ff/libFF_la-ffcc1.lo ff/libFF_la-ffcel2.lo \
	ff/libFF_la-ffcel3.lo ff/libFF_la-ffcel4.lo \
	ff/libFF_la-ffcel5.lo ff/libFF_la-ffceta.lo \
	ff/libFF_la-ffcli2.lo ff/libFF_la-ffcrr.lo \
	ff/libFF_la-ffcxr.lo ff/libFF_la-ffcxs3.lo \
	ff/libFF_la-ffcxs4.lo ff/libFF_la-ffcxyz.lo \
	ff/libFF_la-ffdcc0.lo ff/libFF_la-ffdcxs.lo \
	ff/libFF_la-ffdel2.lo ff/libFF_la-ffdel3.lo \
	ff/libFF_la-ffdel4.lo ff/libFF_la-ffdel5.lo \
	ff/libFF_la-ffdel6.lo ff/libFF_la-ffdl2i.lo \
	ff/libFF_la-ffdl5p.lo ff/libFF_la-ffdxc0.lo \
	ff/libFF_la-ffrcvr.lo ff/libFF_la-fftran.lo \
	ff/libFF_la-ffxb0.lo ff/libFF_la-ffxb1.lo \
	ff/libFF_la-ffxb2p.lo ff/libFF_la-ffxc0.lo \
	ff/libFF_la-ffxc0i.lo ff/libFF_la-ffxc0p.lo \
	ff/libFF_la-ffxc1.lo ff/libFF_la-ffxd0.lo \
	ff/libFF_la-ffxd0h.lo ff/libFF_la-ffxd0i.lo \
	ff/libFF_la-ffxd0p.lo ff/libFF_la-ffxd1.lo \
	ff/libFF_la-ffxdb0.lo ff/libFF_la-ffxdbd.lo \
	ff/libFF_la-ffxdi.lo ff/libFF_la-ffxdpv.lo \
	ff/libFF_la-ffxe0.lo ff/libFF_la-ffxe1.lo ff/libFF_la-ffxf0.lo \
	ff/libFF_la-ffxf0h.lo ff/libFF_la-ffxli2.lo \
	ff/libFF_la-ffxxyz.lo
nodist_libFF_la_OBJECTS = ff/libFF_la-ffinit.lo
libFF_la_OBJECTS = $(dist_libFF_la_OBJECTS) $(nodist_libFF_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libFF_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(libFF_la_FFLAGS) \
	$(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
libFFquad_la_LIBADD =
am__objects_1 = ff/libFFquad_la-ffinit.quad.lo
am__objects_2 = ff/libFFquad_la-ff2dl2.quad.lo \
	ff/libFFquad_la-ffabcd.quad.lo ff/libFFquad_la-ffca0.quad.lo \
	ff/libFFquad_la-ffcb0.quad.lo ff/libFFquad_la-ffcb1.quad.lo \
	ff/libFFquad_la-ffcb2p.quad.lo ff/libFFquad_la-ffcdb0.quad.lo \
	ff/libFFquad_la-ffcc0.quad.lo ff/libFFquad_la-ffcc0p.quad.lo \
	ff/libFFquad_la-ffcc1.quad.lo ff/libFFquad_la-ffcel2.quad.lo \
	ff/libFFquad_la-ffcel3.quad.lo ff/libFFquad_la-ffcel4.quad.lo \
	ff/libFFquad_la-ffcel5.quad.lo ff/libFFquad_la-ffceta.quad.lo \
	ff/libFFquad_la-ffcli2.quad.lo ff/libFFquad_la-ffcrr.quad.lo \
	ff/libFFquad_la-ffcxr.quad.lo ff/libFFquad_la-ffcxs3.quad.lo \
	ff/libFFquad_la-ffcxs4.quad.lo ff/libFFquad_la-ffcxyz.quad.lo \
	ff/libFFquad_la-ffdcc0.quad.lo ff/libFFquad_la-ffdcxs.quad.lo \
	ff/libFFquad_la-ffdel2.quad.lo ff/libFFquad_la-ffdel3.quad.lo \
	ff/libFFquad_la-ffdel4.quad.lo ff/libFFquad_la-ffdel5.quad.lo \
	ff/libFFquad_la-ffdel6.quad.lo ff/libFFquad_la-ffdl2i.quad.lo \
	ff/libFFquad_la-ffdl5p.quad.lo ff/libFFquad_la-ffdxc0.quad.lo \
	ff/libFFquad_la-ffrcvr.quad.lo ff/libFFquad_la-fftran.quad.lo \
	ff/libFFquad_la-ffxb0.quad.lo ff/libFFquad_la-ffxb1.quad.lo \
	ff/libFFquad_la-ffxb2p.quad.lo ff/libFFquad_la-ffxc0.quad.lo \
	ff/libFFquad_la-ffxc0i.quad.lo ff/libFFquad_la-ffxc0p.quad.lo \
	ff/libFFquad_la-ffxc1.quad.lo ff/libFFquad_la-ffxd0.quad.lo \
	ff/libFFquad_la-ffxd0h.quad.lo ff/libFFquad_la-ffxd0i.quad.lo \
	ff/libFFquad_la-ffxd0p.quad.lo ff/libFFquad_la-ffxd1.quad.lo \
	ff/libFFquad_la-ffxdb0.quad.lo ff/libFFquad_la-ffxdbd.quad.lo \
	ff/libFFquad_la-ffxdi.quad.lo ff/libFFquad_la-ffxdpv.quad.lo \
	ff/libFFquad_la-ffxe0.quad.lo ff/libFFquad_la-ffxe1.quad.lo \
	ff/libFFquad_la-ffxf0.quad.lo ff/libFFquad_la-ffxf0h.quad.lo \
	ff/libFFquad_la-ffxli2.quad.lo ff/libFFquad_la-ffxxyz.quad.lo
@WITH_QUAD_TRUE@nodist_libFFquad_la_OBJECTS = $(am__objects_1) \
@WITH_QUAD_TRUE@	$(am__objects_2)
libFFquad_la_OBJECTS = $(nodist_libFFquad_la_OBJECTS)
libFFquad_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(libFFquad_la_FFLAGS) \
	$(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
@WITH_QUAD_TRUE@am_libFFquad_la_rpath =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/utilities
PPF77COMPILE = $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS)
LTPPF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_FFLAGS) $(FFLAGS)
AM_V_PPF77 = $(am__v_PPF77_@AM_V@)
am__v_PPF77_ = $(am__v_PPF77_@AM_DEFAULT_V@)
am__v_PPF77_0 = @echo "  PPF77   " $@;
am__v_PPF77_1 = 
F77LD = $(F77)
F77LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_F77LD = $(am__v_F77LD_@AM_V@)
am__v_F77LD_ = $(am__v_F77LD_@AM_DEFAULT_V@)
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_@AM_V@)
am__v_F77_ = $(am__v_F77_@AM_DEFAULT_V@)
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(dist_libFF_la_SOURCES) $(nodist_libFF_la_SOURCES) \
	$(nodist_libFFquad_la_SOURCES)
DIST_SOURCES = $(dist_libFF_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(FFdir)"
DATA = $(dist_FF_DATA)
am__extra_recursive_targets = dependencylist-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.dependencylist
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CFLAGS = @AM_CFLAGS@
AM_CPPFLAGS = @AM_CPPFLAGS@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_FCFLAGS = @AM_FCFLAGS@
AM_FFLAGS = @AM_FFLAGS@
AM_LDFLAGS = @AM_LDFLAGS@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
F77DEPMODE = @F77DEPMODE@
FC = @FC@
FCDEPMODE = @FCDEPMODE@
FCFLAGS = @FCFLAGS@
FCLIBS = @FCLIBS@
FEYNHIGGS_DIR = @FEYNHIGGS_DIR@
FEYNHIGGS_LDFLAGS = @FEYNHIGGS_LDFLAGS@
FEYNHIGGS_LIBS = @FEYNHIGGS_LIBS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FHVERSION = @FHVERSION@
GFORTRAN_48_FIX_GGF = @GFORTRAN_48_FIX_GGF@
GFORTRAN_48_FIX_LOOPS = @GFORTRAN_48_FIX_LOOPS@
GREP = @GREP@
GSLINCLUDE = @GSLINCLUDE@
GSLLDFLAGS = @GSLLDFLAGS@
GSLLIBS = @GSLLIBS@
HEPMCINCLUDE = @HEPMCINCLUDE@
HEPMCLDFLAGS = @HEPMCLDFLAGS@
HEPMCLIBS = @HEPMCLIBS@
HEPMC_DIR = @HEPMC_DIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LHAPDF_DIR = @LHAPDF_DIR@
LHAPDF_LDFLAGS = @LHAPDF_LDFLAGS@
LHAPDF_LIBS = @LHAPDF_LIBS@
LHAPDF_PDFPATH = @LHAPDF_PDFPATH@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOOPTOOLS_DIR = @LOOPTOOLS_DIR@
LOOPTOOLS_LDFLAGS = @LOOPTOOLS_LDFLAGS@
LOOPTOOLS_LIBS = @LOOPTOOLS_LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
QUADFCFLAGS = @QUADFCFLAGS@
RANLIB = @RANLIB@
ROOTCONFIG = @ROOTCONFIG@
ROOTINCLUDE = @ROOTINCLUDE@
ROOTLDFLAGS = @ROOTLDFLAGS@
ROOTLIBPATH = @ROOTLIBPATH@
ROOTLIBS = @ROOTLIBS@
ROOTPATH = @ROOTPATH@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SWVERS = @SWVERS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
have_git = @have_git@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
lhaconfig = @lhaconfig@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_LTLIBRARIES = libFF.la $(am__append_1)

#Note: this list differs from the one in the Makefile because of a duplicate entry and one with an undefined function.
nodist_libFF_la_SOURCES = ff/ffinit.f
dist_libFF_la_SOURCES = \
		ff/ff2dl2.f \
		ff/ffabcd.f \
		ff/ffca0.f \
		ff/ffcb0.f \
		ff/ffcb1.f \
		ff/ffcb2p.f \
		ff/ffcdb0.f \
		ff/ffcc0.f \
		ff/ffcc0p.f \
		ff/ffcc1.f \
		ff/ffcel2.f \
		ff/ffcel3.f \
		ff/ffcel4.f \
		ff/ffcel5.f \
		ff/ffceta.f \
		ff/ffcli2.f \
		ff/ffcrr.f \
		ff/ffcxr.f \
		ff/ffcxs3.f \
		ff/ffcxs4.f \
		ff/ffcxyz.f \
		ff/ffdcc0.f \
		ff/ffdcxs.f \
		ff/ffdel2.f \
		ff/ffdel3.f \
		ff/ffdel4.f \
		ff/ffdel5.f \
		ff/ffdel6.f \
		ff/ffdl2i.f \
		ff/ffdl5p.f \
		ff/ffdxc0.f \
		ff/ffrcvr.f \
		ff/fftran.f \
		ff/ffxb0.f \
		ff/ffxb1.f \
		ff/ffxb2p.f \
		ff/ffxc0.f \
		ff/ffxc0i.f \
		ff/ffxc0p.f \
		ff/ffxc1.f \
		ff/ffxd0.f \
		ff/ffxd0h.f \
		ff/ffxd0i.f \
		ff/ffxd0p.f \
		ff/ffxd1.f \
		ff/ffxdb0.f \
		ff/ffxdbd.f \
		ff/ffxdi.f \
		ff/ffxdpv.f \
		ff/ffxe0.f \
		ff/ffxe1.f \
		ff/ffxf0.f \
		ff/ffxf0h.f \
		ff/ffxli2.f \
		ff/ffxxyz.f

libFF_la_FFLAGS = $(AM_FCFLAGS) -I$(builddir)/ff 
FFdir = $(pkgdatadir)/ff
dist_FF_DATA = ff/fferr.dat ff/ffwarn.dat 
BUILT_SOURCES = ff/ffinit.f $(am__append_2)
EXTRA_DIST = ff/ffinit.f.in ff/ff.h.in ff/aa.h.in FF.html convert.sh \
	ff/Makefile ff/Makefile.old ff/README ff/aacbc.f ff/aaccc.f \
	ff/aacinv.f ff/aaxbx.f ff/aaxcx.f ff/aaxdx.f ff/aaxex.f \
	ff/aaxinv.f ff/ffcb2.f ff/ffcd0.f ff/ffcdbd.f ff/ffini.f \
	ff/ffperm5.dat ff/fftest.f ff/npoin.f ff/npointes.f \
	ff/npointes.out ff/spence.f ff/update ffmanual.tex \
	Makefile.dep

# same as above with generated files
@WITH_QUAD_TRUE@nodist_libFFquad_la_SOURCES = $(nodist_libFF_la_SOURCES:.f=.quad.F) $(dist_libFF_la_SOURCES:.f=.quad.F) 
@WITH_QUAD_TRUE@libFFquad_la_FFLAGS = $(AM_FCFLAGS) -I$(builddir)/ff $(QUADFCFLAGS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .F .f .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.dependencylist $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign loops/Integrals/FF/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign loops/Integrals/FF/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.dependencylist $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
ff/$(am__dirstamp):
	@$(MKDIR_P) ff
	@: > ff/$(am__dirstamp)
ff/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ff/$(DEPDIR)
	@: > ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ff2dl2.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffabcd.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffca0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcb0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcb1.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcb2p.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcdb0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcc0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcc0p.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcc1.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcel2.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcel3.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcel4.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcel5.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffceta.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcli2.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcrr.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcxr.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcxs3.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcxs4.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffcxyz.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffdcc0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffdcxs.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffdel2.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffdel3.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffdel4.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffdel5.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffdel6.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffdl2i.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffdl5p.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffdxc0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffrcvr.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-fftran.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxb0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxb1.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxb2p.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxc0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxc0i.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxc0p.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxc1.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxd0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxd0h.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxd0i.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxd0p.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxd1.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxdb0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxdbd.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxdi.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxdpv.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxe0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxe1.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxf0.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxf0h.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxli2.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffxxyz.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)
ff/libFF_la-ffinit.lo: ff/$(am__dirstamp) ff/$(DEPDIR)/$(am__dirstamp)

libFF.la: $(libFF_la_OBJECTS) $(libFF_la_DEPENDENCIES) $(EXTRA_libFF_la_DEPENDENCIES) 
	$(AM_V_F77LD)$(libFF_la_LINK)  $(libFF_la_OBJECTS) $(libFF_la_LIBADD) $(LIBS)
ff/libFFquad_la-ffinit.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ff2dl2.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffabcd.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffca0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcb0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcb1.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcb2p.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcdb0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcc0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcc0p.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcc1.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcel2.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcel3.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcel4.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcel5.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffceta.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcli2.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcrr.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcxr.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcxs3.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcxs4.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffcxyz.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffdcc0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffdcxs.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffdel2.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffdel3.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffdel4.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffdel5.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffdel6.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffdl2i.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffdl5p.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffdxc0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffrcvr.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-fftran.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxb0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxb1.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxb2p.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxc0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxc0i.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxc0p.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxc1.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxd0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxd0h.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxd0i.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxd0p.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxd1.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxdb0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxdbd.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxdi.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxdpv.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxe0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxe1.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxf0.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxf0h.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxli2.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)
ff/libFFquad_la-ffxxyz.quad.lo: ff/$(am__dirstamp) \
	ff/$(DEPDIR)/$(am__dirstamp)

libFFquad.la: $(libFFquad_la_OBJECTS) $(libFFquad_la_DEPENDENCIES) $(EXTRA_libFFquad_la_DEPENDENCIES) 
	$(AM_V_F77LD)$(libFFquad_la_LINK) $(am_libFFquad_la_rpath) $(libFFquad_la_OBJECTS) $(libFFquad_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ff/*.$(OBJEXT)
	-rm -f ff/*.lo

distclean-compile:
	-rm -f *.tab.c

.F.o:
	$(AM_V_PPF77)$(PPF77COMPILE) -c -o $@ $<

.F.obj:
	$(AM_V_PPF77)$(PPF77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.F.lo:
	$(AM_V_PPF77)$(LTPPF77COMPILE) -c -o $@ $<

ff/libFFquad_la-ffinit.quad.lo: ff/ffinit.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffinit.quad.lo `test -f 'ff/ffinit.quad.F' || echo '$(srcdir)/'`ff/ffinit.quad.F

ff/libFFquad_la-ff2dl2.quad.lo: ff/ff2dl2.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ff2dl2.quad.lo `test -f 'ff/ff2dl2.quad.F' || echo '$(srcdir)/'`ff/ff2dl2.quad.F

ff/libFFquad_la-ffabcd.quad.lo: ff/ffabcd.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffabcd.quad.lo `test -f 'ff/ffabcd.quad.F' || echo '$(srcdir)/'`ff/ffabcd.quad.F

ff/libFFquad_la-ffca0.quad.lo: ff/ffca0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffca0.quad.lo `test -f 'ff/ffca0.quad.F' || echo '$(srcdir)/'`ff/ffca0.quad.F

ff/libFFquad_la-ffcb0.quad.lo: ff/ffcb0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcb0.quad.lo `test -f 'ff/ffcb0.quad.F' || echo '$(srcdir)/'`ff/ffcb0.quad.F

ff/libFFquad_la-ffcb1.quad.lo: ff/ffcb1.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcb1.quad.lo `test -f 'ff/ffcb1.quad.F' || echo '$(srcdir)/'`ff/ffcb1.quad.F

ff/libFFquad_la-ffcb2p.quad.lo: ff/ffcb2p.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcb2p.quad.lo `test -f 'ff/ffcb2p.quad.F' || echo '$(srcdir)/'`ff/ffcb2p.quad.F

ff/libFFquad_la-ffcdb0.quad.lo: ff/ffcdb0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcdb0.quad.lo `test -f 'ff/ffcdb0.quad.F' || echo '$(srcdir)/'`ff/ffcdb0.quad.F

ff/libFFquad_la-ffcc0.quad.lo: ff/ffcc0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcc0.quad.lo `test -f 'ff/ffcc0.quad.F' || echo '$(srcdir)/'`ff/ffcc0.quad.F

ff/libFFquad_la-ffcc0p.quad.lo: ff/ffcc0p.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcc0p.quad.lo `test -f 'ff/ffcc0p.quad.F' || echo '$(srcdir)/'`ff/ffcc0p.quad.F

ff/libFFquad_la-ffcc1.quad.lo: ff/ffcc1.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcc1.quad.lo `test -f 'ff/ffcc1.quad.F' || echo '$(srcdir)/'`ff/ffcc1.quad.F

ff/libFFquad_la-ffcel2.quad.lo: ff/ffcel2.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcel2.quad.lo `test -f 'ff/ffcel2.quad.F' || echo '$(srcdir)/'`ff/ffcel2.quad.F

ff/libFFquad_la-ffcel3.quad.lo: ff/ffcel3.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcel3.quad.lo `test -f 'ff/ffcel3.quad.F' || echo '$(srcdir)/'`ff/ffcel3.quad.F

ff/libFFquad_la-ffcel4.quad.lo: ff/ffcel4.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcel4.quad.lo `test -f 'ff/ffcel4.quad.F' || echo '$(srcdir)/'`ff/ffcel4.quad.F

ff/libFFquad_la-ffcel5.quad.lo: ff/ffcel5.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcel5.quad.lo `test -f 'ff/ffcel5.quad.F' || echo '$(srcdir)/'`ff/ffcel5.quad.F

ff/libFFquad_la-ffceta.quad.lo: ff/ffceta.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffceta.quad.lo `test -f 'ff/ffceta.quad.F' || echo '$(srcdir)/'`ff/ffceta.quad.F

ff/libFFquad_la-ffcli2.quad.lo: ff/ffcli2.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcli2.quad.lo `test -f 'ff/ffcli2.quad.F' || echo '$(srcdir)/'`ff/ffcli2.quad.F

ff/libFFquad_la-ffcrr.quad.lo: ff/ffcrr.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcrr.quad.lo `test -f 'ff/ffcrr.quad.F' || echo '$(srcdir)/'`ff/ffcrr.quad.F

ff/libFFquad_la-ffcxr.quad.lo: ff/ffcxr.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcxr.quad.lo `test -f 'ff/ffcxr.quad.F' || echo '$(srcdir)/'`ff/ffcxr.quad.F

ff/libFFquad_la-ffcxs3.quad.lo: ff/ffcxs3.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcxs3.quad.lo `test -f 'ff/ffcxs3.quad.F' || echo '$(srcdir)/'`ff/ffcxs3.quad.F

ff/libFFquad_la-ffcxs4.quad.lo: ff/ffcxs4.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcxs4.quad.lo `test -f 'ff/ffcxs4.quad.F' || echo '$(srcdir)/'`ff/ffcxs4.quad.F

ff/libFFquad_la-ffcxyz.quad.lo: ff/ffcxyz.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffcxyz.quad.lo `test -f 'ff/ffcxyz.quad.F' || echo '$(srcdir)/'`ff/ffcxyz.quad.F

ff/libFFquad_la-ffdcc0.quad.lo: ff/ffdcc0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffdcc0.quad.lo `test -f 'ff/ffdcc0.quad.F' || echo '$(srcdir)/'`ff/ffdcc0.quad.F

ff/libFFquad_la-ffdcxs.quad.lo: ff/ffdcxs.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffdcxs.quad.lo `test -f 'ff/ffdcxs.quad.F' || echo '$(srcdir)/'`ff/ffdcxs.quad.F

ff/libFFquad_la-ffdel2.quad.lo: ff/ffdel2.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffdel2.quad.lo `test -f 'ff/ffdel2.quad.F' || echo '$(srcdir)/'`ff/ffdel2.quad.F

ff/libFFquad_la-ffdel3.quad.lo: ff/ffdel3.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffdel3.quad.lo `test -f 'ff/ffdel3.quad.F' || echo '$(srcdir)/'`ff/ffdel3.quad.F

ff/libFFquad_la-ffdel4.quad.lo: ff/ffdel4.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffdel4.quad.lo `test -f 'ff/ffdel4.quad.F' || echo '$(srcdir)/'`ff/ffdel4.quad.F

ff/libFFquad_la-ffdel5.quad.lo: ff/ffdel5.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffdel5.quad.lo `test -f 'ff/ffdel5.quad.F' || echo '$(srcdir)/'`ff/ffdel5.quad.F

ff/libFFquad_la-ffdel6.quad.lo: ff/ffdel6.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffdel6.quad.lo `test -f 'ff/ffdel6.quad.F' || echo '$(srcdir)/'`ff/ffdel6.quad.F

ff/libFFquad_la-ffdl2i.quad.lo: ff/ffdl2i.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffdl2i.quad.lo `test -f 'ff/ffdl2i.quad.F' || echo '$(srcdir)/'`ff/ffdl2i.quad.F

ff/libFFquad_la-ffdl5p.quad.lo: ff/ffdl5p.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffdl5p.quad.lo `test -f 'ff/ffdl5p.quad.F' || echo '$(srcdir)/'`ff/ffdl5p.quad.F

ff/libFFquad_la-ffdxc0.quad.lo: ff/ffdxc0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffdxc0.quad.lo `test -f 'ff/ffdxc0.quad.F' || echo '$(srcdir)/'`ff/ffdxc0.quad.F

ff/libFFquad_la-ffrcvr.quad.lo: ff/ffrcvr.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffrcvr.quad.lo `test -f 'ff/ffrcvr.quad.F' || echo '$(srcdir)/'`ff/ffrcvr.quad.F

ff/libFFquad_la-fftran.quad.lo: ff/fftran.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-fftran.quad.lo `test -f 'ff/fftran.quad.F' || echo '$(srcdir)/'`ff/fftran.quad.F

ff/libFFquad_la-ffxb0.quad.lo: ff/ffxb0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxb0.quad.lo `test -f 'ff/ffxb0.quad.F' || echo '$(srcdir)/'`ff/ffxb0.quad.F

ff/libFFquad_la-ffxb1.quad.lo: ff/ffxb1.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxb1.quad.lo `test -f 'ff/ffxb1.quad.F' || echo '$(srcdir)/'`ff/ffxb1.quad.F

ff/libFFquad_la-ffxb2p.quad.lo: ff/ffxb2p.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxb2p.quad.lo `test -f 'ff/ffxb2p.quad.F' || echo '$(srcdir)/'`ff/ffxb2p.quad.F

ff/libFFquad_la-ffxc0.quad.lo: ff/ffxc0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxc0.quad.lo `test -f 'ff/ffxc0.quad.F' || echo '$(srcdir)/'`ff/ffxc0.quad.F

ff/libFFquad_la-ffxc0i.quad.lo: ff/ffxc0i.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxc0i.quad.lo `test -f 'ff/ffxc0i.quad.F' || echo '$(srcdir)/'`ff/ffxc0i.quad.F

ff/libFFquad_la-ffxc0p.quad.lo: ff/ffxc0p.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxc0p.quad.lo `test -f 'ff/ffxc0p.quad.F' || echo '$(srcdir)/'`ff/ffxc0p.quad.F

ff/libFFquad_la-ffxc1.quad.lo: ff/ffxc1.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxc1.quad.lo `test -f 'ff/ffxc1.quad.F' || echo '$(srcdir)/'`ff/ffxc1.quad.F

ff/libFFquad_la-ffxd0.quad.lo: ff/ffxd0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxd0.quad.lo `test -f 'ff/ffxd0.quad.F' || echo '$(srcdir)/'`ff/ffxd0.quad.F

ff/libFFquad_la-ffxd0h.quad.lo: ff/ffxd0h.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxd0h.quad.lo `test -f 'ff/ffxd0h.quad.F' || echo '$(srcdir)/'`ff/ffxd0h.quad.F

ff/libFFquad_la-ffxd0i.quad.lo: ff/ffxd0i.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxd0i.quad.lo `test -f 'ff/ffxd0i.quad.F' || echo '$(srcdir)/'`ff/ffxd0i.quad.F

ff/libFFquad_la-ffxd0p.quad.lo: ff/ffxd0p.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxd0p.quad.lo `test -f 'ff/ffxd0p.quad.F' || echo '$(srcdir)/'`ff/ffxd0p.quad.F

ff/libFFquad_la-ffxd1.quad.lo: ff/ffxd1.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxd1.quad.lo `test -f 'ff/ffxd1.quad.F' || echo '$(srcdir)/'`ff/ffxd1.quad.F

ff/libFFquad_la-ffxdb0.quad.lo: ff/ffxdb0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxdb0.quad.lo `test -f 'ff/ffxdb0.quad.F' || echo '$(srcdir)/'`ff/ffxdb0.quad.F

ff/libFFquad_la-ffxdbd.quad.lo: ff/ffxdbd.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxdbd.quad.lo `test -f 'ff/ffxdbd.quad.F' || echo '$(srcdir)/'`ff/ffxdbd.quad.F

ff/libFFquad_la-ffxdi.quad.lo: ff/ffxdi.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxdi.quad.lo `test -f 'ff/ffxdi.quad.F' || echo '$(srcdir)/'`ff/ffxdi.quad.F

ff/libFFquad_la-ffxdpv.quad.lo: ff/ffxdpv.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxdpv.quad.lo `test -f 'ff/ffxdpv.quad.F' || echo '$(srcdir)/'`ff/ffxdpv.quad.F

ff/libFFquad_la-ffxe0.quad.lo: ff/ffxe0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxe0.quad.lo `test -f 'ff/ffxe0.quad.F' || echo '$(srcdir)/'`ff/ffxe0.quad.F

ff/libFFquad_la-ffxe1.quad.lo: ff/ffxe1.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxe1.quad.lo `test -f 'ff/ffxe1.quad.F' || echo '$(srcdir)/'`ff/ffxe1.quad.F

ff/libFFquad_la-ffxf0.quad.lo: ff/ffxf0.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxf0.quad.lo `test -f 'ff/ffxf0.quad.F' || echo '$(srcdir)/'`ff/ffxf0.quad.F

ff/libFFquad_la-ffxf0h.quad.lo: ff/ffxf0h.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxf0h.quad.lo `test -f 'ff/ffxf0h.quad.F' || echo '$(srcdir)/'`ff/ffxf0h.quad.F

ff/libFFquad_la-ffxli2.quad.lo: ff/ffxli2.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxli2.quad.lo `test -f 'ff/ffxli2.quad.F' || echo '$(srcdir)/'`ff/ffxli2.quad.F

ff/libFFquad_la-ffxxyz.quad.lo: ff/ffxxyz.quad.F
	$(AM_V_PPF77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFFquad_la_FFLAGS) $(FFLAGS) -c -o ff/libFFquad_la-ffxxyz.quad.lo `test -f 'ff/ffxxyz.quad.F' || echo '$(srcdir)/'`ff/ffxxyz.quad.F
.F.f:
	$(F77COMPILE) -F $<

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(AM_V_F77)$(LTF77COMPILE) -c -o $@ $<

ff/libFF_la-ff2dl2.lo: ff/ff2dl2.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ff2dl2.lo `test -f 'ff/ff2dl2.f' || echo '$(srcdir)/'`ff/ff2dl2.f

ff/libFF_la-ffabcd.lo: ff/ffabcd.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffabcd.lo `test -f 'ff/ffabcd.f' || echo '$(srcdir)/'`ff/ffabcd.f

ff/libFF_la-ffca0.lo: ff/ffca0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffca0.lo `test -f 'ff/ffca0.f' || echo '$(srcdir)/'`ff/ffca0.f

ff/libFF_la-ffcb0.lo: ff/ffcb0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcb0.lo `test -f 'ff/ffcb0.f' || echo '$(srcdir)/'`ff/ffcb0.f

ff/libFF_la-ffcb1.lo: ff/ffcb1.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcb1.lo `test -f 'ff/ffcb1.f' || echo '$(srcdir)/'`ff/ffcb1.f

ff/libFF_la-ffcb2p.lo: ff/ffcb2p.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcb2p.lo `test -f 'ff/ffcb2p.f' || echo '$(srcdir)/'`ff/ffcb2p.f

ff/libFF_la-ffcdb0.lo: ff/ffcdb0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcdb0.lo `test -f 'ff/ffcdb0.f' || echo '$(srcdir)/'`ff/ffcdb0.f

ff/libFF_la-ffcc0.lo: ff/ffcc0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcc0.lo `test -f 'ff/ffcc0.f' || echo '$(srcdir)/'`ff/ffcc0.f

ff/libFF_la-ffcc0p.lo: ff/ffcc0p.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcc0p.lo `test -f 'ff/ffcc0p.f' || echo '$(srcdir)/'`ff/ffcc0p.f

ff/libFF_la-ffcc1.lo: ff/ffcc1.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcc1.lo `test -f 'ff/ffcc1.f' || echo '$(srcdir)/'`ff/ffcc1.f

ff/libFF_la-ffcel2.lo: ff/ffcel2.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcel2.lo `test -f 'ff/ffcel2.f' || echo '$(srcdir)/'`ff/ffcel2.f

ff/libFF_la-ffcel3.lo: ff/ffcel3.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcel3.lo `test -f 'ff/ffcel3.f' || echo '$(srcdir)/'`ff/ffcel3.f

ff/libFF_la-ffcel4.lo: ff/ffcel4.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcel4.lo `test -f 'ff/ffcel4.f' || echo '$(srcdir)/'`ff/ffcel4.f

ff/libFF_la-ffcel5.lo: ff/ffcel5.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcel5.lo `test -f 'ff/ffcel5.f' || echo '$(srcdir)/'`ff/ffcel5.f

ff/libFF_la-ffceta.lo: ff/ffceta.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffceta.lo `test -f 'ff/ffceta.f' || echo '$(srcdir)/'`ff/ffceta.f

ff/libFF_la-ffcli2.lo: ff/ffcli2.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcli2.lo `test -f 'ff/ffcli2.f' || echo '$(srcdir)/'`ff/ffcli2.f

ff/libFF_la-ffcrr.lo: ff/ffcrr.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcrr.lo `test -f 'ff/ffcrr.f' || echo '$(srcdir)/'`ff/ffcrr.f

ff/libFF_la-ffcxr.lo: ff/ffcxr.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcxr.lo `test -f 'ff/ffcxr.f' || echo '$(srcdir)/'`ff/ffcxr.f

ff/libFF_la-ffcxs3.lo: ff/ffcxs3.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcxs3.lo `test -f 'ff/ffcxs3.f' || echo '$(srcdir)/'`ff/ffcxs3.f

ff/libFF_la-ffcxs4.lo: ff/ffcxs4.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcxs4.lo `test -f 'ff/ffcxs4.f' || echo '$(srcdir)/'`ff/ffcxs4.f

ff/libFF_la-ffcxyz.lo: ff/ffcxyz.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffcxyz.lo `test -f 'ff/ffcxyz.f' || echo '$(srcdir)/'`ff/ffcxyz.f

ff/libFF_la-ffdcc0.lo: ff/ffdcc0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffdcc0.lo `test -f 'ff/ffdcc0.f' || echo '$(srcdir)/'`ff/ffdcc0.f

ff/libFF_la-ffdcxs.lo: ff/ffdcxs.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffdcxs.lo `test -f 'ff/ffdcxs.f' || echo '$(srcdir)/'`ff/ffdcxs.f

ff/libFF_la-ffdel2.lo: ff/ffdel2.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffdel2.lo `test -f 'ff/ffdel2.f' || echo '$(srcdir)/'`ff/ffdel2.f

ff/libFF_la-ffdel3.lo: ff/ffdel3.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffdel3.lo `test -f 'ff/ffdel3.f' || echo '$(srcdir)/'`ff/ffdel3.f

ff/libFF_la-ffdel4.lo: ff/ffdel4.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffdel4.lo `test -f 'ff/ffdel4.f' || echo '$(srcdir)/'`ff/ffdel4.f

ff/libFF_la-ffdel5.lo: ff/ffdel5.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffdel5.lo `test -f 'ff/ffdel5.f' || echo '$(srcdir)/'`ff/ffdel5.f

ff/libFF_la-ffdel6.lo: ff/ffdel6.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffdel6.lo `test -f 'ff/ffdel6.f' || echo '$(srcdir)/'`ff/ffdel6.f

ff/libFF_la-ffdl2i.lo: ff/ffdl2i.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffdl2i.lo `test -f 'ff/ffdl2i.f' || echo '$(srcdir)/'`ff/ffdl2i.f

ff/libFF_la-ffdl5p.lo: ff/ffdl5p.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffdl5p.lo `test -f 'ff/ffdl5p.f' || echo '$(srcdir)/'`ff/ffdl5p.f

ff/libFF_la-ffdxc0.lo: ff/ffdxc0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffdxc0.lo `test -f 'ff/ffdxc0.f' || echo '$(srcdir)/'`ff/ffdxc0.f

ff/libFF_la-ffrcvr.lo: ff/ffrcvr.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffrcvr.lo `test -f 'ff/ffrcvr.f' || echo '$(srcdir)/'`ff/ffrcvr.f

ff/libFF_la-fftran.lo: ff/fftran.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-fftran.lo `test -f 'ff/fftran.f' || echo '$(srcdir)/'`ff/fftran.f

ff/libFF_la-ffxb0.lo: ff/ffxb0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxb0.lo `test -f 'ff/ffxb0.f' || echo '$(srcdir)/'`ff/ffxb0.f

ff/libFF_la-ffxb1.lo: ff/ffxb1.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxb1.lo `test -f 'ff/ffxb1.f' || echo '$(srcdir)/'`ff/ffxb1.f

ff/libFF_la-ffxb2p.lo: ff/ffxb2p.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxb2p.lo `test -f 'ff/ffxb2p.f' || echo '$(srcdir)/'`ff/ffxb2p.f

ff/libFF_la-ffxc0.lo: ff/ffxc0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxc0.lo `test -f 'ff/ffxc0.f' || echo '$(srcdir)/'`ff/ffxc0.f

ff/libFF_la-ffxc0i.lo: ff/ffxc0i.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxc0i.lo `test -f 'ff/ffxc0i.f' || echo '$(srcdir)/'`ff/ffxc0i.f

ff/libFF_la-ffxc0p.lo: ff/ffxc0p.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxc0p.lo `test -f 'ff/ffxc0p.f' || echo '$(srcdir)/'`ff/ffxc0p.f

ff/libFF_la-ffxc1.lo: ff/ffxc1.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxc1.lo `test -f 'ff/ffxc1.f' || echo '$(srcdir)/'`ff/ffxc1.f

ff/libFF_la-ffxd0.lo: ff/ffxd0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxd0.lo `test -f 'ff/ffxd0.f' || echo '$(srcdir)/'`ff/ffxd0.f

ff/libFF_la-ffxd0h.lo: ff/ffxd0h.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxd0h.lo `test -f 'ff/ffxd0h.f' || echo '$(srcdir)/'`ff/ffxd0h.f

ff/libFF_la-ffxd0i.lo: ff/ffxd0i.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxd0i.lo `test -f 'ff/ffxd0i.f' || echo '$(srcdir)/'`ff/ffxd0i.f

ff/libFF_la-ffxd0p.lo: ff/ffxd0p.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxd0p.lo `test -f 'ff/ffxd0p.f' || echo '$(srcdir)/'`ff/ffxd0p.f

ff/libFF_la-ffxd1.lo: ff/ffxd1.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxd1.lo `test -f 'ff/ffxd1.f' || echo '$(srcdir)/'`ff/ffxd1.f

ff/libFF_la-ffxdb0.lo: ff/ffxdb0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxdb0.lo `test -f 'ff/ffxdb0.f' || echo '$(srcdir)/'`ff/ffxdb0.f

ff/libFF_la-ffxdbd.lo: ff/ffxdbd.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxdbd.lo `test -f 'ff/ffxdbd.f' || echo '$(srcdir)/'`ff/ffxdbd.f

ff/libFF_la-ffxdi.lo: ff/ffxdi.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxdi.lo `test -f 'ff/ffxdi.f' || echo '$(srcdir)/'`ff/ffxdi.f

ff/libFF_la-ffxdpv.lo: ff/ffxdpv.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxdpv.lo `test -f 'ff/ffxdpv.f' || echo '$(srcdir)/'`ff/ffxdpv.f

ff/libFF_la-ffxe0.lo: ff/ffxe0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxe0.lo `test -f 'ff/ffxe0.f' || echo '$(srcdir)/'`ff/ffxe0.f

ff/libFF_la-ffxe1.lo: ff/ffxe1.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxe1.lo `test -f 'ff/ffxe1.f' || echo '$(srcdir)/'`ff/ffxe1.f

ff/libFF_la-ffxf0.lo: ff/ffxf0.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxf0.lo `test -f 'ff/ffxf0.f' || echo '$(srcdir)/'`ff/ffxf0.f

ff/libFF_la-ffxf0h.lo: ff/ffxf0h.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxf0h.lo `test -f 'ff/ffxf0h.f' || echo '$(srcdir)/'`ff/ffxf0h.f

ff/libFF_la-ffxli2.lo: ff/ffxli2.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxli2.lo `test -f 'ff/ffxli2.f' || echo '$(srcdir)/'`ff/ffxli2.f

ff/libFF_la-ffxxyz.lo: ff/ffxxyz.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffxxyz.lo `test -f 'ff/ffxxyz.f' || echo '$(srcdir)/'`ff/ffxxyz.f

ff/libFF_la-ffinit.lo: ff/ffinit.f
	$(AM_V_F77)$(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(F77) $(libFF_la_FFLAGS) $(FFLAGS) -c -o ff/libFF_la-ffinit.lo `test -f 'ff/ffinit.f' || echo '$(srcdir)/'`ff/ffinit.f

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf ff/.libs ff/_libs
install-dist_FFDATA: $(dist_FF_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_FF_DATA)'; test -n "$(FFdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(FFdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(FFdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(FFdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(FFdir)" || exit $$?; \
	done

uninstall-dist_FFDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_FF_DATA)'; test -n "$(FFdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(FFdir)'; $(am__uninstall_files_from_dir)
dependencylist-local: 

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(FFdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ff/$(DEPDIR)/$(am__dirstamp)
	-rm -f ff/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

dependencylist: dependencylist-am

dependencylist-am: dependencylist-local

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_FFDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dist_FFDATA

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am dependencylist-am \
	dependencylist-local distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dist_FFDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-dist_FFDATA

.PRECIOUS: Makefile


ff/ffinit.f: $(srcdir)/ff/ffinit.f.in ff/ff.h ff/aa.h
	@mkdir -p $(builddir)/ff
	@sed s%@FFPATH@%"$(pkgdatadir)/ff"% < $(srcdir)/ff/ffinit.f.in > ff/ffinit.f
	@touch ff/ffinit.f

ff/ff.h: $(srcdir)/ff/ff.h.in
	@mkdir -p $(builddir)/ff
	@cp $< $@
	@touch $@

ff/aa.h: $(srcdir)/ff/aa.h.in
	@mkdir -p $(builddir)/ff
	@cp $< $@
	@touch $@

@WITH_QUAD_TRUE@ff/ff.quad.h: ff/ff.h
@WITH_QUAD_TRUE@	@sed s%vbf%vbfquad%g < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffinit.quad.F: $(srcdir)/ff/ffinit.f.in ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" -e "s%@FFPATH@%"$(pkgdatadir)/ff"%" < $(srcdir)/ff/ffinit.f.in > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffinit.quad.o: ff/ffinit.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ff2dl2.quad.F: $(srcdir)/ff/ff2dl2.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ff2dl2.quad.o: ff/ff2dl2.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffabcd.quad.F: $(srcdir)/ff/ffabcd.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffabcd.quad.o: ff/ffabcd.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffca0.quad.F: $(srcdir)/ff/ffca0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffca0.quad.o: ff/ffca0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcb0.quad.F: $(srcdir)/ff/ffcb0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcb0.quad.o: ff/ffcb0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcb1.quad.F: $(srcdir)/ff/ffcb1.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcb1.quad.o: ff/ffcb1.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcb2p.quad.F: $(srcdir)/ff/ffcb2p.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcb2p.quad.o: ff/ffcb2p.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcdb0.quad.F: $(srcdir)/ff/ffcdb0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcdb0.quad.o: ff/ffcdb0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcc0.quad.F: $(srcdir)/ff/ffcc0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcc0.quad.o: ff/ffcc0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcc0p.quad.F: $(srcdir)/ff/ffcc0p.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcc0p.quad.o: ff/ffcc0p.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcc1.quad.F: $(srcdir)/ff/ffcc1.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcc1.quad.o: ff/ffcc1.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcel2.quad.F: $(srcdir)/ff/ffcel2.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcel2.quad.o: ff/ffcel2.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcel3.quad.F: $(srcdir)/ff/ffcel3.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcel3.quad.o: ff/ffcel3.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcel4.quad.F: $(srcdir)/ff/ffcel4.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcel4.quad.o: ff/ffcel4.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcel5.quad.F: $(srcdir)/ff/ffcel5.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcel5.quad.o: ff/ffcel5.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffceta.quad.F: $(srcdir)/ff/ffceta.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffceta.quad.o: ff/ffceta.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcli2.quad.F: $(srcdir)/ff/ffcli2.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcli2.quad.o: ff/ffcli2.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcrr.quad.F: $(srcdir)/ff/ffcrr.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcrr.quad.o: ff/ffcrr.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcxr.quad.F: $(srcdir)/ff/ffcxr.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcxr.quad.o: ff/ffcxr.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcxs3.quad.F: $(srcdir)/ff/ffcxs3.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcxs3.quad.o: ff/ffcxs3.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcxs4.quad.F: $(srcdir)/ff/ffcxs4.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcxs4.quad.o: ff/ffcxs4.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffcxyz.quad.F: $(srcdir)/ff/ffcxyz.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffcxyz.quad.o: ff/ffcxyz.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffdcc0.quad.F: $(srcdir)/ff/ffdcc0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffdcc0.quad.o: ff/ffdcc0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffdcxs.quad.F: $(srcdir)/ff/ffdcxs.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffdcxs.quad.o: ff/ffdcxs.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffdel2.quad.F: $(srcdir)/ff/ffdel2.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffdel2.quad.o: ff/ffdel2.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffdel3.quad.F: $(srcdir)/ff/ffdel3.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffdel3.quad.o: ff/ffdel3.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffdel4.quad.F: $(srcdir)/ff/ffdel4.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffdel4.quad.o: ff/ffdel4.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffdel5.quad.F: $(srcdir)/ff/ffdel5.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffdel5.quad.o: ff/ffdel5.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffdel6.quad.F: $(srcdir)/ff/ffdel6.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffdel6.quad.o: ff/ffdel6.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffdl2i.quad.F: $(srcdir)/ff/ffdl2i.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffdl2i.quad.o: ff/ffdl2i.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffdl5p.quad.F: $(srcdir)/ff/ffdl5p.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffdl5p.quad.o: ff/ffdl5p.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffdxc0.quad.F: $(srcdir)/ff/ffdxc0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffdxc0.quad.o: ff/ffdxc0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffrcvr.quad.F: $(srcdir)/ff/ffrcvr.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffrcvr.quad.o: ff/ffrcvr.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/fftran.quad.F: $(srcdir)/ff/fftran.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/fftran.quad.o: ff/fftran.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxb0.quad.F: $(srcdir)/ff/ffxb0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxb0.quad.o: ff/ffxb0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxb1.quad.F: $(srcdir)/ff/ffxb1.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxb1.quad.o: ff/ffxb1.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxb2p.quad.F: $(srcdir)/ff/ffxb2p.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxb2p.quad.o: ff/ffxb2p.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxc0.quad.F: $(srcdir)/ff/ffxc0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxc0.quad.o: ff/ffxc0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxc0i.quad.F: $(srcdir)/ff/ffxc0i.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxc0i.quad.o: ff/ffxc0i.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxc0p.quad.F: $(srcdir)/ff/ffxc0p.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxc0p.quad.o: ff/ffxc0p.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxc1.quad.F: $(srcdir)/ff/ffxc1.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxc1.quad.o: ff/ffxc1.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxd0.quad.F: $(srcdir)/ff/ffxd0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxd0.quad.o: ff/ffxd0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxd0h.quad.F: $(srcdir)/ff/ffxd0h.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxd0h.quad.o: ff/ffxd0h.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxd0i.quad.F: $(srcdir)/ff/ffxd0i.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxd0i.quad.o: ff/ffxd0i.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxd0p.quad.F: $(srcdir)/ff/ffxd0p.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxd0p.quad.o: ff/ffxd0p.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxd1.quad.F: $(srcdir)/ff/ffxd1.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxd1.quad.o: ff/ffxd1.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxdb0.quad.F: $(srcdir)/ff/ffxdb0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxdb0.quad.o: ff/ffxdb0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxdbd.quad.F: $(srcdir)/ff/ffxdbd.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxdbd.quad.o: ff/ffxdbd.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxdi.quad.F: $(srcdir)/ff/ffxdi.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxdi.quad.o: ff/ffxdi.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxdpv.quad.F: $(srcdir)/ff/ffxdpv.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxdpv.quad.o: ff/ffxdpv.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxe0.quad.F: $(srcdir)/ff/ffxe0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxe0.quad.o: ff/ffxe0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxe1.quad.F: $(srcdir)/ff/ffxe1.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxe1.quad.o: ff/ffxe1.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxf0.quad.F: $(srcdir)/ff/ffxf0.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxf0.quad.o: ff/ffxf0.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxf0h.quad.F: $(srcdir)/ff/ffxf0h.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxf0h.quad.o: ff/ffxf0h.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxli2.quad.F: $(srcdir)/ff/ffxli2.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxli2.quad.o: ff/ffxli2.quad.F ff/ff.quad.h

@WITH_QUAD_TRUE@ff/ffxxyz.quad.F: $(srcdir)/ff/ffxxyz.f ff/ff.quad.h
@WITH_QUAD_TRUE@	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < $< > $@
@WITH_QUAD_TRUE@	@touch $@

@WITH_QUAD_TRUE@ff/ffxxyz.quad.o: ff/ffxxyz.quad.F ff/ff.quad.h

clean-local:
	rm -f $(BUILT_SOURCES) ff/ff.quad.h ff/aa.h ff/ff.h

#
# This script generates the entries for the .quad.F files above
# ff.h and ffinit.f need special treatment
#
# #! /bin/sh
# LIST="ff/ff2dl2.f ff/ffabcd.f ff/ffca0.f ff/ffcb0.f ff/ffcb1.f ff/ffcb2p.f ff/ffcdb0.f ff/ffcc0.f ff/ffcc0p.f ff/ffcc1.f ff/ffcel2.f ff/ffcel3.f ff/ffcel4.f ff/ffcel5.f ff/ffceta.f ff/ffcli2.f ff/ffcrr.f ff/ffcxr.f ff/ffcxs3.f ff/ffcxs4.f ff/ffcxyz.f ff/ffdcc0.f ff/ffdcxs.f ff/ffdel2.f ff/ffdel3.f ff/ffdel4.f ff/ffdel5.f ff/ffdel6.f ff/ffdl2i.f ff/ffdl5p.f ff/ffdxc0.f ff/ffrcvr.f ff/fftran.f ff/ffxb0.f ff/ffxb1.f ff/ffxb2p.f ff/ffxc0.f ff/ffxc0i.f ff/ffxc0p.f ff/ffxc1.f ff/ffxd0.f ff/ffxd0h.f ff/ffxd0i.f ff/ffxd0p.f ff/ffxd1.f ff/ffxdb0.f ff/ffxdbd.f ff/ffxdi.f ff/ffxdpv.f ff/ffxe0.f ff/ffxe1.f ff/ffxf0.f ff/ffxf0h.f ff/ffxli2.f ff/ffxxyz.f"
# 
# for i in $LIST; do
# quadin=`echo $i | sed -e "s/\.f/.quad.F/"`
# quadout=`echo $i | sed -e "s/\.f/.quad.o/"`
# cat <<EOF
# $quadin: \$(srcdir)/$i ff/ff.quad.h
# 	@sed -e "s%vbf%vbfquad%g" -e "s%ff\.h%ff.quad.h%g" < \$< > \$@
# 	@touch \$@
# 
# $quadout: $quadin ff/ff.quad.h
# 
# EOF
# done

$(top_builddir)/include/%.mod: libFF_la-%.lo
	$(MAKE) $^
-include $(srcdir)/Makefile.dep

dependencylist-local:
	@case "$(top_srcdir)" in \
	  /*) \
	    for i in $(DEPDIR)/*.Po $(DEPDIR)/*.Plo; do \
	      if test -e $$i ; then \
	        echo "# --- $$i ---"; \
	        cat $$i | \
	          sed 's#$(top_srcdir)#$$(top_srcdir)#' | \
	          sed 's#$(FEYNHIGGS_DIR)#$$(FEYNHIGGS_DIR)#' | \
	          sed 's#$(HEPMC_DIR)#$$(HEPMC_DIR)#' | \
	          sed 's#$(LHAPDF_DIR)#$$(LHAPDF_DIR)#' | \
	          sed 's#$(LOOPTOOLS_DIR)#$$(LOOPTOOLS_DIR)#' | \
	          sed 's#$(ROOTPATH)#$$(ROOTPATH)#'; \
	        echo; \
	      fi; \
	    done > $(srcdir)/Makefile.dep; \
	    ;; \
	  *) \
	    echo "Error: Use absolute path to configure" >&2; \
	    exit 1; \
	    ;; \
	esac

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
